var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { HtBaseApi } from "./base";
var HtAccountUserApi = (function (_super) {
    __extends(HtAccountUserApi, _super);
    function HtAccountUserApi(request) {
        var _this = _super.call(this, request, "account_users") || this;
        _this.name = "user";
        return _this;
    }
    HtAccountUserApi.prototype.login = function (user) {
        var tail = "login/";
        return this.request.postObservable(this.request.baseUrl + tail, user);
    };
    HtAccountUserApi.prototype.get = function (id, token) {
        var path = this.base + "/" + id + "/";
        return this.api$(path, {}, { isAdmin: true });
    };
    HtAccountUserApi.prototype.memberships = function (id, query, options) {
        if (query === void 0) { query = {}; }
        var path = this.base + "/" + id + "/memberships/";
        return this.api$(path, query, options);
    };
    HtAccountUserApi.prototype.membershipsAll = function (id, query, token) {
        var options = { isAdmin: true, token: token };
        return this.allPages(this.memberships(id, query, options), options);
    };
    return HtAccountUserApi;
}(HtBaseApi));
export { HtAccountUserApi };
//# sourceMappingURL=account-user.js.map