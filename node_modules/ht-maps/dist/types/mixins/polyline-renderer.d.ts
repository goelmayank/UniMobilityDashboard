import { Constructor } from "../interfaces";
import { MapInstance } from "../map-utils/map-instance";
import { ITimeAwarePoint } from "ht-models";
import { IPathBearingTime } from "ht-models";
import { HtPosition } from "ht-models";
export interface IPolylinesBase {
    getPath?(path: ITimeAwarePoint[]): HtPosition[];
    getEncodedPositionTime: any;
    getEncodedPath(data: any): any;
    getStyle: (string?) => object;
    mapInstance: MapInstance;
    toNotSetMap?: boolean;
}
export declare function PolylinesMixin<TBase extends Constructor<IPolylinesBase>>(Base: TBase): {
    new (...args: any[]): {
        positionTimeArray: any[];
        getItem(data: any): any;
        getBounds(item: any, bounds?: any): any;
        update({item, data}: {
            item: any;
            data: any;
        }, pathBearing: IPathBearingTime): void;
        setItemStyle(item: any, style: any): void;
        getPath?(path: (string | number)[][]): HtPosition[];
        getEncodedPositionTime: any;
        getEncodedPath(data: any): any;
        getStyle: (string?: any) => object;
        mapInstance: MapInstance;
        toNotSetMap?: boolean;
    };
} & TBase;
