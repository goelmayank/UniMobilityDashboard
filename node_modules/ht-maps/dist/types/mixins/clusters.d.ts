import { Constructor, Entities } from "../interfaces";
import { HtMap } from "ht-map-wrapper";
import { MapInstance } from "../map-utils/map-instance";
export interface IClusterBase {
    entities: Entities<any>;
    mapInstance: MapInstance;
    trace(items: any[], map?: HtMap): void;
    removeItem(item: any): void;
    removeAll(entities: any): void;
}
export declare function ClusterMixin<TBase extends Constructor<IClusterBase>>(Base: TBase): {
    new (...arg: any[]): {
        forceExtendBounds: boolean;
        toNotSetMap: boolean;
        cluster: any;
        trace(items: any, map?: any): void;
        addCluster(): void;
        traceEffect(): void;
        getBounds(item: any, bounds?: any): any;
        removeItem(item: any): void;
        removeAll(entities: any): void;
        clearAllClusters(data: any[]): void;
        entities: Entities<any>;
        mapInstance: MapInstance;
    };
} & TBase;
