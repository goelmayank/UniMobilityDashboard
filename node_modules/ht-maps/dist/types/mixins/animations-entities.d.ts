import { Constructor, Entity } from "../interfaces";
import { IPathBearingTime } from "ht-models";
import { TimeAwareAnimation } from "time-aware-polyline";
export interface IAnimationsEntitiesBase {
    getEntity(id?: any): Entity<any>;
    getTimeAwarePolyline?(data: any): string;
    clearItem(entity: any): void;
    update(entity: any, pathBearing: IPathBearingTime): void;
    trackBy(datum: any): string;
    trackAnimationBy(datum: any): string;
}
export declare function AnimationsEntitiesMixin<TBase extends Constructor<IAnimationsEntitiesBase>>(Base: TBase): {
    new (...args: any[]): {
        isAnimated: boolean;
        animationEntities: AnimationsEntities;
        toNotTraceItem: boolean;
        subs: {
            [id: string]: any;
        };
        setTimeAwareAnimationEntity(animationEntity?: AnimationsEntities): void;
        clearItem(entity: any): void;
        update(entity: any, pathBearing: any): void;
        initSub(id: any, animId?: string): void;
        clearSub(id: any): void;
        getEntity(id?: any): Entity<any>;
        getTimeAwarePolyline?(data: any): string;
        trackBy(datum: any): string;
        trackAnimationBy(datum: any): string;
    };
} & TBase;
export declare class AnimationsEntities {
    enitites: {
        [id: string]: TimeAwareAnimation;
    };
    clearItem(id: any): void;
    update(id: any, polyline: string): void;
    getEntity(id: string): TimeAwareAnimation;
}
