import { map } from "rxjs/operators";
var TrackingState = (function () {
    function TrackingState() {
    }
    TrackingState.prototype.setMapData = function () {
        this.mapData$ = this.data$.pipe(map(function (data) {
            return getMarkersArray(data);
        }));
    };
    return TrackingState;
}());
export { TrackingState };
export function getMarkersArray(array, isNew) {
    var _this = this;
    if (isNew === void 0) { isNew = false; }
    return array.reduce(function (acc, item) {
        var isValid = _this.isValidMapItems
            ? _this.isValidMapItems(item)
            : false;
        if (isValid) {
            acc.valid.push(item);
        }
        else {
            acc.invalid.push(item);
        }
        return acc;
    }, { valid: [], invalid: [], isNew: isNew });
}
//# sourceMappingURL=tracking-state.js.map