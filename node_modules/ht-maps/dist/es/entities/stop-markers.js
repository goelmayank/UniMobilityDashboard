import { stopStyles } from "../styles/stop-styles";
import { Color, HMString, TimeString, DateString } from "ht-utility";
import { itemsFactory } from "../base/map-items-factory";
import { PopupMixin } from "../mixins/popup-renderer";
import { TraceMixin } from "../mixins/trace";
import { ExtendBoundsMixin } from "../mixins/extend-bounds";
import { CircleMixin } from "../mixins/circle-renderer";
import { MarkersMixin } from "../mixins/marker-renderer";
import { StyleMixin } from "../mixins/styles";
import { MapItemsMixin } from "../mixins/map-items";
export var stopMarkersConfig = {
    renderConfig: {
        getPosition: function (data) {
            if (data.location && data.location.geojson) {
                var lat = data.location.geojson.coordinates[1];
                var lng = data.location.geojson.coordinates[0];
                return { lat: lat, lng: lng };
            }
            else {
                return null;
            }
        },
        getInfoContent: function (data) {
            var durationString = null;
            if (data.started_at && data.ended_at) {
                var durationMin = new Date(new Date(data.ended_at).getTime() -
                    new Date(data.started_at).getTime()).getTime() /
                    (1000 * 60);
                durationString = HMString(durationMin);
            }
            var start = TimeString(data.started_at);
            var end = TimeString(data.ended_at);
            var startDate = DateString(data.started_at);
            var startDateShort = DateString(data.started_at, "short");
            var endDate = DateString(data.ended_at);
            var sameDate = startDate == endDate;
            function htShow(item) {
                return "display: " + (item ? "flex" : "none");
            }
            return "<div class=\"flex-column\">\n<strong class=\"text-muted text-center\" style=\"padding-bottom: 0; color: " + Color.stop + "\">Stop</strong>\n<div style=\"display: " + (start ? "display" : "none") + "\" class=\"flex-row space-between\">\n    <div>" + (start ||
                "--:--") + "</div><div>&nbsp; to &nbsp;</div><div class=\"text-right\">" + (end ||
                "--:--") + "</div>\n</div>\n<div style=\"" + htShow(startDate || endDate) + "\" class=\"" + (sameDate || !endDate ? "space-around" : "space-between") + " text-2 text-muted flex-row\">\n    <div>" + startDateShort + "</div><div style=\"display: " + (sameDate || !endDate ? "none" : "block") + "\">" + endDate + "</div>\n</div>\n<div style=\"display: " + (durationString ? "block" : "none") + "\" class=\"text-3 text-center\">" + durationString + "</div>\n</div>";
        }
    },
    styleFunct: stopStyles,
    typeConfig: {
        hasPopup: true,
        isCircle: true,
        hasDataObservable: false
    },
    name: "stop"
};
export var stopMarkersTrace = function () {
    return itemsFactory(stopMarkersConfig);
};
var StopMarkers = (function () {
    function StopMarkers(mapInstance) {
        this.mapInstance = mapInstance;
        this.styleFunct = stopStyles;
    }
    StopMarkers.prototype.getPosition = function (data) {
        if (data.location && data.location.geojson) {
            var lat = data.location.geojson.coordinates[1];
            var lng = data.location.geojson.coordinates[0];
            return { lat: lat, lng: lng };
        }
        else {
            return null;
        }
    };
    ;
    StopMarkers.prototype.getInfoContent = function (data) {
        var durationString = null;
        if (data.started_at && data.ended_at) {
            var durationMin = new Date(new Date(data.ended_at).getTime() -
                new Date(data.started_at).getTime()).getTime() /
                (1000 * 60);
            durationString = HMString(durationMin);
        }
        var start = TimeString(data.started_at);
        var end = TimeString(data.ended_at);
        var startDate = DateString(data.started_at);
        var startDateShort = DateString(data.started_at, "short");
        var endDate = DateString(data.ended_at);
        var sameDate = startDate == endDate;
        function htShow(item) {
            return "display: " + (item ? "flex" : "none");
        }
        return "<div class=\"flex-column\">\n<strong class=\"text-muted text-center\" style=\"padding-bottom: 0; color: " + Color.stop + "\">Stop</strong>\n<div style=\"display: " + (start ? "display" : "none") + "\" class=\"flex-row space-between\">\n    <div>" + (start ||
            "--:--") + "</div><div>&nbsp; to &nbsp;</div><div class=\"text-right\">" + (end ||
            "--:--") + "</div>\n</div>\n<div style=\"" + htShow(startDate || endDate) + "\" class=\"" + (sameDate || !endDate ? "space-around" : "space-between") + " text-2 text-muted flex-row\">\n    <div>" + startDateShort + "</div><div style=\"display: " + (sameDate || !endDate ? "none" : "block") + "\">" + endDate + "</div>\n</div>\n<div style=\"display: " + (durationString ? "block" : "none") + "\" class=\"text-3 text-center\">" + durationString + "</div>\n</div>";
    };
    return StopMarkers;
}());
export { StopMarkers };
export var StopMarkersTrace = PopupMixin(TraceMixin(ExtendBoundsMixin(CircleMixin(MarkersMixin(StyleMixin(MapItemsMixin(StopMarkers)))))));
// export abstract class StopMarkers {
//   name = "Stop";
//   styleFunct = stopStyles;
//
//   htShow(item) {
//     return `display: ${item ? 'flex' : 'none'}`
//   };
//
//   getPosition(data) {
//     if(data.location && data.location.geojson) {
//       let lat = data.location.geojson.coordinates[1];
//       let lng = data.location.geojson.coordinates[0];
//       return {lat, lng}
//     } else {
//       return null;
//     }
//
//   };
//
//   getInfoContent(data: ISegment) {
//     function htShow(item) {
//       return `display: ${item ? 'flex' : 'none'}`
//     };
//     console.log(this.htShow, "htShow");
//     let durationString = null;
//     if(data.started_at && data.ended_at) {
//       let durationMin = (new Date(new Date(data.ended_at).getTime() - new Date(data.started_at).getTime()).getTime()) / (1000 * 60);
//       durationString = HMString(durationMin)
//     }
//
//     let start = TimeString(data.started_at);
//     let end = TimeString(data.ended_at);
//     let startDate = DateString(data.started_at);
//     let startDateShort = DateString(data.started_at, 'short');
//     let endDate = DateString(data.ended_at);
//     let sameDate = startDate == endDate;
//     return `<div class="flex-column">
// <strong class="text-muted text-center" style="padding-bottom: 0; color: ${Color.stop}">Stop</strong>
// <div style="display: ${start ? 'display' : 'none'}" class="flex-row space-between">
//     <div>${start || '--:--'}</div><div>&nbsp; to &nbsp;</div><div class="text-right">${end || '--:--'}</div>
// </div>
// <div style="${htShow(startDate || endDate)}" class="${sameDate || !endDate ? 'space-around' : 'space-between'} text-2 text-muted flex-row">
//     <div>${startDateShort}</div><div style="display: ${sameDate || !endDate ? 'none' : 'block'}">${endDate}</div>
// </div>
// <div style="display: ${durationString ? 'block' : 'none'}" class="text-3 text-center">${durationString}</div>
// </div>`
//   }
// }
//
// export const StopMarkersTrace = mapItemsFactory(StopMarkers, {
//   hasPopup: true,
//   isCircle: true,
//   hasDataObservable: false
// });
//# sourceMappingURL=stop-markers.js.map