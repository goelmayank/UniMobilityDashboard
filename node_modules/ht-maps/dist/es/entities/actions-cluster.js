import { htAction } from "ht-data";
import { DateString, HMString, NameCase, TimeString } from "ht-utility";
import { DataObservableMixin } from "../mixins/data-observable";
import { PopupMixin } from "../mixins/popup-renderer";
import { ClusterMixin } from "../mixins/clusters";
import { ExtendBoundsMixin } from "../mixins/extend-bounds";
import { MarkersMixin } from "../mixins/marker-renderer";
import { StyleMixin } from "../mixins/styles";
import { TraceMixin } from "../mixins/trace";
import { DivMarkersMixin } from "../mixins/div-markers-renderes";
import { MapItemsMixin } from "../mixins/map-items";
var ActionsCluster = (function () {
    function ActionsCluster(mapInstance) {
        this.mapInstance = mapInstance;
        this.styleFunct = {
            get: function (type) {
                switch (type) {
                    case 'google': {
                        return {
                            default: {
                                flat: true,
                                anchor: RichMarkerPosition.MIDDLE,
                                zIndex: 1
                            },
                            popup: {
                                pixelOffset: new google.maps.Size(0, -5),
                            }
                        };
                    }
                    case 'leaflet': {
                        return {
                            default: {
                                iconAnchor: [12, 12]
                                // iconSize: [35, 35],
                                // className: 'current-action-marker',
                                // iconAnchor: point(15, 43)
                                // iconAnchor: [15, 43]
                            },
                            popup: {
                                // offset: point(0, -35),
                                offset: [0, -5],
                                closeButton: false
                            }
                        };
                    }
                }
            }
        };
    }
    ActionsCluster.prototype.getPosition = function (data) {
        return htAction(data).getPosition();
    };
    ActionsCluster.prototype.getDivContent = function (action) {
        var icon = "<div class=\"action-marker flex-row\">\n<span style=\"margin: auto\">" + NameCase(action.type[0]) + "</span>\n</div>";
        return icon;
    };
    ActionsCluster.prototype.getInfoContent = function (item) {
        function htShow(item, style) {
            if (style === void 0) { style = "flex"; }
            return "display: " + (item ? style : "none");
        }
        var userName = item.user ? item.user.name : '';
        return "<div class=\"flex-column flex-center\" style=\"min-width: 180px\">\n<div class=\"\">\n    <div class=\"text-center\">" + NameCase(item.type) + "\n    <span style=\"" + htShow(item.display.duration_remaining && !item.display.show_summary) + "\"> in " + HMString(item.display.duration_remaining / 60) + "</span>\n    <span style=\"" + htShow(!!item.completed_at) + "\"> completed at " + TimeString(item.completed_at) + "</span>\n   \n    </div>\n</div>\n    <div class=\"text-muted text-center\" style=\"" + htShow(!!item.completed_at) + "\"> " + DateString(item.completed_at) + "</div>\n<div class=\"text-center\">" + NameCase(userName) + "<span style=\"" + htShow(!!item.lookup_id, 'block') + "\"> | #" + item.lookup_id + "</span></div>\n</div>";
    };
    ActionsCluster.prototype.traceEffect = function () {
    };
    return ActionsCluster;
}());
export { ActionsCluster };
;
export var ActionsClusterTrace = DataObservableMixin(PopupMixin(ClusterMixin(TraceMixin(ExtendBoundsMixin(DivMarkersMixin(MarkersMixin(StyleMixin(MapItemsMixin(ActionsCluster)))))))));
//# sourceMappingURL=actions-cluster.js.map