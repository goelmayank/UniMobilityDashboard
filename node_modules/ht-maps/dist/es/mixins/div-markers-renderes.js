var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
export function DivMarkersMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getItem = function (data) {
            return this.mapInstance.mapUtils.getDivMarker();
        };
        class_1.prototype.update = function (_a, pathBearing) {
            var item = _a.item, data = _a.data;
            var bearing = pathBearing ? pathBearing.bearing : null;
            var content = this.getDivContent(data, bearing);
            this.setContent({ item: item, content: content });
            _super.prototype.update.call(this, { item: item, data: data }, pathBearing);
        };
        class_1.prototype.setContent = function (_a) {
            var item = _a.item, content = _a.content;
            this.mapInstance.mapUtils.setDivContent(item, content, this.getStyle());
        };
        class_1.prototype.setStyle = function (entity) {
            // let style = this.getStyle();
            // GlobalMap.mapUtils.setDivMarkerStyle(item, style)
        };
        return class_1;
    }(Base));
}
//# sourceMappingURL=div-markers-renderes.js.map