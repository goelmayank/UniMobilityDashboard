var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { TimeAwareAnimation } from "time-aware-polyline";
export function AnimationMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            // bearing: number = 0;
            // item;
            _this.isAnimated = true;
            return _this;
        }
        class_1.prototype.setTimeAwareAnimation = function (animation) {
            var _this = this;
            this.animation = animation || new TimeAwareAnimation();
            this.animation.updateEvent.subscribe('update', function (_a) {
                var path = _a.path, bearing = _a.bearing;
                var entity = _this.getEntity();
                if (entity)
                    _this.update(entity, { path: path, bearing: bearing });
            });
        };
        return class_1;
    }(Base));
}
//# sourceMappingURL=animation-renderer.js.map