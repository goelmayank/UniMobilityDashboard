var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { positionTime } from "../helpers/position-time-helper";
export function PolylinesMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.positionTimeArray = [];
            return _this;
        }
        class_1.prototype.getItem = function (data) {
            return this.mapInstance.mapUtils.getPolyline();
        };
        class_1.prototype.getBounds = function (item, bounds) {
            return this.mapInstance.mapUtils.extendBoundsWithPolyline(item, bounds);
        };
        class_1.prototype.update = function (_a, pathBearing) {
            var item = _a.item, data = _a.data;
            if (this.getPath || pathBearing) {
                var path = pathBearing ? pathBearing.path : this.getPath(data);
                this.mapInstance.mapUtils.setPath(item, path);
            }
            else if (this.getEncodedPositionTime) {
                this.positionTimeArray = positionTime.decode(this.getEncodedPositionTime(data));
                this.mapInstance.mapUtils.setPathPositionTimeArray(item, this.positionTimeArray);
            }
            else {
                this.mapInstance.mapUtils.setEncodedPath(item, this.getEncodedPath(data));
            }
            if (!this.toNotSetMap)
                this.mapInstance.mapUtils.setMap(item, this.mapInstance.map);
        };
        class_1.prototype.setItemStyle = function (item, style) {
            this.mapInstance.mapUtils.setPolylineStyle(item, style);
        };
        return class_1;
    }(Base));
}
//# sourceMappingURL=polyline-renderer.js.map