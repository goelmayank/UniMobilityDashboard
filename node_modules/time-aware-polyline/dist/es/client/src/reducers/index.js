import { combineReducers } from "../store/utils";
import { createFeatureSelector, createSelector } from "../store/selector";
import * as fromUsers from "./user-reducer";
import * as fromSegments from "./segments-reducer";
import * as fromGroups from "./groups-reducer";
import * as fromAccounts from "./account-reducer";
import * as fromActions from "./actions-reducer";
export var reducers = {};
export function reducer(state, action) {
    return combineReducers(reducers);
}
export var metaReducers = [];
/**
 * Users selectors
 */
export var getUsersState = createFeatureSelector("users");
export var getUsersUsersData = createSelector(getUsersState, fromUsers.getUserData);
export var getUsersPlacelineId = createSelector(getUsersState, fromUsers.getPlacelineId);
export var getUsersPlacelineQuery = createSelector(getUsersState, fromUsers.getPlacelineQuery);
export var getUsersPlacelineLoading = createSelector(getUsersState, fromUsers.getPlacelineLoading);
export var getUsersListActive = createSelector(getUsersState, fromUsers.getListActive);
export var getUsersListId = createSelector(getUsersState, fromUsers.getListId);
export var getUsersListQuery = createSelector(getUsersState, fromUsers.getListQuery);
export var getUsersAnalyticsPage = createSelector(getUsersState, fromUsers.getAnalyticsPage);
export var getUsersAnalyticsLoading = createSelector(getUsersState, fromUsers.getAnalyticsLoading);
export var getUsersIndexPage = createSelector(getUsersState, fromUsers.getIndexPage);
// export const getUsersListApiType = createSelector(getUsersState, fromUsers.getListApiType);
export var getUsersIndexIsActive = createSelector(getUsersState, fromUsers.getIndexActive);
export var getUsersAnalyticsIsActive = createSelector(getUsersState, fromUsers.getAnalyticsActive);
export var getUsersIndexMarkersIsActive = createSelector(getUsersState, fromUsers.getIndexMarkersActive);
export var getUsersAnalyticsMarkersIsActive = createSelector(getUsersState, fromUsers.getAnalyticsMarkersActive);
export var getUsersAnalyticsAllLoading = createSelector(getUsersState, fromUsers.getAnalyticsAllLoading);
export var getUsersIndexFilteredMarker = createSelector(getUsersState, fromUsers.getIndexFilteredMarkers);
export var getUsersAnalyticsFilteredMarker = createSelector(getUsersState, fromUsers.getAnalyticFilteredMarkers);
export var getUsersIndexAll = createSelector(getUsersState, fromUsers.getIndexAll);
export var getUsersAnalyticsAll = createSelector(getUsersState, fromUsers.getAnalyticsAll);
export var getUsersSummary = createSelector(getUsersState, fromUsers.getSummary);
export var getUsersSummaryActive = createSelector(getUsersState, fromUsers.getSummaryActive);
export var getUsersSummaryLoading = createSelector(getUsersState, fromUsers.getSummaryLoading);
/**
 * Segment selectors
 */
export var getSegmentsState = createFeatureSelector("segments");
export var getSegmentsSelectedId = createSelector(getSegmentsState, fromSegments.getSelectedId);
export var getSegmentsResetMapId = createSelector(getSegmentsState, fromSegments.getResetMapId);
/**
 *
 * Groups reducer
 */
export var getGroupsState = createFeatureSelector("groups");
export var getGroupId = createSelector(getGroupsState, fromGroups.getId);
export var getGroupAll = createSelector(getGroupsState, fromGroups.getAllGroups);
export var getGroupListActive = createSelector(getGroupsState, fromGroups.getListActive);
/**
 Account
 */
export var getAccountState = createFeatureSelector("accounts");
export var getAccountUser = createSelector(getAccountState, fromAccounts.getAccountUser);
export var getAccountMembershipsAll = createSelector(getAccountState, fromAccounts.getMembershipsAll);
export var getAccountKey = createSelector(getAccountState, fromAccounts.getKey);
export var getAccountTempKey = createSelector(getAccountState, fromAccounts.getTempKey);
export var getAccountCurrentKey = createSelector(getAccountState, fromAccounts.getCurrentKey);
export var getAccountUserId = createSelector(getAccountState, fromAccounts.getUserId);
/**
 * Actions
 */
export var getActionsState = createFeatureSelector("actions");
export var getActionsList = createSelector(getActionsState, fromActions.getList);
export var getActionsListLoading = createSelector(getActionsState, fromActions.getListLoading);
export var getActionsListActive = createSelector(getActionsState, fromActions.getListActive);
export var getActionsListQuery = createSelector(getActionsState, fromActions.getListQuery);
export var getActionsSummary = createSelector(getActionsState, fromActions.getSummary);
export var getActionsSummaryActive = createSelector(getActionsState, fromActions.getSummaryActive);
export var getActionsSummaryLoading = createSelector(getActionsState, fromActions.getSummaryLoading);
export var getActionsSummaryQuery = createSelector(getActionsState, fromActions.getSummaryQuery);
export var getActionsGraph = createSelector(getActionsState, fromActions.getGraph);
export var getActionsGraphLoading = createSelector(getActionsState, fromActions.getGraphLoading);
export var getActionsGraphQuery = createSelector(getActionsState, fromActions.getGraphQuery);
//# sourceMappingURL=index.js.map