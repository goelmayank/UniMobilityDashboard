import { Action, ActionReducerFactory, ActionReducerMap, InitialState, MetaReducer } from "./models";
export declare type StoreConfig<T, V extends Action = Action> = {
    initialState?: InitialState<T>;
    reducerFactory?: ActionReducerFactory<T, V>;
    metaReducers?: MetaReducer<T, V>[];
};
export declare class StoreProvider {
    INITIAL_STATE: any;
    metaReducers: any;
    _REDUCER_FACTORY: any;
    REDUCER_FACTORY: any;
    dispatcher: any;
    reducerManager: any;
    SCANNED_ACTIONS_SUBJECT_PROVIDERS: any;
    STATE_PROVIDERS: any;
    STORE_PROVIDERS: any;
    EFFECTS_PROVIDERS: any;
    constructor(reducers: ActionReducerMap<any, any>, config?: StoreConfig<any, any>);
}
export declare const storeFactory: (reducers: any, config?: StoreConfig<any, any>) => StoreProvider;
