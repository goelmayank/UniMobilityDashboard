import { EntityClient } from "../../base/entity-client";
import { Store } from "../../store/store";
import * as fromRoot from "../../reducers";
import { Observable } from "rxjs/Observable";
import { DateRange } from "../../global/date-range";
import { HtGroupsApi } from "ht-api";
import { Page, IGroup } from "ht-models";
export declare class HtGroupsClient extends EntityClient {
    list: any;
    item: any;
    api: HtGroupsApi;
    store: Store<fromRoot.State>;
    constructor(options?: {});
    key$(id: any): Observable<any>;
    lookupIdKey$(lookupId: any): Observable<any>;
    getChildren(groupId: string): Observable<Page<IGroup>>;
    getRoot(): Observable<Page<IGroup>>;
    getAll(query: any): any;
}
export declare const groupsClientFactory: (options?: Partial<IGroupClientConfig>) => HtGroupsClient;
export interface IGroupClientConfig {
    dateRange: DateRange;
    noDateRange: boolean;
}
