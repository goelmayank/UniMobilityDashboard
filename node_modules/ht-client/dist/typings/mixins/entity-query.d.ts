import { Observable } from "rxjs/Observable";
import { IAllowedQueryMap } from "ht-data";
import { Constructor } from "ht-models";
import { DateRange } from "../global/date-range";
export interface IListQueryBase {
    query$: Observable<null | object>;
    allowedQueryMap?: IAllowedQueryMap[];
    getDefaultQuery(): object;
    dateRange?: DateRange;
    dateParam?: string;
    active$?: Observable<boolean>;
}
export declare function listQueryMixin<TBase extends Constructor<IListQueryBase>>(Base: TBase): {
    new (...args: any[]): {
        getApiQuery$(): Observable<any>;
        getBaseQuery$(): Observable<{}>;
        getApiParams$(): Observable<any[]>;
        query$: Observable<object>;
        allowedQueryMap?: IAllowedQueryMap[];
        getDefaultQuery(): object;
        dateRange?: DateRange;
        dateParam?: string;
        active$?: Observable<boolean>;
    };
} & TBase;
export interface IItemQueryBase {
    query$: Observable<null | object>;
    getDefaultQuery(): object;
    id$: Observable<string | null>;
}
export declare function itemQueryMixin<TBase extends Constructor<IItemQueryBase>>(Base: TBase): {
    new (...args: any[]): {
        getApiQuery$(): Observable<{}>;
        getApiParams$(): Observable<[string, {}]>;
        query$: Observable<object>;
        getDefaultQuery(): object;
        id$: Observable<string>;
    };
} & TBase;
