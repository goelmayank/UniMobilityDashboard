"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fromRoot = require("../../reducers");
var fromGroupDispatcher = require("../../dispatchers/groups-dispatcher");
var client_subscription_1 = require("../../mixins/client-subscription");
var entity_query_1 = require("../../mixins/entity-query");
var get_data_1 = require("../../mixins/get-data");
var of_1 = require("rxjs/observable/of");
var ht_data_1 = require("ht-data");
var get_first_data_1 = require("../../mixins/get-first-data");
var GroupsList = (function () {
    function GroupsList(_a) {
        var store = _a.store, api = _a.api;
        this.name = "group";
        this.defaultQuery = { ordering: "-created_at" };
        this.query$ = of_1.of({});
        this.updateStrategy = "once";
        this.pollDuration = 10000;
        this.loading$ = of_1.of(false);
        this.api$ = function (query) { return api.index(query); };
        this.store = store;
        this.data$ = this.store.select(fromRoot.getGroupAll);
        this.active$ = this.store.select(fromRoot.getGroupListActive);
        this.dataArray$ = this.data$.pipe(ht_data_1.PageResults$);
    }
    GroupsList.prototype.setData = function (data) {
        this.store.dispatch(new fromGroupDispatcher.SetGroupsAll(data));
    };
    GroupsList.prototype.setLoading = function (data) {
        console.log("loading", data);
    };
    GroupsList.prototype.setActive = function (isActive) {
        if (isActive === void 0) { isActive = true; }
        this.store.dispatch(new fromGroupDispatcher.SetListActive(isActive));
    };
    GroupsList.prototype.setQuery = function () { };
    GroupsList.prototype.firstDataEffect = function (data) {
        this.setLoading(false);
    };
    GroupsList.prototype.getRoots = function () {
        return this.api$({ has_parent: false });
    };
    GroupsList.prototype.getChildren = function (groupId) {
        return this.api$({ parent_group_id: groupId });
    };
    GroupsList.prototype.getDefaultQuery = function () {
        return __assign({ page_size: 10 }, this.defaultQuery);
    };
    GroupsList.prototype.clearData = function () {
        this.setData(null);
    };
    GroupsList.prototype.destroy = function () {
        this.clearData();
        this.setActive(false);
        this.dataSub.unsubscribe();
    };
    return GroupsList;
}());
exports.GroupsList = GroupsList;
exports.GroupsListClient = client_subscription_1.clientSubMixin(get_data_1.getPageDataMixin(get_first_data_1.getFirstDataMixin(entity_query_1.listQueryMixin(GroupsList))));
// applyMixins(GroupsListClient, [ListGetData, ListQuery, ClientSub]);
//# sourceMappingURL=groups-list.js.map