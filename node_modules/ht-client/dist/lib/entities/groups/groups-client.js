"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var entity_client_1 = require("../../base/entity-client");
var groups_list_1 = require("./groups-list");
var groups_item_client_1 = require("./groups-item-client");
var store_provider_1 = require("../../global/store-provider");
var operators_1 = require("rxjs/operators");
var date_range_1 = require("../../global/date-range");
var ht_api_1 = require("ht-api");
var fromGroups = require("../../reducers/groups-reducer");
var HtGroupsClient = (function (_super) {
    __extends(HtGroupsClient, _super);
    function HtGroupsClient(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        var api = new ht_api_1.HtApi().groups;
        _this.api = api;
        var store = store_provider_1.ApiStoreService.getNewInstance();
        store.addReducer("groups", fromGroups.groupsReducer);
        _this.store = store;
        _this.list = new groups_list_1.GroupsListClient({ store: store, api: api });
        _this.item = new groups_item_client_1.GroupsItemClient({ store: store, api: api });
        return _this;
    }
    HtGroupsClient.prototype.key$ = function (id) {
        return this.api.get(id).pipe(operators_1.map(function (group) {
            return group["token"];
        }));
    };
    HtGroupsClient.prototype.lookupIdKey$ = function (lookupId) {
        return this.api.index({ lookup_id: lookupId }).pipe(operators_1.map(function (groupPage) {
            return groupPage && groupPage["results"]
                ? groupPage["results"][0]["token"]
                : null;
        }));
    };
    HtGroupsClient.prototype.getChildren = function (groupId) {
        var query = { parent_group_id: groupId };
        return this.getAll(query);
    };
    HtGroupsClient.prototype.getRoot = function () {
        var query = { has_parent: false };
        return this.getAll(query);
    };
    HtGroupsClient.prototype.getAll = function (query) {
        return this.api.allPages(this.api.index(query));
    };
    return HtGroupsClient;
}(entity_client_1.EntityClient));
exports.HtGroupsClient = HtGroupsClient;
exports.groupsClientFactory = function (options) {
    if (options === void 0) { options = {}; }
    var dateRange = options.noDateRange
        ? null
        : options.dateRange || date_range_1.dateRangeService.getInstance();
    return new HtGroupsClient({ dateRange: dateRange });
};
//# sourceMappingURL=groups-client.js.map