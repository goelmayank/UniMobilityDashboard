"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fromRoot = require("../../reducers");
var fromUsersDispatcher = require("../../dispatchers/user-dispatcher");
var all_items_client_1 = require("../../base/all-items.client");
var ht_data_1 = require("ht-data");
var get_data_1 = require("../../mixins/get-data");
var entity_query_1 = require("../../mixins/entity-query");
var empty_1 = require("rxjs/observable/empty");
var get_first_data_1 = require("../../mixins/get-first-data");
var list_all_client_sub_1 = require("../../mixins/list-all-client-sub");
var UsersAnalyticsListAll = (function (_super) {
    __extends(UsersAnalyticsListAll, _super);
    function UsersAnalyticsListAll(_a) {
        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;
        var _this = _super.call(this) || this;
        _this.id$ = empty_1.empty();
        _this.allowedQueryKeys = ["status", "show_all", "search"];
        _this.name = "users analytics all";
        _this.defaultQuery = {};
        _this.allowedQueryMap = [
            {
                key: "status",
                filter: function (value, oldValue) { return !!value; }
            },
            {
                key: "show_all",
                filter: function (value, oldValue) {
                    if (!value)
                        _this.clearData();
                    return true;
                }
            }
        ];
        _this.api$ = function (query) { return api.allPages(api.analytics(query)); };
        _this.dateRange = dateRange;
        _this.store = store;
        _this.query$ = _this.store.select(fromRoot.getUsersListQuery);
        _this.dateParam = dateParam;
        _this.active$ = _this.store.select(fromRoot.getUsersAnalyticsMarkersIsActive);
        _this.dataEntities$ = _this.store.select(fromRoot.getUsersAnalyticsFilteredMarker);
        // this.id$ = this.store.select(fromRoot.getQueryUserId);
        _this.loading$ = _this.store.select(fromRoot.getUsersAnalyticsAllLoading);
        return _this;
        // this.dataArray$ = this.data$.pipe(PageResults$);
        // this.init()
    }
    UsersAnalyticsListAll.prototype.getDefaultQuery = function () {
        return __assign({}, _super.prototype.getDefaultQuery.call(this), this.defaultQuery);
        // return {...this.defaultQuery}
    };
    UsersAnalyticsListAll.prototype.firstDataEffect = function (data) {
        if (!data.next)
            this.setLoading(false);
    };
    UsersAnalyticsListAll.prototype.setActive = function (isActive) {
        if (isActive === void 0) { isActive = true; }
        isActive = isActive ? new Date().toISOString() : isActive;
        this.store.dispatch(new fromUsersDispatcher.SetMarkersActive(isActive));
    };
    UsersAnalyticsListAll.prototype.addData = function (data) {
        data = data || { results: [], next: "no_next", count: 0, previous: "" };
        this.store.dispatch(new fromUsersDispatcher.AddUsersAnalyticsAll(data));
    };
    UsersAnalyticsListAll.prototype.setData = function (data) {
        data = data || { results: [], next: "no_next", count: 0, previous: "" };
        this.store.dispatch(new fromUsersDispatcher.SetUsersAnalyticsAll(data));
    };
    UsersAnalyticsListAll.prototype.setLoading = function (data) {
        this.store.dispatch(new fromUsersDispatcher.SetUsersAnalyticsAllLoading(data));
    };
    UsersAnalyticsListAll.prototype.setDataMap = function (mapFunc) {
        this.store.dispatch(new fromUsersDispatcher.SetUsersMarkersDataMap(mapFunc));
    };
    UsersAnalyticsListAll.prototype.isValidMarker = function (marker) {
        return ht_data_1.htUser(marker).isValidMarker();
    };
    UsersAnalyticsListAll.prototype.clearData = function () {
        var nullData = { results: [], next: "no_next", count: 0, previous: "" };
        this.setData(nullData);
    };
    UsersAnalyticsListAll.prototype.destroy = function () {
        this.clearData();
        this.setActive(false);
        this.dataSub.unsubscribe();
    };
    return UsersAnalyticsListAll;
}(all_items_client_1.EntityAllItemsClient));
exports.UsersAnalyticsListAll = UsersAnalyticsListAll;
exports.UsersAnalyticsListAllClient = list_all_client_sub_1.listAllClientSubMixin(get_data_1.getAllPageDataMixin(get_first_data_1.getFirstDataMixin(entity_query_1.listQueryMixin(UsersAnalyticsListAll))));
//# sourceMappingURL=users-analytics-markers.js.map