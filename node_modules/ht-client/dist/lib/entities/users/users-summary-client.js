"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fromRoot = require("../../reducers");
var fromUsersDispatcher = require("../../dispatchers/user-dispatcher");
var list_client_1 = require("../../base/list-client");
var client_subscription_1 = require("../../mixins/client-subscription");
var entity_query_1 = require("../../mixins/entity-query");
var get_data_1 = require("../../mixins/get-data");
var get_first_data_1 = require("../../mixins/get-first-data");
var UsersSummary = (function (_super) {
    __extends(UsersSummary, _super);
    function UsersSummary(_a) {
        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;
        var _this = _super.call(this) || this;
        _this.name = "users summary";
        _this.defaultQuery = { page_size: null };
        _this.updateStrategy = "live";
        _this.allowedQueryKeys = ["show_all", "search"];
        _this.allowedQueryMap = [
            {
                key: "show_all",
            },
            {
                key: "search"
            }
        ];
        _this.api$ = function (query) { return api.summary(query); };
        _this.dateRange = dateRange;
        _this.store = store;
        _this.dateParam = dateParam;
        _this.query$ = _this.store.select(fromRoot.getUsersListQuery);
        _this.active$ = _this.store.select(fromRoot.getUsersSummaryActive);
        _this.data$ = _this.store.select(fromRoot.getUsersSummary);
        _this.loading$ = _this.store.select(fromRoot.getUsersSummaryLoading);
        return _this;
    }
    UsersSummary.prototype.setActive = function (isActive) {
        if (isActive === void 0) { isActive = true; }
        isActive = isActive ? new Date().toISOString() : isActive;
        this.store.dispatch(new fromUsersDispatcher.SetSummaryActive(isActive));
    };
    UsersSummary.prototype.setData = function (usersSummary) {
        this.store.dispatch(new fromUsersDispatcher.SetUsersSummary(usersSummary));
    };
    UsersSummary.prototype.setLoading = function (data) {
        this.store.dispatch(new fromUsersDispatcher.SetSummaryLoading(data));
    };
    UsersSummary.prototype.setQuery = function (query) { };
    UsersSummary.prototype.clearData = function () {
        this.setData(null);
    };
    UsersSummary.prototype.destroy = function () {
        this.clearData();
        this.setActive(false);
        this.dataSub.unsubscribe();
    };
    return UsersSummary;
}(list_client_1.EntityListClient));
exports.UsersSummary = UsersSummary;
exports.UsersSummaryClient = client_subscription_1.clientSubMixin(get_data_1.getQueryDataMixin(get_first_data_1.getFirstDataMixin(entity_query_1.listQueryMixin(UsersSummary))));
//# sourceMappingURL=users-summary-client.js.map