"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var get_data_1 = require("../../mixins/get-data");
var client_subscription_1 = require("../../mixins/client-subscription");
var entity_query_1 = require("../../mixins/entity-query");
var of_1 = require("rxjs/observable/of");
var fromRoot = require("../../reducers");
var fromAccounts = require("../../dispatchers/accounts-dispatcher");
var get_first_data_1 = require("../../mixins/get-first-data");
var item_client_1 = require("../../base/item-client");
var AccountUser = (function (_super) {
    __extends(AccountUser, _super);
    function AccountUser(_a) {
        var dateParam = _a.dateParam, store = _a.store, api = _a.api;
        var _this = _super.call(this) || this;
        _this.query$ = of_1.of({});
        _this.updateStrategy = "once";
        _this.pollDuration = 10000;
        _this.api$ = function (id, query) { return api.get(id, query); };
        _this.store = store;
        // this.active$ = this.store.select(fromRoot.getUsersAnalyticsIsActive);
        _this.data$ = _this.store.select(fromRoot.getAccountUser);
        _this.id$ = _this.store.select(fromRoot.getAccountUserId);
        _this.loading$ = _this.store.select(fromRoot.getAccountCurrentKey);
        return _this;
        // this.init()
    }
    AccountUser.prototype.getDefaultQuery = function () {
        return {};
    };
    AccountUser.prototype.setId = function (id) {
        this.store.dispatch(new fromAccounts.SetUserId(id));
    };
    AccountUser.prototype.setLoading = function (loading) { };
    AccountUser.prototype.setData = function (data) {
        this.store.dispatch(new fromAccounts.SetAccountUser(data));
    };
    return AccountUser;
}(item_client_1.EntityItemClient));
exports.AccountUser = AccountUser;
exports.AccountUserClient = client_subscription_1.clientSubMixin(get_data_1.getIdQueryDataMixin(get_first_data_1.getFirstDataMixin(entity_query_1.itemQueryMixin(AccountUser))));
//# sourceMappingURL=account-user-client.js.map