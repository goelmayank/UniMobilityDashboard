"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var entity_query_1 = require("../../mixins/entity-query");
var of_1 = require("rxjs/observable/of");
var get_data_1 = require("../../mixins/get-data");
var fromRoot = require("../../reducers");
var fromAccount = require("../../dispatchers/accounts-dispatcher");
var BehaviorSubject_1 = require("rxjs/BehaviorSubject");
var get_first_data_1 = require("../../mixins/get-first-data");
var list_all_client_sub_1 = require("../../mixins/list-all-client-sub");
var MembershipsAll = (function () {
    function MembershipsAll(_a) {
        var dateParam = _a.dateParam, store = _a.store, api = _a.api;
        this.query$ = of_1.of({});
        this.updateStrategy = "once";
        this.pollDuration = 10000;
        this.active$ = of_1.of(true);
        this.loading$ = new BehaviorSubject_1.BehaviorSubject(false);
        this.api$ = function (id, query) { return api.membershipsAll(id, query); };
        this.store = store;
        // this.active$ = this.store.select(fromRoot.getUsersAnalyticsIsActive);
        this.data$ = this.store.select(fromRoot.getAccountMembershipsAll);
        this.id$ = this.store.select(fromRoot.getAccountUserId);
        // this.loading$ = this.store.select(fromRoot.getAccountCurrentKey);
        // this.init()
    }
    MembershipsAll.prototype.firstDataEffect = function () {
        this.setLoading();
    };
    MembershipsAll.prototype.getDefaultQuery = function () {
        return { page_size: 100 };
    };
    MembershipsAll.prototype.setLoading = function (loading) {
        if (loading === void 0) { loading = true; }
        this.loading$.next(loading);
    };
    MembershipsAll.prototype.addData = function (data) {
        this.store.dispatch(new fromAccount.SetMembershipsAll(data));
    };
    return MembershipsAll;
}());
exports.MembershipsAll = MembershipsAll;
exports.MemberShipsClient = list_all_client_sub_1.listAllClientSubMixin(get_data_1.getIdQueryDataMixin(get_first_data_1.getFirstDataMixin(entity_query_1.itemQueryMixin(MembershipsAll))));
//# sourceMappingURL=memberships-all-client.js.map