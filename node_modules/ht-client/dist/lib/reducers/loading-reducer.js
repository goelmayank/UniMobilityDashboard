"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingDispatcher = require("../dispatchers/loading-dispatcher");
var initialState = {
    usersAnalytics: false,
    usersIndex: false,
    usersAnalyticsAll: false,
    usersIndexAll: false
};
function loadingReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case LoadingDispatcher.SET_USER_ANALYTICS: {
            return __assign({}, state, { usersAnalytics: action.payload });
        }
        case LoadingDispatcher.SET_USER_INDEX: {
            return __assign({}, state, { usersIndex: action.payload });
        }
        case LoadingDispatcher.SET_USER_ANALYTICS_ALL: {
            return __assign({}, state, { usersAnalyticsAll: action.payload });
        }
        case LoadingDispatcher.SET_USER_INDEX_ALL: {
            return __assign({}, state, { usersIndexAll: action.payload });
        }
        default:
            return state;
    }
}
exports.loadingReducer = loadingReducer;
exports.getUserAnalytics = function (state) { return state.usersAnalytics; };
exports.getUserIndex = function (state) { return state.usersIndex; };
exports.getUserAnalyticsAll = function (state) { return state.usersAnalyticsAll; };
exports.getUserIndexAll = function (state) { return state.usersIndexAll; };
//# sourceMappingURL=loading-reducer.js.map