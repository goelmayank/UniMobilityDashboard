"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../store/utils");
var selector_1 = require("../store/selector");
var fromUsers = require("./user-reducer");
var fromSegments = require("./segments-reducer");
var fromGroups = require("./groups-reducer");
var fromAccounts = require("./account-reducer");
var fromActions = require("./actions-reducer");
exports.reducers = {};
function reducer(state, action) {
    return utils_1.combineReducers(exports.reducers);
}
exports.reducer = reducer;
exports.metaReducers = [];
/**
 * Users selectors
 */
exports.getUsersState = selector_1.createFeatureSelector("users");
exports.getUsersUsersData = selector_1.createSelector(exports.getUsersState, fromUsers.getUserData);
exports.getUsersPlacelineId = selector_1.createSelector(exports.getUsersState, fromUsers.getPlacelineId);
exports.getUsersPlacelineQuery = selector_1.createSelector(exports.getUsersState, fromUsers.getPlacelineQuery);
exports.getUsersPlacelineLoading = selector_1.createSelector(exports.getUsersState, fromUsers.getPlacelineLoading);
exports.getUsersListActive = selector_1.createSelector(exports.getUsersState, fromUsers.getListActive);
exports.getUsersListId = selector_1.createSelector(exports.getUsersState, fromUsers.getListId);
exports.getUsersListQuery = selector_1.createSelector(exports.getUsersState, fromUsers.getListQuery);
exports.getUsersAnalyticsPage = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsPage);
exports.getUsersAnalyticsLoading = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsLoading);
exports.getUsersIndexPage = selector_1.createSelector(exports.getUsersState, fromUsers.getIndexPage);
// export const getUsersListApiType = createSelector(getUsersState, fromUsers.getListApiType);
exports.getUsersIndexIsActive = selector_1.createSelector(exports.getUsersState, fromUsers.getIndexActive);
exports.getUsersAnalyticsIsActive = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsActive);
exports.getUsersIndexMarkersIsActive = selector_1.createSelector(exports.getUsersState, fromUsers.getIndexMarkersActive);
exports.getUsersAnalyticsMarkersIsActive = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsMarkersActive);
exports.getUsersAnalyticsAllLoading = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsAllLoading);
exports.getUsersIndexFilteredMarker = selector_1.createSelector(exports.getUsersState, fromUsers.getIndexFilteredMarkers);
exports.getUsersAnalyticsFilteredMarker = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticFilteredMarkers);
exports.getUsersIndexAll = selector_1.createSelector(exports.getUsersState, fromUsers.getIndexAll);
exports.getUsersAnalyticsAll = selector_1.createSelector(exports.getUsersState, fromUsers.getAnalyticsAll);
exports.getUsersSummary = selector_1.createSelector(exports.getUsersState, fromUsers.getSummary);
exports.getUsersSummaryActive = selector_1.createSelector(exports.getUsersState, fromUsers.getSummaryActive);
exports.getUsersSummaryLoading = selector_1.createSelector(exports.getUsersState, fromUsers.getSummaryLoading);
/**
 * Segment selectors
 */
exports.getSegmentsState = selector_1.createFeatureSelector("segments");
exports.getSegmentsSelectedId = selector_1.createSelector(exports.getSegmentsState, fromSegments.getSelectedId);
exports.getSegmentsResetMapId = selector_1.createSelector(exports.getSegmentsState, fromSegments.getResetMapId);
/**
 *
 * Groups reducer
 */
exports.getGroupsState = selector_1.createFeatureSelector("groups");
exports.getGroupId = selector_1.createSelector(exports.getGroupsState, fromGroups.getId);
exports.getGroupAll = selector_1.createSelector(exports.getGroupsState, fromGroups.getAllGroups);
exports.getGroupListActive = selector_1.createSelector(exports.getGroupsState, fromGroups.getListActive);
/**
 Account
 */
exports.getAccountState = selector_1.createFeatureSelector("accounts");
exports.getAccountUser = selector_1.createSelector(exports.getAccountState, fromAccounts.getAccountUser);
exports.getAccountMembershipsAll = selector_1.createSelector(exports.getAccountState, fromAccounts.getMembershipsAll);
exports.getAccountKey = selector_1.createSelector(exports.getAccountState, fromAccounts.getKey);
exports.getAccountTempKey = selector_1.createSelector(exports.getAccountState, fromAccounts.getTempKey);
exports.getAccountCurrentKey = selector_1.createSelector(exports.getAccountState, fromAccounts.getCurrentKey);
exports.getAccountUserId = selector_1.createSelector(exports.getAccountState, fromAccounts.getUserId);
/**
 * Actions
 */
exports.getActionsState = selector_1.createFeatureSelector("actions");
exports.getActionsList = selector_1.createSelector(exports.getActionsState, fromActions.getList);
exports.getActionsListLoading = selector_1.createSelector(exports.getActionsState, fromActions.getListLoading);
exports.getActionsListActive = selector_1.createSelector(exports.getActionsState, fromActions.getListActive);
exports.getActionsListQuery = selector_1.createSelector(exports.getActionsState, fromActions.getListQuery);
exports.getActionsSummary = selector_1.createSelector(exports.getActionsState, fromActions.getSummary);
exports.getActionsSummaryActive = selector_1.createSelector(exports.getActionsState, fromActions.getSummaryActive);
exports.getActionsSummaryLoading = selector_1.createSelector(exports.getActionsState, fromActions.getSummaryLoading);
exports.getActionsSummaryQuery = selector_1.createSelector(exports.getActionsState, fromActions.getSummaryQuery);
exports.getActionsGraph = selector_1.createSelector(exports.getActionsState, fromActions.getGraph);
exports.getActionsGraphLoading = selector_1.createSelector(exports.getActionsState, fromActions.getGraphLoading);
exports.getActionsGraphQuery = selector_1.createSelector(exports.getActionsState, fromActions.getGraphQuery);
//# sourceMappingURL=index.js.map