"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ActionsDispatcher = require("../dispatchers/actions-dispatcher");
;
exports.initialState = {
    list: null,
    listLoading: false,
    listQuery: {},
    listActive: false,
    summary: null,
    summaryActive: false,
    summaryLoading: false,
    summaryQuery: {},
    graph: null,
    graphLoading: false,
    graphQuery: {}
};
function actionsReducer(state, action) {
    if (state === void 0) { state = exports.initialState; }
    switch (action.type) {
        /*
        list
         */
        case ActionsDispatcher.SET_ACTIONS_LIST: {
            return __assign({}, state, { list: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_LIST_ACTIVE: {
            return __assign({}, state, { listActive: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_LIST_QUERY: {
            return __assign({}, state, { listQuery: action.payload });
        }
        case ActionsDispatcher.ADD_ACTIONS_LIST_QUERY: {
            var listQuery = __assign({}, state.listQuery, action.payload);
            return __assign({}, state, { listQuery: listQuery });
        }
        case ActionsDispatcher.SET_ACTIONS_LIST_LOADING: {
            return __assign({}, state, { listLoading: action.payload });
        }
        /*
        Summary
         */
        case ActionsDispatcher.SET_ACTIONS_SUMMARY: {
            return __assign({}, state, { summary: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_SUMMARY_LOADING: {
            return __assign({}, state, { summaryLoading: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_SUMMARY_ACTIVE: {
            return __assign({}, state, { summaryActive: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_SUMMARY_QUERY: {
            return __assign({}, state, { summaryQuery: action.payload });
        }
        case ActionsDispatcher.ADD_ACTIONS_SUMMARY_QUERY: {
            var summaryQuery = __assign({}, state.summaryQuery, action.payload);
            return __assign({}, state, { summaryQuery: summaryQuery });
        }
        /*
        Graph
         */
        case ActionsDispatcher.SET_ACTIONS_GRAPH: {
            return __assign({}, state, { graph: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_GRAPH_LOADING: {
            return __assign({}, state, { graphLoading: action.payload });
        }
        case ActionsDispatcher.SET_ACTIONS_GRAPH_QUERY: {
            return __assign({}, state, { graphQuery: action.payload });
        }
        case ActionsDispatcher.ADD_ACTIONS_GRAPH_QUERY: {
            var graphQuery = __assign({}, state.graphQuery, action.payload);
            return __assign({}, state, { graphQuery: graphQuery });
        }
        default: {
            return state;
        }
    }
}
exports.actionsReducer = actionsReducer;
;
exports.getList = function (state) { return state.list; };
exports.getListLoading = function (state) { return state.listLoading; };
exports.getListActive = function (state) { return state.listActive; };
exports.getListQuery = function (state) { return state.listQuery; };
exports.getSummary = function (state) { return state.summary; };
exports.getSummaryActive = function (state) { return state.summaryActive; };
exports.getSummaryQuery = function (state) { return state.summaryQuery; };
exports.getSummaryLoading = function (state) { return state.summaryLoading; };
exports.getGraph = function (state) { return state.graph; };
exports.getGraphQuery = function (state) { return state.graphQuery; };
exports.getGraphLoading = function (state) { return state.graphLoading; };
//# sourceMappingURL=actions-reducer.js.map