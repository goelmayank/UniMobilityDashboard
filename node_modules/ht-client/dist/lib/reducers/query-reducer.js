"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var QueryDispatch = require("../dispatchers/query-dispatcher");
var initialState = {};
function queryReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case QueryDispatch.SET_DATE_RANGE: {
            return __assign({}, state, { dateRange: action.payload });
        }
        case QueryDispatch.SET_USER_QUERY: {
            return __assign({}, state, { userQuery: __assign({}, state.userQuery, action.payload) });
        }
        case QueryDispatch.SET_USER_QUERY_RESET_PAGE: {
            return __assign({}, state, { userQuery: __assign({}, action.payload, { page: null }) });
        }
        case QueryDispatch.CLEAR_USER_QUERY_KEY: {
            var query = __assign({}, state.userQuery);
            delete query[action.payload];
            return __assign({}, state, { userQuery: query });
        }
        case QueryDispatch.SET_USER_ID: {
            return __assign({}, state, { userId: action.payload });
        }
        case QueryDispatch.TOGGLE_USER_ID: {
            var userId = state.userId == action.payload ? null : action.payload;
            return __assign({}, state, { userId: userId });
        }
        default: {
            return state;
        }
    }
}
exports.queryReducer = queryReducer;
exports.getUsersQuery = function (state) { return state.userQuery; };
exports.getUsersId = function (state) { return state.userId; };
//# sourceMappingURL=query-reducer.js.map