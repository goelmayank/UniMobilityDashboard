"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SegmentsDispatch = require("../dispatchers/segments-dispatcher");
var initialState = {};
function segmentsReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case SegmentsDispatch.SET_SELECTED_ID: {
            return __assign({}, state, { selectedId: action.payload });
        }
        case SegmentsDispatch.SET_RESET_MAP_ID: {
            return __assign({}, state, { resetMapId: action.payload });
        }
        case SegmentsDispatch.SET_HIGHLIGHTED_ID: {
            return !!state.selectedId
                ? __assign({}, state, { highlightedId: action.payload }) : state;
        }
        case SegmentsDispatch.SET_POPUP_ID: {
            return !!state.selectedId ? __assign({}, state, { popupId: action.payload }) : state;
        }
        default: {
            return state;
        }
    }
}
exports.segmentsReducer = segmentsReducer;
exports.getSelectedId = function (state) { return state.selectedId; };
exports.getResetMapId = function (state) { return state.resetMapId; };
//# sourceMappingURL=segments-reducer.js.map