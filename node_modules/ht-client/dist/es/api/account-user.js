var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import { HtBaseApi } from "./base";
import { getAuthHeaders } from "ht-data";
import { scan } from "rxjs/operators";
var HtAccountUserApi = /** @class */ (function (_super) {
    __extends(HtAccountUserApi, _super);
    function HtAccountUserApi() {
        var _this = _super.call(this, "account_users") || this;
        _this.name = "user";
        return _this;
    }
    HtAccountUserApi.prototype.login = function (user) {
        var tail = "login/";
        return this.request.postObservable(this.request.baseUrl + tail, user);
    };
    HtAccountUserApi.prototype.get = function (id, token) {
        var path = this.base + "/" + id + "/";
        var headers = getAuthHeaders(this.request.token);
        return this.api$(path, {}, { headers: headers });
    };
    HtAccountUserApi.prototype.memberships = function (id, query, options) {
        if (query === void 0) { query = {}; }
        var path = this.base + "/" + id + "/memberships/";
        return this.api$(path, query, options);
    };
    HtAccountUserApi.prototype.membershipsAll = function (id, query, options) {
        var headers = getAuthHeaders(this.request.token);
        options = __assign({ headers: headers }, options);
        return this.allPages(this.memberships(id, query, options), options).pipe(scan(function (acc, membershipsPage) {
            return acc
                ? __assign({}, membershipsPage, { results: acc.results.concat(membershipsPage.results) }) : membershipsPage;
        }, null));
    };
    return HtAccountUserApi;
}(HtBaseApi));
export { HtAccountUserApi };
//# sourceMappingURL=account-user.js.map