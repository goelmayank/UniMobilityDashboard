var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { empty } from "rxjs/observable/empty";
import { switchMap } from "rxjs/operators";
export function clientSubMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, args) || this;
            _this.init();
            return _this;
        }
        class_1.prototype.init = function () {
            var _this = this;
            if (!this.dataSub) {
                this.dataSub = this.getApiParams$()
                    .pipe(switchMap(function (data) {
                    if (data && data[0]) {
                        var loading = typeof data[0] === "string" ? data[0] : true;
                        _this.setLoading(loading);
                        return _this.getData$(data);
                    }
                    else {
                        return empty();
                    }
                }))
                    .subscribe(function (data) {
                    _this.setData(data);
                });
            }
        };
        return class_1;
    }(Base));
}
//# sourceMappingURL=client-subscription.js.map