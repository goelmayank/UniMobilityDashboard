var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { tap } from "rxjs/operators";
export function getFirstDataMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getFirstData$ = function (args) {
            var _this = this;
            var entity = this;
            return entity.api$.apply(entity, args).pipe(tap(function (data) {
                _this.firstDataEffect(data);
            }));
        };
        return class_1;
    }(Base));
}
//
// export interface IQueryFirstDataBase {
//   setLoading(any): void,
//   api$(query): Observable<any>
// }
//
// export function getQueryFirstDataMixin <TBase extends Constructor<IQueryFirstDataBase>>(Base: TBase) {
//   return class extends Base {
//     getFirstData$([query]) {
//       let entity = this;
//       return entity.api$(query).pipe(
//         tap((data) => {
//           this.setLoading(false);
//         })
//       );
//     }
//   }
// }
//# sourceMappingURL=get-first-data.js.map