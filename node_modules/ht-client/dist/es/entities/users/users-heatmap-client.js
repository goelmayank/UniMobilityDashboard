import { listQueryMixin } from "../../mixins/entity-query";
import { listAllClientSubMixin } from "../../mixins/list-all-client-sub";
import { getAllPageDataMixin } from "../../mixins/get-data";
import { getFirstDataMixin } from "../../mixins/get-first-data";
import { of } from "rxjs/observable/of";
import { BehaviorSubject } from "rxjs/BehaviorSubject";
import { PageResults$ } from "ht-data";
var UsersHeatmap = (function () {
    function UsersHeatmap(_a) {
        var dateRange = _a.dateRange, dateParam = _a.dateParam, api = _a.api;
        this.query$ = of({});
        this.loadingState$ = new BehaviorSubject(false);
        this.loading$ = this.loadingState$.asObservable();
        this.dataState$ = new BehaviorSubject(null);
        this.data$ = this.dataState$.asObservable();
        this.active$ = new BehaviorSubject(false);
        this.dataArray$ = this.data$.pipe(PageResults$);
        this.api$ = function (query) { return api.allPages(api.heatmap(query)); };
        this.dateRange = dateRange;
        this.dateParam = dateParam;
    }
    UsersHeatmap.prototype.setActive = function (active) {
        if (active === void 0) { active = true; }
        this.active$.next(active);
    };
    UsersHeatmap.prototype.getDefaultQuery = function () {
        return { page_size: 300 };
    };
    ;
    UsersHeatmap.prototype.firstDataEffect = function (data) {
        if ((data && !data.next) || !data) {
            this.setLoading(false);
        }
    };
    UsersHeatmap.prototype.setLoading = function (isLoading) {
        this.loadingState$.next(isLoading);
    };
    UsersHeatmap.prototype.setData = function (data) {
        this.dataState$.next(data);
    };
    UsersHeatmap.prototype.addData = function (data) {
        this.dataState$.next(data);
    };
    return UsersHeatmap;
}());
export { UsersHeatmap };
;
export var UsersHeatmapClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(UsersHeatmap))));
//# sourceMappingURL=users-heatmap-client.js.map