import { itemQueryMixin } from "../../mixins/entity-query";
import { of } from "rxjs/observable/of";
import { getIdQueryDataMixin } from "../../mixins/get-data";
import * as fromRoot from "../../reducers";
import * as fromAccount from "../../dispatchers/accounts-dispatcher";
import { BehaviorSubject } from "rxjs/BehaviorSubject";
import { getFirstDataMixin } from "../../mixins/get-first-data";
import { listAllClientSubMixin } from "../../mixins/list-all-client-sub";
var MembershipsAll = (function () {
    function MembershipsAll(_a) {
        var dateParam = _a.dateParam, store = _a.store, api = _a.api;
        this.query$ = of({});
        this.updateStrategy = "once";
        this.pollDuration = 10000;
        this.active$ = of(true);
        this.loading$ = new BehaviorSubject(false);
        this.api$ = function (id, query) { return api.membershipsAll(id, query); };
        this.store = store;
        // this.active$ = this.store.select(fromRoot.getUsersAnalyticsIsActive);
        this.data$ = this.store.select(fromRoot.getAccountMembershipsAll);
        this.id$ = this.store.select(fromRoot.getAccountUserId);
        // this.loading$ = this.store.select(fromRoot.getAccountCurrentKey);
        // this.init()
    }
    MembershipsAll.prototype.firstDataEffect = function () {
        this.setLoading();
    };
    MembershipsAll.prototype.getDefaultQuery = function () {
        return { page_size: 100 };
    };
    MembershipsAll.prototype.setLoading = function (loading) {
        if (loading === void 0) { loading = true; }
        this.loading$.next(loading);
    };
    MembershipsAll.prototype.addData = function (data) {
        this.store.dispatch(new fromAccount.SetMembershipsAll(data));
    };
    return MembershipsAll;
}());
export { MembershipsAll };
export var MemberShipsClient = listAllClientSubMixin(getIdQueryDataMixin(getFirstDataMixin(itemQueryMixin(MembershipsAll))));
//# sourceMappingURL=memberships-all-client.js.map