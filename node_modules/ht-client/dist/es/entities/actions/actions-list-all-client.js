var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { listQueryMixin } from "../../mixins/entity-query";
import { getFirstDataMixin } from "../../mixins/get-first-data";
import { listAllClientSubMixin } from "../../mixins/list-all-client-sub";
import { getAllPageDataMixin } from "../../mixins/get-data";
import { EntityAllItemsClient } from "../../base/all-items.client";
import { BehaviorSubject } from "rxjs/BehaviorSubject";
var ActionsIndexAll = (function (_super) {
    __extends(ActionsIndexAll, _super);
    function ActionsIndexAll(_a) {
        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;
        var _this = _super.call(this) || this;
        _this.dataBehaviour$ = new BehaviorSubject(null);
        _this.loadingBehaviour$ = new BehaviorSubject(false);
        _this.loading$ = _this.loadingBehaviour$.asObservable();
        _this.activeBehaviour$ = new BehaviorSubject(false);
        _this.api$ = function (query) { return api.allPages(api.index(query)); };
        _this.dateRange = dateRange;
        _this.dateParam = dateParam;
        _this.query$ = new BehaviorSubject(_this.getDefaultQuery());
        _this.active$ = _this.activeBehaviour$.asObservable();
        return _this;
    }
    ActionsIndexAll.prototype.setActive = function (isActive) {
        if (isActive === void 0) { isActive = true; }
        this.activeBehaviour$.next(isActive);
    };
    ActionsIndexAll.prototype.setQuery = function (query) {
        this.query$.next(query);
    };
    Object.defineProperty(ActionsIndexAll.prototype, "data$", {
        get: function () {
            return this.dataBehaviour$.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    ActionsIndexAll.prototype.addData = function (data) {
        this.dataBehaviour$.next(data);
    };
    ;
    ActionsIndexAll.prototype.setData = function (data) {
        this.dataBehaviour$.next(data);
    };
    ActionsIndexAll.prototype.setLoading = function (loading) {
    };
    return ActionsIndexAll;
}(EntityAllItemsClient));
export { ActionsIndexAll };
;
export var ActionsIndexAllClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(ActionsIndexAll))));
//# sourceMappingURL=actions-list-all-client.js.map