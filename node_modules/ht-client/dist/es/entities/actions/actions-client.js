import { dateRangeService } from "../../global/date-range";
import { ActionsGraphClient } from "./actions-graph";
import * as fromActions from "../../reducers/actions-reducer";
import { ApiStoreService } from "../../global/store-provider";
import { ActionsListClient } from "./actions-list-client";
import { ActionsSummaryClient } from "./actions-summary-client";
import { ActionsFilter } from "../../filters/actions-filter";
import { ActionsHeatmapClient } from "./actions-heatmap-client";
import { ActionsIndexAllClient } from "./actions-list-all-client";
import { HtApi } from "ht-api";
var HtActionsClient = (function () {
    function HtActionsClient(config) {
        this.filters = new ActionsFilter();
        var api = new HtApi().actions;
        this.api = api;
        var store = ApiStoreService.getNewInstance();
        store.addReducer("actions", fromActions.actionsReducer);
        this.store = store;
        var dateRange = config.dateRange;
        var dateParam = 'created_at';
        this.graph = new ActionsGraphClient({ dateRange: dateRange, dateParam: dateParam, api: api });
        this.list = new ActionsListClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });
        this.listAll = new ActionsIndexAllClient({ dateRange: dateRange, dateParam: dateParam, api: api });
        this.summary = new ActionsSummaryClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });
        this.heatmap = new ActionsHeatmapClient({ dateRange: dateRange, dateParam: 'completed_at', api: api });
    }
    return HtActionsClient;
}());
export { HtActionsClient };
export var actionsClientFactory = function (options) {
    if (options === void 0) { options = {}; }
    var dateRange = options.dateRange || dateRangeService.getInstance();
    return new HtActionsClient({ dateRange: dateRange });
};
//# sourceMappingURL=actions-client.js.map