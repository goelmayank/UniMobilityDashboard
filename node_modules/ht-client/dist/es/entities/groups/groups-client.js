var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { EntityClient } from "../../base/entity-client";
import { GroupsListClient } from "./groups-list";
import { GroupsItemClient } from "./groups-item-client";
import { ApiStoreService } from "../../global/store-provider";
import { map } from "rxjs/operators";
import { dateRangeService } from "../../global/date-range";
import { HtApi } from "ht-api";
import * as fromGroups from "../../reducers/groups-reducer";
var HtGroupsClient = (function (_super) {
    __extends(HtGroupsClient, _super);
    function HtGroupsClient(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        var api = new HtApi().groups;
        _this.api = api;
        var store = ApiStoreService.getNewInstance();
        store.addReducer("groups", fromGroups.groupsReducer);
        _this.store = store;
        _this.list = new GroupsListClient({ store: store, api: api });
        _this.item = new GroupsItemClient({ store: store, api: api });
        return _this;
    }
    HtGroupsClient.prototype.key$ = function (id) {
        return this.api.get(id).pipe(map(function (group) {
            return group["token"];
        }));
    };
    HtGroupsClient.prototype.lookupIdKey$ = function (lookupId) {
        return this.api.index({ lookup_id: lookupId }).pipe(map(function (groupPage) {
            return groupPage && groupPage["results"]
                ? groupPage["results"][0]["token"]
                : null;
        }));
    };
    HtGroupsClient.prototype.getChildren = function (groupId) {
        var query = { parent_group_id: groupId };
        return this.getAll(query);
    };
    HtGroupsClient.prototype.getRoot = function () {
        var query = { has_parent: false };
        return this.getAll(query);
    };
    HtGroupsClient.prototype.getAll = function (query) {
        return this.api.allPages(this.api.index(query));
    };
    return HtGroupsClient;
}(EntityClient));
export { HtGroupsClient };
export var groupsClientFactory = function (options) {
    if (options === void 0) { options = {}; }
    var dateRange = options.noDateRange
        ? null
        : options.dateRange || dateRangeService.getInstance();
    return new HtGroupsClient({ dateRange: dateRange });
};
//# sourceMappingURL=groups-client.js.map