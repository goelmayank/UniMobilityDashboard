var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
/**
 * Works similar to underscore indexBy, converts array to object
 * @param array : this is convereted to object
 * @param key(default = 'id') : indexBy prop name
 */
export var indexBy = function (array, key) {
    if (key === void 0) { key = 'id'; }
    return array.reduce(function (acc, item) {
        return __assign({}, acc, (_a = {}, _a[item[key]] = item, _a));
        var _a;
    }, {});
};
//# sourceMappingURL=array-helpers.js.map