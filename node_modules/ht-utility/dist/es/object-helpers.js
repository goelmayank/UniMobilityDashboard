import { propToString } from "./string-helpers";
/**
 * e.g. {current_time: abc, is_late: true} => [[Current time, abc]]
 * @param obj : object which is converted to string
 * @param separator : used to stringify the key of object
 * currently only included string/number/boolean values to depth 1
 */
export var objectToStringArray = function (obj, separator) {
    var keys = Object.keys(obj);
    return keys.reduce(function (acc, key) {
        var value = obj[key];
        var typeOfValue = typeof value;
        return typeOfValue == 'string' || typeOfValue == 'number' || typeOfValue == 'boolean' ? acc.concat([[propToString(key), obj[key]]]) : acc;
    }, []);
};
/**
 * e.g. {current_time: abc, is_late: true} => [abc, true]
 * @param obj : object whole values as array is returned
 */
export var valuesOfObject = function (obj) {
    var keys = Object.keys(obj);
    return keys.map(function (key) { return obj[key]; });
};
//# sourceMappingURL=object-helpers.js.map