import { addMilliseconds, isSameMinute } from "date-fns";
// export function DayAgoISO() {
//   return subDays(new Date(), 1).toISOString();
// }
export function OffsetIsoTime(time, offset) {
    if (offset === void 0) { offset = 10; }
    return addMilliseconds(time, offset).toISOString();
}
export function GetMinute(time) {
    var timeStamp = new Date(time).getTime();
    return Math.round(timeStamp - timeStamp % 60000);
}
export function HasSameMinute(time1, time2) {
    return isSameMinute(time1, time2);
}
export function humanizeDuration(second, scale) {
    if (second) {
        var min = second / (scale * 60);
        var minutes = min % 60;
        var hours = (min - minutes) / 60;
        var minuteCeiling = Math.ceil(minutes);
        var duration = minuteCeiling + " min";
        if (min >= 60 && hours <= 24) {
            duration = Math.floor(minutes) + " min";
            duration = hours + " hr " + duration;
        }
        else if (hours > 24) {
            var day = Math.floor(hours / 24);
            var hour = Math.floor(hours % 24);
            duration = day + " d";
            if (hour > 0 && day < 3) {
                duration = duration + " " + hour + " hr";
            }
        }
        return duration;
    }
    else if (second == 0) {
        return "1 min";
    }
    else {
        return "";
    }
}
//# sourceMappingURL=time-utils.js.map