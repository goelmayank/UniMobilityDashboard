{"remainingRequest":"/Github/UniDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Github/UniDashboard/node_modules/ht-client/dist/ht-client.es5.js","dependencies":[{"path":"/Github/UniDashboard/node_modules/ht-client/dist/ht-client.es5.js","mtime":0},{"path":"/Github/UniDashboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Github/UniDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { contains, filter, find, indexBy, map, reduce, values } from 'underscore';\nimport { distinctUntilChanged, expand, flatMap, map as map$1, pluck, switchMap, tap } from 'rxjs/operators';\nimport { timer as timer$1 } from 'rxjs/observable/timer';\nimport { AllowedQueryMap, CombineLoadings$, CombineQueries, DateRangeMap, DateRangeToQuery$, PageResults$, htUser, itemAsPage$ } from 'ht-data';\nimport { combineLatest as combineLatest$1 } from 'rxjs/observable/combineLatest';\nimport { of as of$1 } from 'rxjs/observable/of';\nimport { empty as empty$1 } from 'rxjs/observable/empty';\nimport { Color, HtQuerySerialize, dateRangeDisplay } from 'ht-utility';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs/BehaviorSubject';\nimport { Observable as Observable$1 } from 'rxjs/Observable';\nimport { Subject as Subject$1 } from 'rxjs/Subject';\nimport { observeOn as observeOn$1 } from 'rxjs/operator/observeOn';\nimport { withLatestFrom as withLatestFrom$1 } from 'rxjs/operator/withLatestFrom';\nimport { scan as scan$1 } from 'rxjs/operator/scan';\nimport { distinctUntilChanged as distinctUntilChanged$2 } from 'rxjs/operator/distinctUntilChanged';\nimport { map as map$3 } from 'rxjs/operator/map';\nimport { pluck as pluck$2 } from 'rxjs/operator/pluck';\nimport { fromPromise as fromPromise$1 } from 'rxjs/observable/fromPromise';\nvar defaultListConfig = {\n    isLive: false\n};\n// export interface AllData<T> {\n//   resultsEntity: {[id: string]: T},\n//   // isFirst: boolean,\n//   timestamp?: string,\n//   count?: number,\n//   next?: string,\n//   previous?: string\n// }\nvar ApiType;\n(function (ApiType) {\n    ApiType[\"index\"] = \"index\";\n    ApiType[\"analytics\"] = \"analytics\";\n})(ApiType || (ApiType = {}));\nfunction combineReducers(reducers, initialState) {\n    if (initialState === void 0) {\n        initialState = {};\n    }\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for (var i = 0; i < reducerKeys.length; i++) {\n        var key = reducerKeys[i];\n        if (typeof reducers[key] === \"function\") {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    var finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state || initialState;\n        var hasChanged = false;\n        var nextState = {};\n        for (var i = 0; i < finalReducerKeys.length; i++) {\n            var key = finalReducerKeys[i];\n            var reducer = finalReducers[key];\n            var previousStateForKey = state[key];\n            var nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter(function (key) { return key !== keyToRemove; })\n        .reduce(function (result, key) {\n        return Object.assign(result, (_a = {}, _a[key] = object[key], _a));\n        var _a;\n    }, {});\n}\nfunction compose() {\n    var functions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        functions[_i] = arguments[_i];\n    }\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        var last = functions[functions.length - 1];\n        var rest = functions.slice(0, -1);\n        return rest.reduceRight(function (composed, fn) { return fn(composed); }, last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        return compose.apply(null, metaReducers.concat([reducerFactory]));\n    }\n    return reducerFactory;\n}\nfunction memoize(t) {\n    var lastArguments = null;\n    var lastResult = null;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function memoized() {\n        if (!lastArguments) {\n            lastResult = t.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            if (arguments[i] !== lastArguments[i]) {\n                lastResult = t.apply(null, arguments);\n                lastArguments = arguments;\n                return lastResult;\n            }\n        }\n        return lastResult;\n    }\n    return { memoized: memoized, reset: reset };\n}\nfunction createSelector() {\n    var input = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        input[_i] = arguments[_i];\n    }\n    var args = input;\n    if (Array.isArray(args[0])) {\n        var head = args[0], tail = args.slice(1);\n        args = head.concat(tail);\n    }\n    var selectors = args.slice(0, args.length - 1);\n    var projector = args[args.length - 1];\n    var memoizedSelectors = selectors.filter(function (selector) {\n        return selector.release && typeof selector.release === \"function\";\n    });\n    var memoizedProjector = memoize(function () {\n        var selectors = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selectors[_i] = arguments[_i];\n        }\n        return projector.apply(null, selectors);\n    });\n    var memoizedState = memoize(function (state) {\n        var args = selectors.map(function (fn) { return fn(state); });\n        return memoizedProjector.memoized.apply(null, args);\n    });\n    function release() {\n        memoizedState.reset();\n        memoizedProjector.reset();\n        memoizedSelectors.forEach(function (selector) { return selector.release(); });\n    }\n    return Object.assign(memoizedState.memoized, {\n        release: release,\n        projector: memoizedProjector.memoized\n    });\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector(function (state) { return state[featureName]; }, function (featureState) { return featureState; });\n}\n//placeline\nvar SET_USER_DATA = \"[USERS] set user data\";\nvar SET_PLACELINE_ID = \"[USERS] set placeline id\";\nvar TOGGLE_PLACELINE_ID = \"[USERS] toggle placeline id\";\nvar SET_PLACELINE_QUERY = \"[USERS] set placeline query\";\nvar ADD_PLACELINE_QUERY = \"[USERS] add placeline query\";\nvar SET_PLACELINE_LOADING = \"[USERS] set placeline loading\";\n//list\nvar SET_LIST_ACTIVE = \"[USERS] set list active\";\nvar SET_LIST_ID = \"[USERS] set list id\";\nvar SET_LIST_QUERY = \"[USERS] set list query\";\nvar ADD_LIST_QUERY = \"[USERS] add list query\";\nvar CLEAR_QUERY_KEY = \"[USERS] clear query key\";\nvar TOGGLE_LIST_ID = \"[USERS] toggle list id\";\n//analytics page\nvar SET_USERS_ANALYTICS_PAGE = \"[USERS] set user analytics page\";\nvar SET_USERS_ANALYTICS_ID = \"[USERS] set analytics id\";\nvar SET_USERS_ANALYTICS_QUERY = \"[USERS] set analytics query\";\nvar SET_USERS_ANALYTICS_LOADING = \"[USERS] set analytics loading\";\nvar SET_USERS_LIST_DATA_MAP = \"[USERS] set users list data map\";\n//analytics all\nvar SET_MARKERS_ACTIVE = \"[USERS] set markerS active\";\nvar SET_USERS_ANALYTICS_ALL = \"[USERS] set users analytics all\";\nvar ADD_USERS_ANALYTICS_ALL = \"[USERS] add users analytics all\";\nvar SET_USERS_ANALYTICS_ALL_QUERY = \"[USERS] add analytics all query\";\nvar ADD_USERS_ANALYTICS_ALL_QUERY = \"[USERS] set analytics all query\";\nvar SET_USERS_ANALYTICS_ALL_LOADING = \"[USERS] set analytics all loading\";\nvar SET_USERS_MARKERS_DATA_MAP = \"[USERS] set users listAll data map\";\n//summary\nvar SET_SUMMARY_ACTIVE = \"[USERS] set summary active\";\nvar SET_USERS_SUMMARY = \"[USERS] set users summary\";\nvar SET_USERS_SUMMARY_LOADING = \"[USERS] set summary loading\";\nvar SET_USERS_INDEX_PAGE = \"[USERS] set user index page\";\nvar ADD_USERS_INDEX_ALL = \"[USERS] add users index all\";\nvar SET_USERS_LIST_API_TYPE = \"[USERS] set users list api type\";\nvar SetUserData = /*@__PURE__*/ (function () {\n    function SetUserData(payload) {\n        this.payload = payload;\n        this.type = SET_USER_DATA;\n    }\n    return SetUserData;\n}());\nvar SetPlacelineId = /*@__PURE__*/ (function () {\n    function SetPlacelineId(payload) {\n        this.payload = payload;\n        this.type = SET_PLACELINE_ID;\n    }\n    return SetPlacelineId;\n}());\nvar TogglePlacelineId = /*@__PURE__*/ (function () {\n    function TogglePlacelineId(payload) {\n        this.payload = payload;\n        this.type = TOGGLE_PLACELINE_ID;\n    }\n    return TogglePlacelineId;\n}());\nvar SetPlacelineQuery = /*@__PURE__*/ (function () {\n    function SetPlacelineQuery(payload) {\n        this.payload = payload;\n        this.type = SET_PLACELINE_QUERY;\n    }\n    return SetPlacelineQuery;\n}());\nvar AddPlacelineQuery = /*@__PURE__*/ (function () {\n    function AddPlacelineQuery(payload) {\n        this.payload = payload;\n        this.type = ADD_PLACELINE_QUERY;\n    }\n    return AddPlacelineQuery;\n}());\nvar SetPlacelineLoading = /*@__PURE__*/ (function () {\n    function SetPlacelineLoading(payload) {\n        this.payload = payload;\n        this.type = SET_PLACELINE_LOADING;\n    }\n    return SetPlacelineLoading;\n}());\nvar SetUsersListId = /*@__PURE__*/ (function () {\n    function SetUsersListId(payload) {\n        this.payload = payload;\n        this.type = SET_LIST_ID;\n    }\n    return SetUsersListId;\n}());\nvar ToggleUsersListId = /*@__PURE__*/ (function () {\n    function ToggleUsersListId(payload) {\n        this.payload = payload;\n        this.type = TOGGLE_LIST_ID;\n    }\n    return ToggleUsersListId;\n}());\nvar SetListQuery = /*@__PURE__*/ (function () {\n    function SetListQuery(payload) {\n        this.payload = payload;\n        this.type = SET_LIST_QUERY;\n    }\n    return SetListQuery;\n}());\nvar AddListQuery = /*@__PURE__*/ (function () {\n    function AddListQuery(payload) {\n        this.payload = payload;\n        this.type = ADD_LIST_QUERY;\n    }\n    return AddListQuery;\n}());\nvar ClearQueryKey = /*@__PURE__*/ (function () {\n    function ClearQueryKey(payload) {\n        this.payload = payload;\n        this.type = CLEAR_QUERY_KEY;\n    }\n    return ClearQueryKey;\n}());\nvar SetUsersAnalyticsPage = /*@__PURE__*/ (function () {\n    function SetUsersAnalyticsPage(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_ANALYTICS_PAGE;\n    }\n    return SetUsersAnalyticsPage;\n}());\nvar SetUsersAnalyticsLoading = /*@__PURE__*/ (function () {\n    function SetUsersAnalyticsLoading(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_USERS_ANALYTICS_LOADING;\n    }\n    return SetUsersAnalyticsLoading;\n}());\nvar SetUsersIndexPage = /*@__PURE__*/ (function () {\n    function SetUsersIndexPage(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_INDEX_PAGE;\n    }\n    return SetUsersIndexPage;\n}());\nvar AddUsersAnalyticsAll = /*@__PURE__*/ (function () {\n    function AddUsersAnalyticsAll(payload) {\n        this.payload = payload;\n        this.type = ADD_USERS_ANALYTICS_ALL;\n    }\n    return AddUsersAnalyticsAll;\n}());\nvar SetUsersAnalyticsAll = /*@__PURE__*/ (function () {\n    function SetUsersAnalyticsAll(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_ANALYTICS_ALL;\n    }\n    return SetUsersAnalyticsAll;\n}());\nvar SetUsersAnalyticsAllLoading = /*@__PURE__*/ (function () {\n    function SetUsersAnalyticsAllLoading(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_USERS_ANALYTICS_ALL_LOADING;\n    }\n    return SetUsersAnalyticsAllLoading;\n}());\nvar SetUsersIndexAll = /*@__PURE__*/ (function () {\n    function SetUsersIndexAll(payload) {\n        this.payload = payload;\n        //todo change name\n        this.type = ADD_USERS_INDEX_ALL;\n    }\n    return SetUsersIndexAll;\n}());\nvar SetUsersListApiType = /*@__PURE__*/ (function () {\n    function SetUsersListApiType(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_LIST_API_TYPE;\n    }\n    return SetUsersListApiType;\n}());\nvar SetUsersListDataMap = /*@__PURE__*/ (function () {\n    function SetUsersListDataMap(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_LIST_DATA_MAP;\n    }\n    return SetUsersListDataMap;\n}());\nvar SetUsersMarkersDataMap = /*@__PURE__*/ (function () {\n    function SetUsersMarkersDataMap(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_MARKERS_DATA_MAP;\n    }\n    return SetUsersMarkersDataMap;\n}());\nvar SetListActive = /*@__PURE__*/ (function () {\n    function SetListActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_LIST_ACTIVE;\n    }\n    return SetListActive;\n}());\nvar SetMarkersActive = /*@__PURE__*/ (function () {\n    function SetMarkersActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_MARKERS_ACTIVE;\n    }\n    return SetMarkersActive;\n}());\nvar SetSummaryActive = /*@__PURE__*/ (function () {\n    function SetSummaryActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_SUMMARY_ACTIVE;\n    }\n    return SetSummaryActive;\n}());\nvar SetUsersSummary = /*@__PURE__*/ (function () {\n    function SetUsersSummary(payload) {\n        this.payload = payload;\n        this.type = SET_USERS_SUMMARY;\n    }\n    return SetUsersSummary;\n}());\nvar SetSummaryLoading = /*@__PURE__*/ (function () {\n    function SetSummaryLoading(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_USERS_SUMMARY_LOADING;\n    }\n    return SetSummaryLoading;\n}());\nvar UsersDispatcher = Object.freeze({\n    SET_USER_DATA: SET_USER_DATA,\n    SET_PLACELINE_ID: SET_PLACELINE_ID,\n    TOGGLE_PLACELINE_ID: TOGGLE_PLACELINE_ID,\n    SET_PLACELINE_QUERY: SET_PLACELINE_QUERY,\n    ADD_PLACELINE_QUERY: ADD_PLACELINE_QUERY,\n    SET_PLACELINE_LOADING: SET_PLACELINE_LOADING,\n    SET_LIST_ACTIVE: SET_LIST_ACTIVE,\n    SET_LIST_ID: SET_LIST_ID,\n    SET_LIST_QUERY: SET_LIST_QUERY,\n    ADD_LIST_QUERY: ADD_LIST_QUERY,\n    CLEAR_QUERY_KEY: CLEAR_QUERY_KEY,\n    TOGGLE_LIST_ID: TOGGLE_LIST_ID,\n    SET_USERS_ANALYTICS_PAGE: SET_USERS_ANALYTICS_PAGE,\n    SET_USERS_ANALYTICS_ID: SET_USERS_ANALYTICS_ID,\n    SET_USERS_ANALYTICS_QUERY: SET_USERS_ANALYTICS_QUERY,\n    SET_USERS_ANALYTICS_LOADING: SET_USERS_ANALYTICS_LOADING,\n    SET_USERS_LIST_DATA_MAP: SET_USERS_LIST_DATA_MAP,\n    SET_MARKERS_ACTIVE: SET_MARKERS_ACTIVE,\n    SET_USERS_ANALYTICS_ALL: SET_USERS_ANALYTICS_ALL,\n    ADD_USERS_ANALYTICS_ALL: ADD_USERS_ANALYTICS_ALL,\n    SET_USERS_ANALYTICS_ALL_QUERY: SET_USERS_ANALYTICS_ALL_QUERY,\n    ADD_USERS_ANALYTICS_ALL_QUERY: ADD_USERS_ANALYTICS_ALL_QUERY,\n    SET_USERS_ANALYTICS_ALL_LOADING: SET_USERS_ANALYTICS_ALL_LOADING,\n    SET_USERS_MARKERS_DATA_MAP: SET_USERS_MARKERS_DATA_MAP,\n    SET_SUMMARY_ACTIVE: SET_SUMMARY_ACTIVE,\n    SET_USERS_SUMMARY: SET_USERS_SUMMARY,\n    SET_USERS_SUMMARY_LOADING: SET_USERS_SUMMARY_LOADING,\n    SET_USERS_INDEX_PAGE: SET_USERS_INDEX_PAGE,\n    ADD_USERS_INDEX_ALL: ADD_USERS_INDEX_ALL,\n    SET_USERS_LIST_API_TYPE: SET_USERS_LIST_API_TYPE,\n    SetUserData: SetUserData,\n    SetPlacelineId: SetPlacelineId,\n    TogglePlacelineId: TogglePlacelineId,\n    SetPlacelineQuery: SetPlacelineQuery,\n    AddPlacelineQuery: AddPlacelineQuery,\n    SetPlacelineLoading: SetPlacelineLoading,\n    SetUsersListId: SetUsersListId,\n    ToggleUsersListId: ToggleUsersListId,\n    SetListQuery: SetListQuery,\n    AddListQuery: AddListQuery,\n    ClearQueryKey: ClearQueryKey,\n    SetUsersAnalyticsPage: SetUsersAnalyticsPage,\n    SetUsersAnalyticsLoading: SetUsersAnalyticsLoading,\n    SetUsersIndexPage: SetUsersIndexPage,\n    AddUsersAnalyticsAll: AddUsersAnalyticsAll,\n    SetUsersAnalyticsAll: SetUsersAnalyticsAll,\n    SetUsersAnalyticsAllLoading: SetUsersAnalyticsAllLoading,\n    SetUsersIndexAll: SetUsersIndexAll,\n    SetUsersListApiType: SetUsersListApiType,\n    SetUsersListDataMap: SetUsersListDataMap,\n    SetUsersMarkersDataMap: SetUsersMarkersDataMap,\n    SetListActive: SetListActive,\n    SetMarkersActive: SetMarkersActive,\n    SetSummaryActive: SetSummaryActive,\n    SetUsersSummary: SetUsersSummary,\n    SetSummaryLoading: SetSummaryLoading\n});\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar initialUsersAnalyticsAll = {\n    resultsEntity: {},\n    isFirst: false\n};\nvar initialUsersIndexAll = {\n    resultsEntity: {},\n    isFirst: false\n};\nvar initialState = {\n    usersListActive: false,\n    usersMarkersActive: false,\n    usersSummaryActive: false,\n    listApiType: ApiType.analytics,\n    usersAnalyticsAll: initialUsersAnalyticsAll,\n    usersIndexAll: initialUsersIndexAll\n};\nfunction usersReducer(state, action) {\n    if (state === void 0) {\n        state = initialState;\n    }\n    switch (action.type) {\n        /*\n        placeline\n         */\n        case SET_USER_DATA: {\n            return __assign$1({}, state, { userData: action.payload });\n        }\n        case SET_PLACELINE_ID: {\n            return __assign$1({}, state, { placelineId: action.payload });\n        }\n        case TOGGLE_PLACELINE_ID: {\n            var placelineId = state.placelineId == action.payload ? null : action.payload;\n            return __assign$1({}, state, { placelineId: placelineId });\n        }\n        case SET_PLACELINE_QUERY: {\n            return __assign$1({}, state, { placelineQuery: action.payload });\n        }\n        case ADD_PLACELINE_QUERY: {\n            return __assign$1({}, state, { placelineQuery: __assign$1({}, state.placelineQuery, action.payload) });\n        }\n        case SET_PLACELINE_LOADING: {\n            return __assign$1({}, state, { placelineLoading: !!action.payload });\n        }\n        /*\n        List\n         */\n        case SET_LIST_ID: {\n            return __assign$1({}, state, { listId: action.payload });\n        }\n        case TOGGLE_LIST_ID: {\n            var listId = state.listId == action.payload ? null : action.payload;\n            return __assign$1({}, state, { listId: listId });\n        }\n        case SET_LIST_ACTIVE: {\n            return __assign$1({}, state, { usersListActive: action.payload });\n        }\n        case ADD_LIST_QUERY: {\n            return __assign$1({}, state, { listQuery: __assign$1({}, state.listQuery, action.payload) });\n        }\n        case SET_LIST_QUERY: {\n            return __assign$1({}, state, { listQuery: action.payload });\n        }\n        case CLEAR_QUERY_KEY: {\n            var listQuery = __assign$1({}, state.listQuery);\n            if (listQuery)\n                delete listQuery[action.payload];\n            return __assign$1({}, state, { listQuery: listQuery });\n        }\n        /*\n        Analytics page\n         */\n        case SET_USERS_ANALYTICS_PAGE: {\n            return __assign$1({}, state, { usersAnalyticsPage: action.payload });\n        }\n        case SET_USERS_ANALYTICS_LOADING: {\n            return __assign$1({}, state, { analyticsLoading: action.payload });\n        }\n        case SET_USERS_INDEX_PAGE: {\n            return __assign$1({}, state, { usersIndexPage: action.payload });\n        }\n        case ADD_USERS_ANALYTICS_ALL: {\n            var resultsEntity = {};\n            if (state.usersAnalyticsAll) {\n                resultsEntity = __assign$1({}, state.usersAnalyticsAll.resultsEntity, indexBy(action.payload.results, \"id\"));\n            }\n            return __assign$1({}, state, { usersAnalyticsAll: {\n                    next: action.payload.next,\n                    previous: action.payload.previous,\n                    count: action.payload.count,\n                    resultsEntity: resultsEntity\n                } });\n        }\n        case SET_USERS_ANALYTICS_ALL: {\n            var resultsEntity = {};\n            if (state.usersAnalyticsAll) {\n                resultsEntity = indexBy(action.payload.results, \"id\");\n            }\n            return __assign$1({}, state, { usersAnalyticsAll: {\n                    next: action.payload.next,\n                    previous: action.payload.previous,\n                    count: action.payload.count,\n                    resultsEntity: resultsEntity\n                } });\n        }\n        case SET_USERS_ANALYTICS_ALL_LOADING: {\n            return __assign$1({}, state, { analyticsAllLoading: action.payload });\n        }\n        case ADD_USERS_INDEX_ALL: {\n            // const newEntities = _.indexBy(action.payload.results, 'id');\n            var resultsEntity = state.usersIndexAll\n                ? __assign$1({}, state.usersIndexAll.resultsEntity, action.payload.resultsEntity) : {};\n            return __assign$1({}, state, { usersIndexAll: __assign$1({}, action.payload, { resultsEntity: resultsEntity }) });\n        }\n        case SET_USERS_LIST_DATA_MAP: {\n            return __assign$1({}, state, { usersListDataMap: action.payload });\n        }\n        case SET_USERS_MARKERS_DATA_MAP: {\n            return __assign$1({}, state, { usersMarkersDataMap: action.payload });\n        }\n        case SET_USERS_LIST_API_TYPE: {\n            return __assign$1({}, state, { listApiType: action.payload });\n        }\n        case SET_MARKERS_ACTIVE: {\n            return __assign$1({}, state, { usersMarkersActive: action.payload });\n        }\n        /*\n        Summary\n         */\n        case SET_SUMMARY_ACTIVE: {\n            return __assign$1({}, state, { usersSummaryActive: action.payload });\n        }\n        case SET_USERS_SUMMARY: {\n            return __assign$1({}, state, { usersSummary: action.payload });\n        }\n        case SET_USERS_SUMMARY_LOADING: {\n            return __assign$1({}, state, { summaryLoading: !!action.payload });\n        }\n        default: {\n            return state;\n        }\n    }\n}\nvar getUserData = function (state) { return state.userData; };\nvar getPlacelineId = function (state) { return state.placelineId; };\nvar getPlacelineQuery = function (state) { return state.placelineQuery; };\nvar getPlacelineLoading = function (state) { return state.placelineLoading; };\nvar getListActive = function (state) { return state.usersListActive; };\nvar getListId = function (state) { return state.listId; };\nvar getListQuery = function (state) { return state.listQuery; };\nvar getAnalyticsPage = function (state) { return state.usersAnalyticsPage; };\nvar getAnalyticsLoading = function (state) { return state.analyticsLoading; };\nvar getAnalyticsAll = function (state) { return state.usersAnalyticsAll; };\nvar getAnalyticsAllLoading = function (state) {\n    return state.analyticsAllLoading;\n};\nvar getMarkerDataMap = function (state) { return state.usersMarkersDataMap; };\nvar getIndexAll = function (state) { return state.usersIndexAll; };\n// export const getAnalyticFilteredsMarkers = (state: State) => validMarkers(state.usersAnalyticsAll);\n// export const getIndexFilteredMarkers = (state: State) => validMarkers(state.usersIndexAll);\nvar getIndexPage = function (state) { return state.usersIndexPage; };\nvar getListApiType = function (state) { return state.listApiType; };\nvar getMarkersActive = function (state) { return state.usersMarkersActive; };\nvar getSummary = function (state) { return state.usersSummary; };\nvar getSummaryActive = function (state) { return state.usersSummaryActive; };\nvar getSummaryLoading = function (state) { return state.summaryLoading; };\nvar getAnalyticFilteredMarkers = createSelector(getAnalyticsAll, getMarkerDataMap, function (allData, mapFunc) {\n    return mapFunc ? mapFunc(allData) : allData;\n});\nvar getIndexFilteredMarkers = createSelector(getIndexAll, getMarkerDataMap, function (allData, mapFunc) {\n    return mapFunc ? mapFunc(allData) : allData;\n});\nvar getIndexActive = createSelector(getListApiType, getListActive, function (apiType, isListActive) {\n    return false;\n    // return apiType === ApiType.index && isListActive\n});\nvar getAnalyticsActive = createSelector(getListApiType, getListActive, function (apiType, isListActive) {\n    return isListActive;\n    // return apiType === ApiType.analytics && isListActive\n});\nvar getIndexMarkersActive = createSelector(getListApiType, getMarkersActive, function (apiType, isMarkersActive) {\n    return false;\n    // return apiType === ApiType.index && isMarkersActive\n});\nvar getAnalyticsMarkersActive = createSelector(getListApiType, getMarkersActive, function (apiType, isMarkersActive) {\n    return isMarkersActive;\n    // return apiType === ApiType.analytics && isMarkersActive\n});\nvar SET_SELECTED_ID = \"[SEGMENTS] set selected id\";\nvar SET_HIGHLIGHTED_ID = \"[SEGMENTS] set highlighted id\";\nvar SET_RESET_MAP_ID = \"[SEGMENTS] set reset map id\";\nvar SET_POPUP_ID = \"[SEGMENTS] set popup id\";\nvar SetSelectedId = /*@__PURE__*/ (function () {\n    function SetSelectedId(payload) {\n        this.payload = payload;\n        this.type = SET_SELECTED_ID;\n    }\n    return SetSelectedId;\n}());\nvar SetHighlightedId = /*@__PURE__*/ (function () {\n    function SetHighlightedId(payload) {\n        this.payload = payload;\n        this.type = SET_HIGHLIGHTED_ID;\n    }\n    return SetHighlightedId;\n}());\nvar SetResetMapId = /*@__PURE__*/ (function () {\n    function SetResetMapId(payload) {\n        this.payload = payload;\n        this.type = SET_RESET_MAP_ID;\n    }\n    return SetResetMapId;\n}());\nvar SetPopupId = /*@__PURE__*/ (function () {\n    function SetPopupId(payload) {\n        this.payload = payload;\n        this.type = SET_POPUP_ID;\n    }\n    return SetPopupId;\n}());\nvar SegmentsDispatcher = Object.freeze({\n    SET_SELECTED_ID: SET_SELECTED_ID,\n    SET_HIGHLIGHTED_ID: SET_HIGHLIGHTED_ID,\n    SET_RESET_MAP_ID: SET_RESET_MAP_ID,\n    SET_POPUP_ID: SET_POPUP_ID,\n    SetSelectedId: SetSelectedId,\n    SetHighlightedId: SetHighlightedId,\n    SetResetMapId: SetResetMapId,\n    SetPopupId: SetPopupId\n});\nvar __assign$2 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar initialState$1 = {};\nfunction segmentsReducer(state, action) {\n    if (state === void 0) {\n        state = initialState$1;\n    }\n    switch (action.type) {\n        case SET_SELECTED_ID: {\n            return __assign$2({}, state, { selectedId: action.payload });\n        }\n        case SET_RESET_MAP_ID: {\n            return __assign$2({}, state, { resetMapId: action.payload });\n        }\n        case SET_HIGHLIGHTED_ID: {\n            return !!state.selectedId\n                ? __assign$2({}, state, { highlightedId: action.payload }) : state;\n        }\n        case SET_POPUP_ID: {\n            return !!state.selectedId ? __assign$2({}, state, { popupId: action.payload }) : state;\n        }\n        default: {\n            return state;\n        }\n    }\n}\nvar getSelectedId = function (state) { return state.selectedId; };\nvar getResetMapId = function (state) { return state.resetMapId; };\nvar SET_LIST_ACTIVE$1 = \"[GROUPS] set list active\";\nvar SET_ID = \"[GROUPS] set id\";\nvar SET_GROUPS = \"[GROUPS] set groups\";\nvar SET_GROUP = \"[GROUPS] set group\";\nvar SetListActive$1 = (function () {\n    function SetListActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_LIST_ACTIVE$1;\n    }\n    return SetListActive;\n}());\nvar SetGroupId = /*@__PURE__*/ (function () {\n    function SetGroupId(payload) {\n        this.payload = payload;\n        this.type = SET_ID;\n    }\n    return SetGroupId;\n}());\nvar SetGroupsAll = /*@__PURE__*/ (function () {\n    function SetGroupsAll(payload) {\n        this.payload = payload;\n        this.type = SET_GROUPS;\n    }\n    return SetGroupsAll;\n}());\nvar SetGroup = /*@__PURE__*/ (function () {\n    function SetGroup(payload) {\n        this.payload = payload;\n        this.type = SET_GROUP;\n    }\n    return SetGroup;\n}());\nvar GroupsDispatcher = Object.freeze({\n    SET_LIST_ACTIVE: SET_LIST_ACTIVE$1,\n    SET_ID: SET_ID,\n    SET_GROUPS: SET_GROUPS,\n    SET_GROUP: SET_GROUP,\n    SetListActive: SetListActive$1,\n    SetGroupId: SetGroupId,\n    SetGroupsAll: SetGroupsAll,\n    SetGroup: SetGroup\n});\nvar __assign$3 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar initialState$2 = {\n    listActive: false\n};\nfunction groupsReducer(state, action) {\n    if (state === void 0) {\n        state = initialState$2;\n    }\n    switch (action.type) {\n        case SET_LIST_ACTIVE$1: {\n            return __assign$3({}, state, { listActive: action.payload });\n        }\n        case SET_ID: {\n            return __assign$3({}, state, { selectedId: action.payload });\n        }\n        case SET_GROUPS: {\n            return __assign$3({}, state, { allGroups: action.payload });\n        }\n        case SET_GROUP: {\n            return __assign$3({}, state, { group: action.payload });\n        }\n        default: {\n            return state;\n        }\n    }\n}\nvar getId = function (state) { return state.selectedId; };\nvar getAllGroups = function (state) { return state.allGroups; };\nvar getListActive$1 = function (state) { return state.listActive; };\nvar SET_ACCOUNT_USER = \"[ACCOUNT] set account user\";\nvar SET_MEMBERHSHIPS_ALL = \"[ACCOUNT] set memberships all\";\nvar SET_KEY = \"[ACCOUNT] set key\";\nvar SET_TEMP_KEY = \"[ACCOUNT] set temp key\";\nvar SET_USER_ID = \"[ACCOUNT] set user id\";\nvar SetAccountUser = /*@__PURE__*/ (function () {\n    function SetAccountUser(payload) {\n        this.payload = payload;\n        this.type = SET_ACCOUNT_USER;\n    }\n    return SetAccountUser;\n}());\nvar SetMembershipsAll = /*@__PURE__*/ (function () {\n    function SetMembershipsAll(payload) {\n        this.payload = payload;\n        this.type = SET_MEMBERHSHIPS_ALL;\n    }\n    return SetMembershipsAll;\n}());\nvar SetKey = /*@__PURE__*/ (function () {\n    function SetKey(payload) {\n        this.payload = payload;\n        this.type = SET_KEY;\n    }\n    return SetKey;\n}());\nvar SetUserId = /*@__PURE__*/ (function () {\n    function SetUserId(payload) {\n        this.payload = payload;\n        this.type = SET_USER_ID;\n    }\n    return SetUserId;\n}());\nvar __assign$4 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar initialState$3 = {\n    key: \"false\"\n};\nfunction reducer$1(state, action) {\n    if (state === void 0) {\n        state = initialState$3;\n    }\n    switch (action.type) {\n        case SET_ACCOUNT_USER: {\n            return __assign$4({}, state, { accountUser: action.payload });\n        }\n        case SET_MEMBERHSHIPS_ALL: {\n            // let results = state.membershipsAll ? [...state.membershipsAll.results, ...action.payload.results] : action.payload.results;\n            // return {...state, membershipsAll: {...action.payload, results}}\n            return __assign$4({}, state, { membershipsAll: action.payload });\n        }\n        case SET_KEY: {\n            return __assign$4({}, state, { key: action.payload });\n        }\n        case SET_TEMP_KEY: {\n            return __assign$4({}, state, { tempKey: action.payload });\n        }\n        case SET_USER_ID: {\n            return __assign$4({}, state, { userId: action.payload });\n        }\n        default: {\n            return state;\n        }\n    }\n}\nvar getAccountUser$1 = function (state) { return state.accountUser; };\nvar getMembershipsAll = function (state) { return state.membershipsAll; };\nvar getKey = function (state) { return state.key; };\nvar getTempKey = function (state) { return state.tempKey; };\nvar getUserId = function (state) { return state.userId; };\nvar getCurrentKey = createSelector(getKey, getTempKey, function (key, tempKey) {\n    return tempKey || key;\n});\n/*\nList\n */\nvar SET_ACTIONS_LIST = \"[ACTIONS] set actions list\";\nvar SET_ACTIONS_LIST_QUERY = \"[ACTIONS] set actions list query\";\nvar ADD_ACTIONS_LIST_QUERY = \"[ACTIONS] add actions list query\";\nvar SET_ACTIONS_LIST_ACTIVE = \"[ACTIONS] set actions list active\";\nvar SET_ACTIONS_LIST_LOADING = \"[ACTIONS] set actions list loading\";\n/*\nGraph\n */\nvar SET_ACTIONS_GRAPH = \"[ACTIONS] set actions graph\";\nvar SET_ACTIONS_GRAPH_QUERY = \"[ACTIONS] set actions graph query\";\nvar ADD_ACTIONS_GRAPH_QUERY = \"[ACTIONS] add actions graph query\";\nvar SET_ACTIONS_GRAPH_LOADING = \"[ACTIONS] set actions graph loading\";\n/*\nSummary\n */\nvar SET_ACTIONS_SUMMARY = \"[ACTIONS] set actions summary\";\nvar SET_ACTIONS_SUMMARY_ACTIVE = \"[ACTIONS] set actions summary active\";\nvar ADD_ACTIONS_SUMMARY_QUERY = \"[ACTIONS] actions summary query\";\nvar SET_ACTIONS_SUMMARY_QUERY = \"[ACTIONS] add set actions summary query\";\nvar SET_ACTIONS_SUMMARY_LOADING = \"[ACTIONS] set actions summary loading\";\n/*\nHeatmap\n */\n// export const SET_ACTIONS_HEATMAP = \"[ACTIONS] set actions summary\";\n// export const SET_ACTIONS_HEATMAP_ACTIVE = \"[ACTIONS] set actions summary active\";\n// export const ADD_ACTIONS_HEATMAP_QUERY = \"[ACTIONS] actions summary query\";\n// export const SET_ACTIONS_HEATMAP_QUERY = \"[ACTIONS] add set actions summary query\";\n// export const SET_ACTIONS_HEATMAP_LOADING = \"[ACTIONS] set actions graph loading\";\nvar SetList = /*@__PURE__*/ (function () {\n    function SetList(payload) {\n        this.payload = payload;\n        this.type = SET_ACTIONS_LIST;\n    }\n    return SetList;\n}());\nvar SetListQuery$1 = (function () {\n    function SetListQuery(payload) {\n        this.payload = payload;\n        this.type = SET_ACTIONS_LIST_QUERY;\n    }\n    return SetListQuery;\n}());\nvar SetListActive$2 = (function () {\n    function SetListActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_ACTIONS_LIST_ACTIVE;\n    }\n    return SetListActive;\n}());\nvar SetListLoading = /*@__PURE__*/ (function () {\n    function SetListLoading(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_ACTIONS_LIST_LOADING;\n    }\n    return SetListLoading;\n}());\nvar SetSummary = /*@__PURE__*/ (function () {\n    function SetSummary(payload) {\n        this.payload = payload;\n        this.type = SET_ACTIONS_SUMMARY;\n    }\n    return SetSummary;\n}());\nvar SetSummaryQuery = /*@__PURE__*/ (function () {\n    function SetSummaryQuery(payload) {\n        this.payload = payload;\n        this.type = SET_ACTIONS_SUMMARY_QUERY;\n    }\n    return SetSummaryQuery;\n}());\nvar SetSummaryLoading$1 = (function () {\n    function SetSummaryLoading(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_ACTIONS_SUMMARY_LOADING;\n    }\n    return SetSummaryLoading;\n}());\nvar SetSummaryActive$1 = (function () {\n    function SetSummaryActive(payload) {\n        if (payload === void 0) {\n            payload = true;\n        }\n        this.payload = payload;\n        this.type = SET_ACTIONS_SUMMARY_ACTIVE;\n    }\n    return SetSummaryActive;\n}());\nvar __assign$5 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar initialState$4 = {\n    list: null,\n    listLoading: false,\n    listQuery: {},\n    listActive: false,\n    summary: null,\n    summaryActive: false,\n    summaryLoading: false,\n    summaryQuery: {},\n    graph: null,\n    graphLoading: false,\n    graphQuery: {}\n};\nfunction actionsReducer(state, action) {\n    if (state === void 0) {\n        state = initialState$4;\n    }\n    switch (action.type) {\n        /*\n        list\n         */\n        case SET_ACTIONS_LIST: {\n            return __assign$5({}, state, { list: action.payload });\n        }\n        case SET_ACTIONS_LIST_ACTIVE: {\n            return __assign$5({}, state, { listActive: action.payload });\n        }\n        case SET_ACTIONS_LIST_QUERY: {\n            return __assign$5({}, state, { listQuery: action.payload });\n        }\n        case ADD_ACTIONS_LIST_QUERY: {\n            var listQuery = __assign$5({}, state.listQuery, action.payload);\n            return __assign$5({}, state, { listQuery: listQuery });\n        }\n        case SET_ACTIONS_LIST_LOADING: {\n            return __assign$5({}, state, { listLoading: action.payload });\n        }\n        /*\n        Summary\n         */\n        case SET_ACTIONS_SUMMARY: {\n            return __assign$5({}, state, { summary: action.payload });\n        }\n        case SET_ACTIONS_SUMMARY_LOADING: {\n            return __assign$5({}, state, { summaryLoading: action.payload });\n        }\n        case SET_ACTIONS_SUMMARY_ACTIVE: {\n            return __assign$5({}, state, { summaryActive: action.payload });\n        }\n        case SET_ACTIONS_SUMMARY_QUERY: {\n            return __assign$5({}, state, { summaryQuery: action.payload });\n        }\n        case ADD_ACTIONS_SUMMARY_QUERY: {\n            var summaryQuery = __assign$5({}, state.summaryQuery, action.payload);\n            return __assign$5({}, state, { summaryQuery: summaryQuery });\n        }\n        /*\n        Graph\n         */\n        case SET_ACTIONS_GRAPH: {\n            return __assign$5({}, state, { graph: action.payload });\n        }\n        case SET_ACTIONS_GRAPH_LOADING: {\n            return __assign$5({}, state, { graphLoading: action.payload });\n        }\n        case SET_ACTIONS_GRAPH_QUERY: {\n            return __assign$5({}, state, { graphQuery: action.payload });\n        }\n        case ADD_ACTIONS_GRAPH_QUERY: {\n            var graphQuery = __assign$5({}, state.graphQuery, action.payload);\n            return __assign$5({}, state, { graphQuery: graphQuery });\n        }\n        default: {\n            return state;\n        }\n    }\n}\nvar getList = function (state) { return state.list; };\nvar getListLoading = function (state) { return state.listLoading; };\nvar getListActive$2 = function (state) { return state.listActive; };\nvar getListQuery$1 = function (state) { return state.listQuery; };\nvar getSummary$1 = function (state) { return state.summary; };\nvar getSummaryActive$1 = function (state) { return state.summaryActive; };\nvar getSummaryQuery = function (state) { return state.summaryQuery; };\nvar getSummaryLoading$1 = function (state) { return state.summaryLoading; };\nvar getGraph = function (state) { return state.graph; };\nvar getGraphQuery = function (state) { return state.graphQuery; };\nvar getGraphLoading = function (state) { return state.graphLoading; };\nvar reducers = {};\nfunction reducer(state, action) {\n    return combineReducers(reducers);\n}\nvar metaReducers = [];\n/**\n * Users selectors\n */\nvar getUsersState = createFeatureSelector(\"users\");\nvar getUsersUsersData = createSelector(getUsersState, getUserData);\nvar getUsersPlacelineId = createSelector(getUsersState, getPlacelineId);\nvar getUsersPlacelineQuery = createSelector(getUsersState, getPlacelineQuery);\nvar getUsersPlacelineLoading = createSelector(getUsersState, getPlacelineLoading);\nvar getUsersListActive = createSelector(getUsersState, getListActive);\nvar getUsersListId = createSelector(getUsersState, getListId);\nvar getUsersListQuery = createSelector(getUsersState, getListQuery);\nvar getUsersAnalyticsPage = createSelector(getUsersState, getAnalyticsPage);\nvar getUsersAnalyticsLoading = createSelector(getUsersState, getAnalyticsLoading);\nvar getUsersIndexPage = createSelector(getUsersState, getIndexPage);\n// export const getUsersListApiType = createSelector(getUsersState, fromUsers.getListApiType);\nvar getUsersIndexIsActive = createSelector(getUsersState, getIndexActive);\nvar getUsersAnalyticsIsActive = createSelector(getUsersState, getAnalyticsActive);\nvar getUsersIndexMarkersIsActive = createSelector(getUsersState, getIndexMarkersActive);\nvar getUsersAnalyticsMarkersIsActive = createSelector(getUsersState, getAnalyticsMarkersActive);\nvar getUsersAnalyticsAllLoading = createSelector(getUsersState, getAnalyticsAllLoading);\nvar getUsersIndexFilteredMarker = createSelector(getUsersState, getIndexFilteredMarkers);\nvar getUsersAnalyticsFilteredMarker = createSelector(getUsersState, getAnalyticFilteredMarkers);\nvar getUsersIndexAll = createSelector(getUsersState, getIndexAll);\nvar getUsersAnalyticsAll = createSelector(getUsersState, getAnalyticsAll);\nvar getUsersSummary = createSelector(getUsersState, getSummary);\nvar getUsersSummaryActive = createSelector(getUsersState, getSummaryActive);\nvar getUsersSummaryLoading = createSelector(getUsersState, getSummaryLoading);\n/**\n * Segment selectors\n */\nvar getSegmentsState = createFeatureSelector(\"segments\");\nvar getSegmentsSelectedId = createSelector(getSegmentsState, getSelectedId);\nvar getSegmentsResetMapId = createSelector(getSegmentsState, getResetMapId);\n/**\n *\n * Groups reducer\n */\nvar getGroupsState = createFeatureSelector(\"groups\");\nvar getGroupId = createSelector(getGroupsState, getId);\nvar getGroupAll = createSelector(getGroupsState, getAllGroups);\nvar getGroupListActive = createSelector(getGroupsState, getListActive$1);\n/**\n Account\n */\nvar getAccountState = createFeatureSelector(\"accounts\");\nvar getAccountUser = createSelector(getAccountState, getAccountUser$1);\nvar getAccountMembershipsAll = createSelector(getAccountState, getMembershipsAll);\nvar getAccountKey = createSelector(getAccountState, getKey);\nvar getAccountTempKey = createSelector(getAccountState, getTempKey);\nvar getAccountCurrentKey = createSelector(getAccountState, getCurrentKey);\nvar getAccountUserId = createSelector(getAccountState, getUserId);\n/**\n * Actions\n */\nvar getActionsState = createFeatureSelector(\"actions\");\nvar getActionsList = createSelector(getActionsState, getList);\nvar getActionsListLoading = createSelector(getActionsState, getListLoading);\nvar getActionsListActive = createSelector(getActionsState, getListActive$2);\nvar getActionsListQuery = createSelector(getActionsState, getListQuery$1);\nvar getActionsSummary = createSelector(getActionsState, getSummary$1);\nvar getActionsSummaryActive = createSelector(getActionsState, getSummaryActive$1);\nvar getActionsSummaryLoading = createSelector(getActionsState, getSummaryLoading$1);\nvar getActionsSummaryQuery = createSelector(getActionsState, getSummaryQuery);\nvar getActionsGraph = createSelector(getActionsState, getGraph);\nvar getActionsGraphLoading = createSelector(getActionsState, getGraphLoading);\nvar getActionsGraphQuery = createSelector(getActionsState, getGraphQuery);\nvar EntityItemClient = /*@__PURE__*/ (function () {\n    function EntityItemClient() {\n        //listGetData\n        this.updateStrategy = \"live\";\n        this.pollDuration = 10000;\n        // api$;\n        this.name = \"item\";\n        this.allowedQueryKeys = null;\n        // setData(data) {\n        //\n        // };\n        // setActive(isActive: boolean = true){\n        //\n        // }\n    }\n    // init: () => void;\n    // getData$: (data) => any;\n    EntityItemClient.prototype.firstDataEffect = function () {\n        this.setLoading(false);\n    };\n    EntityItemClient.prototype.getDefaultQuery = function () {\n        return {};\n    };\n    Object.defineProperty(EntityItemClient.prototype, \"apiParams$\", {\n        get: function () {\n            return this.getApiParams$();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntityItemClient.prototype, \"apiQuery$\", {\n        get: function () {\n            return this.getApiQuery$();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EntityItemClient;\n}());\nvar __extends$2 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$6 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nfunction getIdQueryDataMixin(Base) {\n    return (function (_super) {\n        __extends$2(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getData$ = function (_a) {\n            var _this = this;\n            var id = _a[0], query = _a[1];\n            var update = this.getFirstData$([id, query]).pipe(expand(function (data) {\n                return timer$1(_this.pollDuration).pipe(switchMap(function () {\n                    return _this.api$(id, query);\n                }));\n            }));\n            return this.updateStrategy != \"once\"\n                ? update\n                : this.getFirstData$([id, query]);\n        };\n        return class_1;\n    }(Base));\n}\nfunction getPageDataMixin(Base) {\n    return (function (_super) {\n        __extends$2(class_2, _super);\n        function class_2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_2.prototype.getData$ = function (_a) {\n            var _this = this;\n            var query = _a[0];\n            var update = this.getFirstData$([query]).pipe(expand(function (data) {\n                return timer$1(_this.pollDuration).pipe(switchMap(function () {\n                    if (_this.updateStrategy == \"live\") {\n                        return _this.api$(query);\n                    }\n                    else {\n                        var ids = map(data.results, function (item) {\n                            return item[\"id\"];\n                        });\n                        var updateQuery = __assign$6({}, query, { id: ids.toString(), status: null, page: null });\n                        return _this.api$(updateQuery).pipe(map$1(function (newData) {\n                            return __assign$6({}, data, { results: newData.results });\n                        }));\n                    }\n                }));\n            }));\n            return this.updateStrategy != \"once\"\n                ? update\n                : this.getFirstData$([query]);\n        };\n        return class_2;\n    }(Base));\n}\nfunction getQueryDataMixin(Base) {\n    return (function (_super) {\n        __extends$2(class_3, _super);\n        function class_3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_3.prototype.getData$ = function (_a) {\n            var _this = this;\n            var query = _a[0];\n            var update = this.getFirstData$([query]).pipe(expand(function (data) {\n                return timer$1(_this.pollDuration).pipe(switchMap(function () {\n                    return _this.api$(query);\n                }));\n            }));\n            return this.updateStrategy != \"once\"\n                ? update\n                : this.getFirstData$([query]);\n        };\n        return class_3;\n    }(Base));\n}\nfunction getAllPageDataMixin(Base) {\n    return (function (_super) {\n        __extends$2(class_4, _super);\n        function class_4() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_4.prototype.getData$ = function (_a) {\n            var query = _a[0];\n            return this.getFirstData$([query]);\n        };\n        return class_4;\n    }(Base));\n}\nvar __assign$7 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar MergeQuery = function (defaultQuery) {\n    return function (query$) {\n        return query$.pipe(map$1(function (query) {\n            return __assign$7({}, defaultQuery, query);\n        }));\n    };\n};\n// export const CombineQuery = (addQuery$) => {\n//   return (query$) => {\n//     if(addQuery$) {\n//       return combineLatest(\n//         addQuery$,\n//         query$,\n//         (addQuery, query) => {\n//           return query ? {...addQuery, ...query} : query;\n//         }\n//       )\n//     } else {\n//       return query$\n//     }\n//\n//   }\n// };\n// export const PageResults = (pageData$: Observable<Page<any> | null>): Observable<any[] | any> => {\n//   return pageData$.pipe(map((pageDate: Page<any> | null) => {\n//     return pageDate ? pageDate.results : pageDate;\n//   }))\n// };\n// export const DateRangeToQuery = (dateRangeParam: string): (param: Observable<IDateRange>) => Observable<object> => {\n//   return (dateRangeQuery$: Observable<IDateRange>) => {\n//     return dateRangeQuery$.pipe(\n//       map((dateRange) => {\n//         if (!dateRange) return {};\n//         let start =  dateRange['start'];\n//         let end = dateRange['end'];\n//         let param = dateRangeParam;\n//         return {[`min_${param}`]: start, [`max_${param}`]: end}\n//       })\n//     )\n//   }\n// };\n// export const itemAsPage = <T>() => {\n//   return (item$): Observable<Page<T>> => {\n//     return item$.pipe(\n//       map((item) => {\n//         return item ?\n//           {\n//             count: 1,\n//             next: null,\n//             previous: null,\n//             results: [item]\n//           } : null\n//       })\n//     )\n//   }\n// };\nvar __extends$3 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// import {MergeQuery} from \"ht-data\";\nfunction listQueryMixin(Base) {\n    return (function (_super) {\n        __extends$3(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getApiQuery$ = function () {\n            return this.getApiParams$().pipe(map$1(function (data) {\n                return data[0];\n            }));\n        };\n        class_1.prototype.getBaseQuery$ = function () {\n            var baseQuery$ = this.query$.pipe(AllowedQueryMap(this.allowedQueryMap), MergeQuery(this.getDefaultQuery()), CombineQueries([this.dateRange.data$.pipe(DateRangeToQuery$(this.dateParam)) || of$1({})]));\n            return baseQuery$;\n        };\n        class_1.prototype.getApiParams$ = function () {\n            var baseQuery$ = this.getBaseQuery$().pipe(map$1(function (data) {\n                return [data];\n            }));\n            return this.active$\n                ? this.active$.pipe(switchMap(function (isActive) {\n                    // console.log(isActive, \"accc\");\n                    return isActive ? baseQuery$ : of$1([]);\n                }))\n                : baseQuery$;\n        };\n        return class_1;\n    }(Base));\n}\nfunction itemQueryMixin(Base) {\n    return (function (_super) {\n        __extends$3(class_2, _super);\n        function class_2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_2.prototype.getApiQuery$ = function () {\n            return this.getApiParams$().pipe(map$1(function (data) {\n                return data[1];\n            }));\n        };\n        class_2.prototype.getApiParams$ = function () {\n            return combineLatest$1(this.id$, this.query$.pipe(MergeQuery(this.getDefaultQuery())));\n        };\n        return class_2;\n    }(Base));\n}\nvar __extends$4 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction clientSubMixin(Base) {\n    return (function (_super) {\n        __extends$4(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this.init();\n            return _this;\n        }\n        class_1.prototype.init = function () {\n            var _this = this;\n            if (!this.dataSub) {\n                this.dataSub = this.getApiParams$()\n                    .pipe(switchMap(function (data) {\n                    if (data && data[0]) {\n                        var loading = typeof data[0] === \"string\" ? data[0] : true;\n                        _this.setLoading(loading);\n                        return _this.getData$(data);\n                    }\n                    else {\n                        return empty$1();\n                    }\n                }))\n                    .subscribe(function (data) {\n                    _this.setData(data);\n                });\n            }\n        };\n        return class_1;\n    }(Base));\n}\nvar __extends$5 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction getFirstDataMixin(Base) {\n    return (function (_super) {\n        __extends$5(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getFirstData$ = function (args) {\n            var _this = this;\n            var entity = this;\n            return entity.api$.apply(entity, args).pipe(tap(function (data) {\n                _this.firstDataEffect(data);\n            }));\n        };\n        return class_1;\n    }(Base));\n}\n//\n// export interface IQueryFirstDataBase {\n//   setLoading(any): void,\n//   api$(query): Observable<any>\n// }\n//\n// export function getQueryFirstDataMixin <TBase extends Constructor<IQueryFirstDataBase>>(Base: TBase) {\n//   return class extends Base {\n//     getFirstData$([query]) {\n//       let entity = this;\n//       return entity.api$(query).pipe(\n//         tap((data) => {\n//           this.setLoading(false);\n//         })\n//       );\n//     }\n//   }\n// }\nvar __extends$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar UsersPlaceline = (function (_super) {\n    __extends$1(UsersPlaceline, _super);\n    function UsersPlaceline(_a) {\n        var store = _a.store, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.name = \"users placeline\";\n        _this.updateStrategy = \"live\";\n        _this.api$ = function (id, query) { return api.placeline(id, query); };\n        _this.store = store;\n        _this.query$ = _this.store.select(getUsersPlacelineQuery);\n        _this.data$ = _this.store.select(getUsersUsersData);\n        _this.loading$ = _this.store.select(getUsersPlacelineLoading);\n        _this.id$ = _this.store.select(getUsersPlacelineId);\n        _this.segmentsState$ = _this.store.select(getSegmentsState);\n        _this.segmentSelectedId$ = _this.store.select(getSegmentsSelectedId);\n        _this.segmentResetId$ = _this.store.select(getSegmentsResetMapId);\n        return _this;\n        // this.init()\n    }\n    UsersPlaceline.prototype.setData = function (data) {\n        this.store.dispatch(new SetUserData(data));\n    };\n    UsersPlaceline.prototype.setLoading = function (data) {\n        this.store.dispatch(new SetPlacelineLoading(data));\n    };\n    UsersPlaceline.prototype.setId = function (id) {\n        this.store.dispatch(new SetPlacelineId(id));\n    };\n    UsersPlaceline.prototype.toggleId = function (userId) {\n        this.store.dispatch(new TogglePlacelineId(userId));\n    };\n    UsersPlaceline.prototype.setQuery = function (query) {\n        this.store.dispatch(new SetPlacelineQuery(query));\n    };\n    UsersPlaceline.prototype.setSegmentSelectedId = function (segmentId) {\n        this.store.dispatch(new SetSelectedId(segmentId));\n    };\n    UsersPlaceline.prototype.setSegmentResetMapId = function (segmentId) {\n        this.store.dispatch(new SetResetMapId(segmentId));\n    };\n    UsersPlaceline.prototype.getMapData$ = function () {\n        // return dataWithSelectedId$(this.data$, this.segmentSelectedId$, [\n        //   \"segments\"\n        // ]);\n    };\n    UsersPlaceline.prototype.clearData = function () {\n        this.setData(null);\n        this.setQuery({});\n    };\n    return UsersPlaceline;\n}(EntityItemClient));\nvar UsersPlacelineClient = clientSubMixin(getIdQueryDataMixin(getFirstDataMixin(itemQueryMixin(UsersPlaceline))));\n// applyMixins(UsersPlacelineClient, [ItemGetData, ItemQuery, ClientSub]);\n// export const UsersPlacelineClientFactory = (): UsersPlaceline => {\n//   let innerConfig: Partial<EntityTypeConfig> = {\n//     name: 'users placeline',\n//     updateStrategy: 'live',\n//   };\n//\n//   let itemSelectors: EntityItemSelectors = {\n//     query$: store.select(fromRoot.getQueryPlacelineQuery),\n//     data$: store.select(fromRoot.getUsersUsersData),\n//     loading$: store.select(fromRoot.getLoadingUserData),\n//     id$: store.select(fromRoot.getQueryPlacelineId)\n//   };\n//\n//   let placelineSelectors: AddUsersPlacelineSelector = {\n//     segmentsState$: store.select(fromRoot.getSegmentsState),\n//     getMapData$() {\n//       return Observable.combineLatest(\n//         this.data$,\n//         this.segmentsState$,\n//         (userData: IUserData, {selectedId, resetMapId}) => {\n//           if(userData && (selectedId || resetMapId)) {\n//             const id = selectedId || resetMapId;\n//             let segments = _.filter(userData.segments, (segment: ISegment) => {\n//               return segment.id === id;\n//             });\n//             userData = {...userData, segments: segments, events: [], actions: []}\n//           }\n//           return userData\n//         }\n//       )\n//     }\n//   };\n//\n//   let dispatchers: EntityItemDispatchers = {\n//     setData(data) {\n//       store.dispatch(new fromUsersDispatcher.SetUserData(data))\n//     },\n//     setLoading(data) {\n//       store.dispatch(new fromLoadingDispatcher.SetLoadingUserData(data))\n//     },\n//     setId(id) {\n//       store.dispatch(new fromQueryDispatcher.SetPlacelineId(id))\n//     },\n//     toggleId(userId: string) {\n//       store.dispatch(new fromQueryDispatcher.TogglePlacelineId(userId))\n//     },\n//     addQuery(query) {\n//       store.dispatch(new fromQueryDispatcher.SetPlacelineQuery(query))\n//     }\n//   };\n//\n//   let placelineDispatchers: AddUsersPlacelineDispatchers = {\n//     setSegmentSelectedId(segmentId) {\n//       store.dispatch(new fromSegmentsDispatcher.SetSelectedId(segmentId))\n//     },\n//     setSegmentResetMapId(segmentId: string) {\n//       store.dispatch(new fromSegmentsDispatcher.SetResetMapId(segmentId))\n//     },\n//   };\n//\n//\n//   let api = clientApi.users;\n//   let api$ = (id, query) => api.placeline(id, query);\n//\n//   let state = {\n//     api$,\n//     selectors: {\n//       ...itemSelectors,\n//       ...placelineSelectors\n//     },\n//     dispatchers: {\n//       ...dispatchers,\n//       ...placelineDispatchers\n//     }\n//   };\n//\n//   const placeline = entityClientFactory(state, innerConfig, 'item') as UsersPlaceline;\n//\n//   placeline.init();\n//\n//   return placeline\n// };\nvar EntityListClient = /*@__PURE__*/ (function () {\n    function EntityListClient() {\n        //listGetData\n        this.updateStrategy = \"live\";\n        this.pollDuration = 10000;\n        // api$;\n        this.name = \"list\";\n        //\n        // setData(data) {\n        //\n        // };\n        //\n        // setActive(isActive: boolean = true){\n        //\n        // }\n    }\n    // init: () => void;\n    // getData$: (data) => any;\n    // dataSub: Subscription;\n    EntityListClient.prototype.firstDataEffect = function (data) {\n        this.setLoading(false);\n    };\n    EntityListClient.prototype.getDefaultQuery = function () {\n        return { page_size: 10 };\n    };\n    Object.defineProperty(EntityListClient.prototype, \"apiParams$\", {\n        get: function () {\n            return this.getApiParams$();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntityListClient.prototype, \"apiQuery$\", {\n        get: function () {\n            return this.getApiQuery$();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EntityListClient;\n}());\nvar __extends$6 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$8 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar UsersAnalytics = (function (_super) {\n    __extends$6(UsersAnalytics, _super);\n    function UsersAnalytics(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.name = \"users analytics list\";\n        _this.defaultQuery = { ordering: \"-last_heartbeat_at\" };\n        _this.api$ = function (query) {\n            return api.analytics(query);\n        };\n        _this.dateRange = dateRange;\n        _this.store = store;\n        _this.query$ = _this.store.select(getUsersListQuery);\n        _this.dateParam = dateParam;\n        _this.active$ = _this.store.select(getUsersAnalyticsIsActive);\n        _this.data$ = _this.store.select(getUsersAnalyticsPage);\n        _this.id$ = _this.store.select(getUsersListId);\n        _this.loading$ = _this.store.select(getUsersAnalyticsLoading);\n        _this.dataArray$ = _this.data$.pipe(PageResults$);\n        return _this;\n        // this.init()\n    }\n    UsersAnalytics.prototype.getDefaultQuery = function () {\n        return __assign$8({}, _super.prototype.getDefaultQuery.call(this), this.defaultQuery);\n        // return {...this.defaultQuery}\n    };\n    UsersAnalytics.prototype.firstDataEffect = function () {\n        this.setLoading(false);\n    };\n    UsersAnalytics.prototype.setLoading = function (data) {\n        this.store.dispatch(new SetUsersAnalyticsLoading(data));\n    };\n    UsersAnalytics.prototype.setData = function (data) {\n        this.store.dispatch(new SetUsersAnalyticsPage(data));\n    };\n    UsersAnalytics.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        isActive = isActive ? new Date().toISOString() : isActive;\n        this.store.dispatch(new SetListActive(isActive));\n    };\n    Object.defineProperty(UsersAnalytics.prototype, \"apiQuery$\", {\n        get: function () {\n            return this.getApiQuery$();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UsersAnalytics.prototype.addQuery = function (query) {\n        if (query === void 0) {\n            query = {};\n        }\n        this.store.dispatch(new AddListQuery(query));\n    };\n    UsersAnalytics.prototype.setQuery = function (query) {\n        if (query === void 0) {\n            query = {};\n        }\n        this.store.dispatch(new SetListQuery(query));\n    };\n    UsersAnalytics.prototype.setQueryReset = function (query) {\n        this.store.dispatch(new AddListQuery(__assign$8({}, query, { page: null })));\n    };\n    UsersAnalytics.prototype.clearQueryKey = function (key) {\n        this.store.dispatch(new ClearQueryKey(key));\n    };\n    UsersAnalytics.prototype.toggleId = function (userId) {\n        this.store.dispatch(new ToggleUsersListId(userId));\n    };\n    UsersAnalytics.prototype.setId = function (userId) {\n        this.store.dispatch(new SetUsersListId(userId));\n    };\n    UsersAnalytics.prototype.clearData = function () {\n        this.setData(null);\n        this.setActive(false);\n        this.setQuery({});\n    };\n    UsersAnalytics.prototype.destroy = function () {\n        this.clearData();\n        this.dataSub.unsubscribe();\n    };\n    return UsersAnalytics;\n}(EntityListClient));\nvar UsersAnalyticsClient = clientSubMixin(getPageDataMixin(getFirstDataMixin(listQueryMixin(UsersAnalytics))));\n// applyMixins(UsersAnalytics, [ListGetData, ListQuery, ClientSub]);\nvar __assign$9 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar EntityClient = /*@__PURE__*/ (function () {\n    function EntityClient() {\n    }\n    EntityClient.prototype.dataArrayWithSelected$ = function (id$, dataArray$, selected$) {\n        var userId$ = id$;\n        var placelinePage$ = selected$.pipe(distinctUntilChanged(), map$1(function (data) {\n            return data ? [data] : null;\n        })); //todo take query from placeline\n        var array$ = combineLatest$1(placelinePage$, userId$, dataArray$, function (placelinePage, userId, dataArray) {\n            var filteredData = filter(dataArray, function (user) {\n                return userId ? user.id == userId : true;\n            });\n            return placelinePage && userId ? placelinePage : filteredData;\n        });\n        return array$;\n    };\n    EntityClient.prototype.pageDataWithSelected$ = function (id$, pageData$, selected$) {\n        // const userId$ = id$;\n        var placelinePage$ = selected$.pipe(itemAsPage$());\n        var newPageData$ = combineLatest$1(placelinePage$, id$, pageData$, function (placelinePage, userId, pageData) {\n            if (!pageData)\n                return pageData;\n            var placelineResults = placelinePage ? placelinePage.results : null;\n            var filteredData = filter(pageData.results, function (user) {\n                return userId ? user.id == userId : true;\n            });\n            var results = placelineResults && userId ? placelineResults : filteredData;\n            var count = userId ? 0 : pageData.count;\n            return __assign$9({}, pageData, { results: results, count: count });\n        });\n        return newPageData$;\n    };\n    EntityClient.prototype.getPageFromEntity = function (item$) {\n        return item$;\n    };\n    return EntityClient;\n}());\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction createCommonjsModule(fn, module) {\n    return module = { exports: {} }, fn(module, module.exports), module.exports;\n}\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\nvar isFunction_1 = {\n    isFunction: isFunction_2\n};\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\nvar isArray = {\n    isArray: isArray_1\n};\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\nvar isObject_1 = {\n    isObject: isObject_2\n};\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\nvar errorObject = {\n    errorObject: errorObject_1\n};\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\nvar tryCatch_1 = {\n    tryCatch: tryCatch_2\n};\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$11(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\nvar UnsubscriptionError_1 = {\n    UnsubscriptionError: UnsubscriptionError_2\n};\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = /*@__PURE__*/ (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty$$1) {\n        empty$$1.closed = true;\n        return empty$$1;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\nvar Subscription_1 = {\n    Subscription: Subscription_2\n};\nvar empty$2 = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\nvar Observer = {\n    empty: empty$2\n};\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window || __global || __self;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nvar root = {\n    root: root_1\n};\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n    var Symbol = root.root.Symbol;\n    exports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n        Symbol.for('rxSubscriber') : '@@rxSubscriber';\n    /**\n     * @deprecated use rxSubscriber instead\n     */\n    exports.$$rxSubscriber = exports.rxSubscriber;\n});\nvar rxSubscriber_1 = rxSubscriber.rxSubscriber;\nvar rxSubscriber_2 = rxSubscriber.$$rxSubscriber;\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$10(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$10(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nvar Subscriber_1 = {\n    Subscriber: Subscriber_2\n};\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter$1(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar filter_2 = filter$1;\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends$9(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map$4(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar map_2 = map$4;\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends$12(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\nvar __extends$8 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$11 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar EntityAllItemsClient = (function (_super) {\n    __extends$8(EntityAllItemsClient, _super);\n    // data$: Observable<Page<any>>;\n    function EntityAllItemsClient() {\n        var _this = _super.call(this) || this;\n        _this.updateStrategy = \"once\";\n        _this.allowedQueryKeys = [\"search\", \"status\"];\n        return _this;\n    }\n    Object.defineProperty(EntityAllItemsClient.prototype, \"data$\", {\n        get: function () {\n            return this.dataEntities$.pipe(map_2(function (allData) {\n                if (!allData)\n                    return allData;\n                var results = values(allData.resultsEntity);\n                return {\n                    count: allData.count || 0,\n                    results: results,\n                    previous: allData.previous || \"\",\n                    next: allData.next || \"\"\n                };\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EntityAllItemsClient.prototype.getDefaultQuery = function () {\n        return __assign$11({}, _super.prototype.getDefaultQuery.call(this), { page_size: 100, ordering: \"-created_at\" });\n    };\n    EntityAllItemsClient.prototype.firstDataEffect = function (data) {\n        if ((data && !data.next) || !data) {\n            this.setLoading(false);\n        }\n    };\n    Object.defineProperty(EntityAllItemsClient.prototype, \"dataArray$\", {\n        get: function () {\n            var dataArray$ = this.data$.pipe(filter_2(function (data) { return !!data; }), map_2(function (data) {\n                var resutls = values(data.resultsEntity);\n                return resutls;\n            }));\n            return dataArray$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EntityAllItemsClient.prototype.getAllMarkers$ = function () {\n        var _this = this;\n        var allMarkers$ = this.dataArray$.pipe(map_2(function (markers) {\n            return reduce(markers, function (acc, marker) {\n                var isValid = _this.isValidMarker(marker);\n                if (isValid) {\n                    acc.valid.push(marker);\n                }\n                else {\n                    acc.invalid.push(marker);\n                }\n                return acc;\n            }, { valid: [], invalid: [] });\n            // return markers\n        }));\n        return allMarkers$;\n    };\n    EntityAllItemsClient.prototype.isValidMarker = function (marker) {\n        return true;\n    };\n    EntityAllItemsClient.prototype.getMarkers$ = function () {\n        return this.getAllMarkers$().pipe(pluck(\"valid\"));\n    };\n    return EntityAllItemsClient;\n}(EntityListClient));\nvar __extends$13 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction listAllClientSubMixin(Base) {\n    return (function (_super) {\n        __extends$13(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this.init();\n            return _this;\n        }\n        class_1.prototype.init = function () {\n            var _this = this;\n            if (!this.dataSub) {\n                this.dataSub = this.getApiParams$()\n                    .pipe(switchMap(function (data) {\n                    if (data && data[0]) {\n                        var loading = typeof data[0] === \"string\" ? data[0] : true;\n                        _this.setLoading(loading);\n                        return _this.getData$(data);\n                    }\n                    else {\n                        return empty$1();\n                    }\n                }))\n                    .subscribe(function (data) {\n                    _this.addData(data);\n                });\n            }\n        };\n        return class_1;\n    }(Base));\n}\nvar __extends$7 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$10 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar UsersAnalyticsListAll = (function (_super) {\n    __extends$7(UsersAnalyticsListAll, _super);\n    function UsersAnalyticsListAll(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.id$ = empty$1();\n        _this.allowedQueryKeys = [\"status\", \"show_all\", \"search\"];\n        _this.name = \"users analytics all\";\n        _this.defaultQuery = {};\n        _this.allowedQueryMap = [\n            {\n                key: \"status\",\n                filter: function (value, oldValue) { return !!value; }\n            },\n            {\n                key: \"show_all\",\n                filter: function (value, oldValue) {\n                    if (!value)\n                        _this.clearData();\n                    return true;\n                }\n            }\n        ];\n        _this.api$ = function (query) { return api.allPages(api.analytics(query)); };\n        _this.dateRange = dateRange;\n        _this.store = store;\n        _this.query$ = _this.store.select(getUsersListQuery);\n        _this.dateParam = dateParam;\n        _this.active$ = _this.store.select(getUsersAnalyticsMarkersIsActive);\n        _this.dataEntities$ = _this.store.select(getUsersAnalyticsFilteredMarker);\n        // this.id$ = this.store.select(fromRoot.getQueryUserId);\n        _this.loading$ = _this.store.select(getUsersAnalyticsAllLoading);\n        return _this;\n        // this.dataArray$ = this.data$.pipe(PageResults$);\n        // this.init()\n    }\n    UsersAnalyticsListAll.prototype.getDefaultQuery = function () {\n        return __assign$10({}, _super.prototype.getDefaultQuery.call(this), this.defaultQuery);\n        // return {...this.defaultQuery}\n    };\n    UsersAnalyticsListAll.prototype.firstDataEffect = function (data) {\n        if (!data.next)\n            this.setLoading(false);\n    };\n    UsersAnalyticsListAll.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        isActive = isActive ? new Date().toISOString() : isActive;\n        this.store.dispatch(new SetMarkersActive(isActive));\n    };\n    UsersAnalyticsListAll.prototype.addData = function (data) {\n        data = data || { results: [], next: \"no_next\", count: 0, previous: \"\" };\n        this.store.dispatch(new AddUsersAnalyticsAll(data));\n    };\n    UsersAnalyticsListAll.prototype.setData = function (data) {\n        data = data || { results: [], next: \"no_next\", count: 0, previous: \"\" };\n        this.store.dispatch(new SetUsersAnalyticsAll(data));\n    };\n    UsersAnalyticsListAll.prototype.setLoading = function (data) {\n        this.store.dispatch(new SetUsersAnalyticsAllLoading(data));\n    };\n    UsersAnalyticsListAll.prototype.setDataMap = function (mapFunc) {\n        this.store.dispatch(new SetUsersMarkersDataMap(mapFunc));\n    };\n    UsersAnalyticsListAll.prototype.isValidMarker = function (marker) {\n        return htUser(marker).isValidMarker();\n    };\n    UsersAnalyticsListAll.prototype.clearData = function () {\n        var nullData = { results: [], next: \"no_next\", count: 0, previous: \"\" };\n        this.setData(nullData);\n    };\n    UsersAnalyticsListAll.prototype.destroy = function () {\n        this.clearData();\n        this.setActive(false);\n        this.dataSub.unsubscribe();\n    };\n    return UsersAnalyticsListAll;\n}(EntityAllItemsClient));\nvar UsersAnalyticsListAllClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(UsersAnalyticsListAll))));\nvar __assign$12 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar BaseFilter = /*@__PURE__*/ (function () {\n    function BaseFilter() {\n        this.sortingQueryMap = {};\n    }\n    Object.defineProperty(BaseFilter.prototype, \"sortingQueryLabel\", {\n        get: function () {\n            return this.getLabelArrayFromMap(this.sortingQueryMap);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseFilter.prototype.getLabelArrayFromMap = function (queryMap) {\n        var keys = Object.keys(queryMap);\n        return map(keys, function (key) {\n            var label = queryMap[key] || key;\n            return {\n                value: key,\n                label: label\n            };\n        });\n    };\n    BaseFilter.prototype.getQueryDisplay = function (queryArray, key) {\n        return map(queryArray, function (queryLabel) {\n            var value = queryLabel.values ? queryLabel.values.toString() : queryLabel.value;\n            return __assign$12({}, queryLabel, { param: (_a = {}, _a[key] = value, _a) });\n            var _a;\n        });\n    };\n    BaseFilter.prototype.getQueryLabel = function (query) {\n        var _this = this;\n        var keys = Object.keys(query);\n        return reduce(keys, function (acc, key) {\n            var value = query[key] || key;\n            var label = _this.getQueryLabelFromValue(value, key);\n            var queryLabel = {\n                label: label,\n                values: [key],\n                value: key,\n                param: (_a = {}, _a[key] = value, _a)\n            };\n            return label ? acc.concat([queryLabel]) : acc;\n            var _a;\n        }, []);\n    };\n    BaseFilter.prototype.getQueryLabelFromValue = function (value, key) {\n        if (key === \"search\")\n            return value;\n        if (key === \"show_all\")\n            return \"Show All\"; //todo add this after clear on show all removed\n        var queryLabel = find(this.allQueryArray, function (queryLabel) {\n            var valueString;\n            if (queryLabel.values) {\n                valueString = queryLabel.values.toString();\n            }\n            else if (queryLabel.values) {\n                valueString = queryLabel.values;\n            }\n            else {\n                return false;\n            }\n            return valueString === value;\n        });\n        return queryLabel ? queryLabel.label : null;\n    };\n    BaseFilter.prototype.summaryCharts = function (queryLabels, data, status) {\n        if (data) {\n            var max_1;\n            var total_1 = 0;\n            var values$$1 = map(queryLabels, function (entity) {\n                var sum = reduce(entity.values, function (acc, key) {\n                    return acc + data[key];\n                }, 0);\n                var value = entity.value || 0 + sum;\n                max_1 = max_1 && value < max_1 ? max_1 : value;\n                total_1 = total_1 + value;\n                return __assign$12({}, entity, { value: value });\n            });\n            var totalUsers = total_1;\n            var hasSelected_1 = false;\n            var chart = map(values$$1, function (datum) {\n                var selected = false;\n                if (status && status == datum.values.toString()) {\n                    selected = true;\n                    hasSelected_1 = true;\n                }\n                var w = max_1 ? datum.value / max_1 : 0;\n                return __assign$12({}, datum, { w: w, selected: selected });\n            });\n            return { totalUsers: totalUsers, chart: chart, hasSelected: hasSelected_1 };\n        }\n        else {\n            return data;\n        }\n        // return data;\n    };\n    return BaseFilter;\n}());\nvar __extends$14 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar DefaultUsersFilter = (function (_super) {\n    __extends$14(DefaultUsersFilter, _super);\n    function DefaultUsersFilter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.customQueryArray = [];\n        _this.statusQueryArray = [\n            {\n                label: \"Stopped\",\n                values: [\"stopped\"],\n                color: Color.stop\n            },\n            {\n                label: \"Moving\",\n                values: [\"on_trip\"],\n                color: Color.blue\n            },\n            {\n                label: \"Logged off\",\n                values: [\"logged_off\"],\n                color: \"#8a91a0\"\n            },\n            {\n                label: \"Location disabled\",\n                values: [\"location_disabled\"],\n                color: Color.red\n            },\n            {\n                label: \"Network offline\",\n                values: [\"network_offline\"],\n                color: \"#ccc\"\n            }\n        ];\n        _this.activityQueryArray = [\n            {\n                label: \"Logged in\",\n                values: [\"stopped\", \"on_trip\", \"network_offline\"],\n                color: Color.blue\n            },\n            {\n                label: \"Logged off\",\n                values: [\"logged_off\"],\n                color: \"#a8a8a8\"\n            },\n            {\n                label: \"Location disabled\",\n                values: [\"location_disabled\"],\n                color: Color.red\n            }\n        ];\n        _this.genericQueryArray = [\n            {\n                label: \"Show all\",\n                values: [\"show_all\"]\n            }\n        ];\n        _this.showAllQueryArray = [\n            {\n                label: \"Never tracked\",\n                values: [\"never_tracked\"],\n                color: \"#575757\"\n            }\n        ];\n        _this.sortingQueryMap = {\n            num_trips: \"Trips\",\n            name: \"Name\",\n            status: \"Status\",\n            num_places: \"Places\",\n            total_distance: \"Distance\",\n            total_duration: \"Duration\",\n            stop_duration: \"Stop duration\",\n            location_disabled_duration: \"Location disabled\",\n            network_offline_duration: \"Network offline\",\n            num_actions: \"Actions\",\n            last_heartbeat_at: \"Last updated\"\n        };\n        _this.mapQueries = [];\n        _this.statusOverviewQueries = [\"search\", \"show_all\"];\n        return _this;\n    }\n    Object.defineProperty(DefaultUsersFilter.prototype, \"allQueryArray\", {\n        get: function () {\n            return this.statusQueryArray.concat(this.genericQueryArray, this.showAllQueryArray, this.customQueryArray);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultUsersFilter.prototype.getStatusQueryArray = function (showAll) {\n        if (showAll === void 0) {\n            showAll = false;\n        }\n        return showAll\n            ? this.statusQueryArray.concat(this.showAllQueryArray) : this.statusQueryArray;\n    };\n    return DefaultUsersFilter;\n}(BaseFilter));\nvar __extends$15 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar UsersSummary = (function (_super) {\n    __extends$15(UsersSummary, _super);\n    function UsersSummary(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.name = \"users summary\";\n        _this.defaultQuery = { page_size: null };\n        _this.updateStrategy = \"live\";\n        _this.allowedQueryKeys = [\"show_all\", \"search\"];\n        _this.allowedQueryMap = [\n            {\n                key: \"show_all\",\n            },\n            {\n                key: \"search\"\n            }\n        ];\n        _this.api$ = function (query) { return api.summary(query); };\n        _this.dateRange = dateRange;\n        _this.store = store;\n        _this.dateParam = dateParam;\n        _this.query$ = _this.store.select(getUsersListQuery);\n        _this.active$ = _this.store.select(getUsersSummaryActive);\n        _this.data$ = _this.store.select(getUsersSummary);\n        _this.loading$ = _this.store.select(getUsersSummaryLoading);\n        return _this;\n    }\n    UsersSummary.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        isActive = isActive ? new Date().toISOString() : isActive;\n        this.store.dispatch(new SetSummaryActive(isActive));\n    };\n    UsersSummary.prototype.setData = function (usersSummary) {\n        this.store.dispatch(new SetUsersSummary(usersSummary));\n    };\n    UsersSummary.prototype.setLoading = function (data) {\n        this.store.dispatch(new SetSummaryLoading(data));\n    };\n    UsersSummary.prototype.setQuery = function (query) { };\n    UsersSummary.prototype.clearData = function () {\n        this.setData(null);\n    };\n    UsersSummary.prototype.destroy = function () {\n        this.clearData();\n        this.setActive(false);\n        this.dataSub.unsubscribe();\n    };\n    return UsersSummary;\n}(EntityListClient));\nvar UsersSummaryClient = clientSubMixin(getQueryDataMixin(getFirstDataMixin(listQueryMixin(UsersSummary))));\nvar __extends$16 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar Dispatcher = (function (_super) {\n    __extends$16(Dispatcher, _super);\n    function Dispatcher() {\n        return _super.call(this, { type: \"INIT\" }) || this;\n    }\n    Dispatcher.prototype.next = function (action) {\n        if (typeof action === \"undefined\") {\n            throw new TypeError(\"Actions must be objects\");\n        }\n        else if (typeof action.type === \"undefined\") {\n            throw new TypeError(\"Actions must have a type property\");\n        }\n        _super.prototype.next.call(this, action);\n    };\n    return Dispatcher;\n}(BehaviorSubject$1));\nvar __extends$17 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$13 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar ReducerObservable = (function (_super) {\n    __extends$17(ReducerObservable, _super);\n    function ReducerObservable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ReducerObservable;\n}(Observable$1));\nvar ReducerManagerDispatcher = (function (_super) {\n    __extends$17(ReducerManagerDispatcher, _super);\n    function ReducerManagerDispatcher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ReducerManagerDispatcher;\n}(Dispatcher));\nvar UPDATE = \"@ngrx/store/update-reducers\";\nvar ReducerManager = (function (_super) {\n    __extends$17(ReducerManager, _super);\n    function ReducerManager(dispatcher, initialState, reducers, reducerFactory) {\n        var _this = _super.call(this, reducerFactory(reducers, initialState)) || this;\n        _this.dispatcher = dispatcher;\n        _this.initialState = initialState;\n        _this.reducers = reducers;\n        _this.reducerFactory = reducerFactory;\n        return _this;\n    }\n    ReducerManager.prototype.addFeature = function (_a) {\n        var reducers = _a.reducers, reducerFactory = _a.reducerFactory, metaReducers = _a.metaReducers, initialState = _a.initialState, key = _a.key;\n        var reducer = typeof reducers === \"function\"\n            ? function (state, action) { return reducers(state || initialState, action); }\n            : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n        this.addReducer(key, reducer);\n    };\n    ReducerManager.prototype.removeFeature = function (_a) {\n        var key = _a.key;\n        this.removeReducer(key);\n    };\n    ReducerManager.prototype.addReducer = function (key, reducer) {\n        this.reducers = __assign$13({}, this.reducers, (_a = {}, _a[key] = reducer, _a));\n        this.updateReducers();\n        var _a;\n    };\n    ReducerManager.prototype.removeReducer = function (key) {\n        this.reducers = omit(this.reducers, key);\n        this.updateReducers();\n    };\n    ReducerManager.prototype.updateReducers = function () {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({ type: UPDATE });\n    };\n    ReducerManager.prototype.ngOnDestroy = function () {\n        this.complete();\n    };\n    return ReducerManager;\n}(BehaviorSubject$1));\nvar __extends$18 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ScannedActionsSubject = (function (_super) {\n    __extends$18(ScannedActionsSubject, _super);\n    function ScannedActionsSubject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ScannedActionsSubject;\n}(Subject$1));\nvar __extends$22 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends$22(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nvar Action_2 = Action;\nvar Action_1 = {\n    Action: Action_2\n};\nvar __extends$21 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends$21(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nvar AsyncAction_2 = AsyncAction;\nvar AsyncAction_1 = {\n    AsyncAction: AsyncAction_2\n};\nvar __extends$20 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends$20(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nvar QueueAction_2 = QueueAction;\nvar QueueAction_1 = {\n    QueueAction: QueueAction_2\n};\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nvar Scheduler_2 = Scheduler;\nvar Scheduler_1 = {\n    Scheduler: Scheduler_2\n};\nvar __extends$24 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler = (function (_super) {\n    __extends$24(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nvar AsyncScheduler_2 = AsyncScheduler;\nvar AsyncScheduler_1 = {\n    AsyncScheduler: AsyncScheduler_2\n};\nvar __extends$23 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar QueueScheduler = (function (_super) {\n    __extends$23(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nvar QueueScheduler_2 = QueueScheduler;\nvar QueueScheduler_1 = {\n    QueueScheduler: QueueScheduler_2\n};\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nvar queue_1 = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\nvar __extends$19 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar StateObservable = (function (_super) {\n    __extends$19(StateObservable, _super);\n    function StateObservable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StateObservable;\n}(Observable$1));\nvar State = (function (_super) {\n    __extends$19(State, _super);\n    function State(actions$, reducer$, scannedActions, initialState) {\n        var _this = _super.call(this, initialState) || this;\n        var actionsOnQueue$ = observeOn$1.call(actions$, queue_1);\n        var withLatestReducer$ = withLatestFrom$1.call(actionsOnQueue$, reducer$);\n        var stateAndAction$ = scan$1.call(withLatestReducer$, reduceState, { state: initialState });\n        _this.stateSubscription = stateAndAction$.subscribe(function (_a) {\n            var state = _a.state, action = _a.action;\n            _this.next(state);\n            scannedActions.next(action);\n        });\n        return _this;\n    }\n    State.prototype.ngOnDestroy = function () {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    };\n    State.INIT = \"INIT\";\n    return State;\n}(BehaviorSubject$1));\nfunction reduceState(stateActionPair, _a) {\n    if (stateActionPair === void 0) {\n        stateActionPair = { state: undefined };\n    }\n    var action = _a[0], reducer = _a[1];\n    var state = stateActionPair.state;\n    return { state: reducer(state, action), action: action };\n}\nvar __extends$25 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar Store = (function (_super) {\n    __extends$25(Store, _super);\n    function Store(state$, dispatcher, reducerManager) {\n        var _this = _super.call(this) || this;\n        _this.dispatcher = dispatcher;\n        _this.reducerManager = reducerManager;\n        _this.source = state$;\n        return _this;\n    }\n    Store.prototype.select = function (pathOrMapFn) {\n        var paths = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            paths[_i - 1] = arguments[_i];\n        }\n        var mapped$;\n        if (typeof pathOrMapFn === \"string\") {\n            mapped$ = pluck$2.call.apply(pluck$2, [this, pathOrMapFn].concat(paths));\n        }\n        else if (typeof pathOrMapFn === \"function\") {\n            mapped$ = map$3.call(this, pathOrMapFn);\n        }\n        else {\n            throw new TypeError(\"Unexpected type '\" + typeof pathOrMapFn + \"' in select operator,\" +\n                \" expected 'string' or 'function'\");\n        }\n        return distinctUntilChanged$2.call(mapped$);\n    };\n    Store.prototype.lift = function (operator) {\n        var store = new Store(this, this.dispatcher, this.reducerManager);\n        store.operator = operator;\n        return store;\n    };\n    Store.prototype.dispatch = function (action) {\n        this.dispatcher.next(action);\n    };\n    Store.prototype.next = function (action) {\n        this.dispatcher.next(action);\n    };\n    Store.prototype.error = function (err) {\n        this.dispatcher.error(err);\n    };\n    Store.prototype.complete = function () {\n        this.dispatcher.complete();\n    };\n    Store.prototype.addReducer = function (key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    };\n    Store.prototype.removeReducer = function (key) {\n        this.reducerManager.removeReducer(key);\n    };\n    return Store;\n}(Observable$1));\nvar Effects = /*@__PURE__*/ (function () {\n    function Effects(dispatcher) {\n        // dispatcher.pipe(\n        //   flatMap((action) => GetEffect(action)),\n        //   filter(data => !!data)\n        // ).subscribe((action) => {\n        //   dispatcher.next(action)\n        // })\n    }\n    return Effects;\n}());\nvar storeFactory = function (reducers, config) {\n    if (config === void 0) {\n        config = {};\n    }\n    var INITIAL_STATE = config.initialState;\n    var metaReducers = config.metaReducers;\n    var _REDUCER_FACTORY = config.reducerFactory\n        ? config.reducerFactory\n        : combineReducers;\n    var REDUCER_FACTORY = createReducerFactory(_REDUCER_FACTORY, metaReducers);\n    var dispatcher = new Dispatcher(); //actionSubject\n    var EFFECTS_PROVIDERS = new Effects(dispatcher);\n    var reducerManager = new ReducerManager(dispatcher, INITIAL_STATE, reducers, REDUCER_FACTORY);\n    var SCANNED_ACTIONS_SUBJECT_PROVIDERS = new ScannedActionsSubject();\n    var STATE_PROVIDERS = new State(dispatcher, reducerManager, SCANNED_ACTIONS_SUBJECT_PROVIDERS, INITIAL_STATE);\n    var STORE_PROVIDERS = new Store(STATE_PROVIDERS, dispatcher, reducerManager);\n    return {\n        INITIAL_STATE: INITIAL_STATE,\n        metaReducers: metaReducers,\n        _REDUCER_FACTORY: _REDUCER_FACTORY,\n        dispatcher: dispatcher,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS: SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_FACTORY: REDUCER_FACTORY,\n        EFFECTS_PROVIDERS: EFFECTS_PROVIDERS,\n        reducerManager: reducerManager,\n        STATE_PROVIDERS: STATE_PROVIDERS,\n        STORE_PROVIDERS: STORE_PROVIDERS\n    };\n};\n// const storeProvider: StoreProvider = storeFactory(fromRoot.reducers);\n// Object.freeze(storeProvider);\n// export const store = storeProvider.STORE_PROVIDERS;\nvar apiStoreFactory = function () {\n    var storeProvider = storeFactory(reducers);\n    return storeProvider.STORE_PROVIDERS;\n};\nvar ApiStoreService = (function () {\n    var instance;\n    return {\n        getInstance: function () {\n            if (!instance) {\n                instance = apiStoreFactory();\n            }\n            return instance;\n        },\n        getNewInstance: function () {\n            return apiStoreFactory();\n        }\n    };\n})();\nvar __extends$26 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan$2(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar scan_2 = scan$2;\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends$26(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\nvar __assign$14 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar defaultDateRange = __assign$14({}, DateRangeMap.today);\nvar DateRange = /*@__PURE__*/ (function () {\n    function DateRange(initialDate) {\n        if (initialDate === void 0) {\n            initialDate = {};\n        }\n        this.dataBehaviour$ = new BehaviorSubject$1(__assign$14({}, defaultDateRange, initialDate));\n        this.data$ = this.dataBehaviour$.asObservable();\n    }\n    DateRange.prototype.setDateRange = function (dateRange) {\n        if (dateRange === void 0) {\n            dateRange = null;\n        }\n        this.dataBehaviour$.next(dateRange);\n    };\n    DateRange.prototype.getDateRange = function () {\n        return this.dataBehaviour$.getValue();\n    };\n    Object.defineProperty(DateRange.prototype, \"display$\", {\n        get: function () {\n            return this.data$.pipe(map$1(function (range) {\n                return dateRangeDisplay(range);\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DateRange;\n}());\nvar dateRangeFactory = function (initialDate) {\n    if (initialDate === void 0) {\n        initialDate = {};\n    }\n    return new DateRange(initialDate);\n};\nvar dateRangeService = (function () {\n    var instance;\n    return {\n        getInstance: function (initialDate) {\n            if (!instance) {\n                instance = dateRangeFactory(initialDate);\n            }\n            return instance;\n        }\n    };\n})();\nvar UsersHeatmap = /*@__PURE__*/ (function () {\n    function UsersHeatmap(_a) {\n        var dateRange = _a.dateRange, dateParam = _a.dateParam, api = _a.api;\n        this.query$ = of$1({});\n        this.loadingState$ = new BehaviorSubject$1(false);\n        this.loading$ = this.loadingState$.asObservable();\n        this.dataState$ = new BehaviorSubject$1(null);\n        this.data$ = this.dataState$.asObservable();\n        this.active$ = new BehaviorSubject$1(false);\n        this.dataArray$ = this.data$.pipe(PageResults$);\n        this.api$ = function (query) { return api.allPages(api.heatmap(query)); };\n        this.dateRange = dateRange;\n        this.dateParam = dateParam;\n    }\n    UsersHeatmap.prototype.setActive = function (active) {\n        if (active === void 0) {\n            active = true;\n        }\n        this.active$.next(active);\n    };\n    UsersHeatmap.prototype.getDefaultQuery = function () {\n        return { page_size: 300 };\n    };\n    UsersHeatmap.prototype.firstDataEffect = function (data) {\n        if ((data && !data.next) || !data) {\n            this.setLoading(false);\n        }\n    };\n    UsersHeatmap.prototype.setLoading = function (isLoading) {\n        this.loadingState$.next(isLoading);\n    };\n    UsersHeatmap.prototype.setData = function (data) {\n        this.dataState$.next(data);\n    };\n    UsersHeatmap.prototype.addData = function (data) {\n        this.dataState$.next(data);\n    };\n    return UsersHeatmap;\n}());\nvar UsersHeatmapClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(UsersHeatmap))));\nvar HtToken = /*@__PURE__*/ (function () {\n    function HtToken(token) {\n        if (token === void 0) {\n            token = \"\";\n        }\n        this.token = token;\n    }\n    Object.defineProperty(HtToken.prototype, \"token\", {\n        get: function () {\n            return this._token;\n        },\n        set: function (token) {\n            this._token = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"tempToken\", {\n        get: function () {\n            return this._tempToken;\n        },\n        set: function (token) {\n            this._groupToken = \"\";\n            this._tempToken = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"groupToken\", {\n        get: function () {\n            return this._groupToken;\n        },\n        set: function (token) {\n            this._groupToken = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"currentToken\", {\n        get: function () {\n            return this.groupToken || this.tempToken || this.token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HtToken;\n}());\nvar __assign$15 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtRequest = /*@__PURE__*/ (function () {\n    function HtRequest(token) {\n        this.baseUrl = \"https://api.hypertrack.com/api/v1/\";\n        this.isAdmin = false;\n        this.defaultHeader = { \"X-Hypertrack-Client\": 'js-sdk' };\n        this.tokenServie = new HtToken(token);\n    }\n    HtRequest.prototype.setClientType = function (clientType) {\n        this.defaultHeader = __assign$15({}, this.defaultHeader, { \"X-Hypertrack-Client\": clientType });\n    };\n    HtRequest.prototype.setBaseUrl = function (baseUrl) {\n        this.baseUrl = baseUrl;\n    };\n    Object.defineProperty(HtRequest.prototype, \"token\", {\n        get: function () {\n            return this.tokenServie.token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtRequest.prototype, \"currentToken\", {\n        get: function () {\n            var token = this.tokenServie.currentToken;\n            return token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HtRequest.prototype.headerObj = function (token) {\n        return __assign$15({ Authorization: \"token \" + (token || this.currentToken) }, this.defaultHeader);\n    };\n    HtRequest.prototype.adminHeaderObj = function () {\n        return __assign$15({ Authorization: \"token \" + this.token }, this.defaultHeader);\n    };\n    HtRequest.prototype.headerStrings = function () {\n        return [\"Authorization\", \"token \" + this.currentToken];\n    };\n    HtRequest.prototype.url = function (url, query, isPure) {\n        if (query === void 0) {\n            query = {};\n        }\n        if (isPure === void 0) {\n            isPure = false;\n        }\n        if (isPure)\n            return url;\n        var string = HtQuerySerialize(query);\n        return this.baseUrl + url + \"?\" + string;\n    };\n    HtRequest.prototype.getObservable = function (url, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var p = this.getFetch(url, options);\n        return fromPromise$1(p);\n    };\n    HtRequest.prototype.postObservable = function (url, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var p = this.postFetch(url, body, options);\n        return fromPromise$1(p);\n    };\n    HtRequest.prototype.api$ = function (url, query, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        url = this.url(url, query, options.pureUrl);\n        var headers = options.isAdmin ? this.adminHeaderObj() : this.headerObj(options.token);\n        return this.getObservable(url, { headers: headers });\n    };\n    HtRequest.prototype.postApi$ = function (url, body, options) {\n        url = this.url(url);\n        var headers = options.isAdmin ? this.adminHeaderObj() : this.headerObj(options.token);\n        return this.postObservable(url, body, { headers: headers });\n    };\n    HtRequest.prototype.getFetch = function (url, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return fetch(url, options).then(function (res) {\n            return res.json();\n        });\n    };\n    HtRequest.prototype.postFetch = function (url, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return fetch(url, __assign$15({ method: \"POST\", body: JSON.stringify(body) }, options)).then(function (res) { return res.json(); });\n    };\n    return HtRequest;\n}());\nvar htRequestService = (function () {\n    var instance;\n    return {\n        getInstance: function (token) {\n            if (!instance) {\n                instance = new HtRequest(token);\n            }\n            return instance;\n        },\n        setInstance: function (newintance) {\n            if (instance) {\n                var tokenService = instance.tokenServie;\n                newintance.tokenServie = tokenService;\n            }\n            instance = newintance;\n        }\n    };\n})();\nvar __assign$1$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtBaseApi = /*@__PURE__*/ (function () {\n    function HtBaseApi(request, base) {\n        this.request = request;\n        this.base = base;\n    }\n    HtBaseApi.prototype.get = function (id, query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\" + id + \"/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.index = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.summary = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/summary/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.heatmap = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/heatmap/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.api$ = function (path, query, options) {\n        if (query === void 0) {\n            query = {};\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        return this.request.api$(path, query, options);\n    };\n    HtBaseApi.prototype.postApi$ = function (path, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.request.postApi$(path, body, options);\n    };\n    // getReqFromTail<T>(tail, query = {}, options = {}): Observable<T> {\n    //   return this.request.api$(this.base + tail, query, options)\n    // }\n    //\n    // postReqFromTail<T>(tail, body, options?): Observable<T> {\n    //   return this.request.postApi$(this.base + tail, body, options)\n    // }\n    HtBaseApi.prototype.placeline = function (id, query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var tail = this.base + (\"/\" + id + \"/placeline/\");\n        return this.api$(tail, query, { token: token });\n    };\n    HtBaseApi.prototype.allPages = function (api$, options) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        return api$.pipe(expand(function (data) {\n            return data[\"next\"]\n                ? _this.request.api$(data[\"next\"], {}, __assign$1$1({}, options, { pureUrl: true })).pipe(map$1(function (newData) {\n                    return __assign$1$1({}, newData, { results: data.results.concat(newData.results) });\n                }))\n                : empty$1();\n        }));\n    };\n    HtBaseApi.prototype.analytics = function (query) {\n        return empty$1();\n    };\n    return HtBaseApi;\n}());\nvar __extends$27 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtUsersApi = (function (_super) {\n    __extends$27(HtUsersApi, _super);\n    function HtUsersApi(request) {\n        var _this = _super.call(this, request, \"users\") || this;\n        _this.name = \"user\";\n        return _this;\n    }\n    HtUsersApi.prototype.analytics = function (query, token) {\n        var path = this.base + \"/analytics/\";\n        return this.api$(path, query, { token: token });\n    };\n    return HtUsersApi;\n}(HtBaseApi));\nvar __extends$1$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtActionsApi = (function (_super) {\n    __extends$1$1(HtActionsApi, _super);\n    function HtActionsApi(request) {\n        var _this = _super.call(this, request, \"actions\") || this;\n        _this.name = \"Action\";\n        return _this;\n    }\n    HtActionsApi.prototype.graph = function (query, token) {\n        var path = this.base + \"/graph/\";\n        return this.api$(path, query, { token: token }).pipe(map$1(function (obj) {\n            return Object.keys(obj).reduce(function (dataArray, key) {\n                dataArray.push(obj[key]);\n                return dataArray;\n            }, []).sort(function (a, b) {\n                return new Date(a.created_date).getTime() - new Date(b.created_date).getTime();\n            });\n        }));\n    };\n    return HtActionsApi;\n}(HtBaseApi));\nvar __extends$2$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtGroupsApi = (function (_super) {\n    __extends$2$1(HtGroupsApi, _super);\n    function HtGroupsApi(request) {\n        var _this = _super.call(this, request, \"groups\") || this;\n        _this.name = \"group\";\n        return _this;\n    }\n    HtGroupsApi.prototype.children = function (groupId, token) {\n        var query = { parent_group_id: groupId };\n        return this.getAll(query, token);\n    };\n    HtGroupsApi.prototype.root = function (token) {\n        var query = { has_parent: false };\n        return this.getAll(query, token);\n    };\n    HtGroupsApi.prototype.getAll = function (query, token) {\n        return this.allPages(this.index(query, token));\n    };\n    return HtGroupsApi;\n}(HtBaseApi));\nvar __extends$3$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtAccountUserApi = (function (_super) {\n    __extends$3$1(HtAccountUserApi, _super);\n    function HtAccountUserApi(request) {\n        var _this = _super.call(this, request, \"account_users\") || this;\n        _this.name = \"user\";\n        return _this;\n    }\n    HtAccountUserApi.prototype.login = function (user) {\n        var tail = \"login/\";\n        return this.request.postObservable(this.request.baseUrl + tail, user);\n    };\n    HtAccountUserApi.prototype.get = function (id, token) {\n        var path = this.base + \"/\" + id + \"/\";\n        return this.api$(path, {}, { isAdmin: true });\n    };\n    HtAccountUserApi.prototype.memberships = function (id, query, options) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\" + id + \"/memberships/\";\n        return this.api$(path, query, options);\n    };\n    HtAccountUserApi.prototype.membershipsAll = function (id, query, token) {\n        var options = { isAdmin: true, token: token };\n        return this.allPages(this.memberships(id, query, options), options);\n    };\n    return HtAccountUserApi;\n}(HtBaseApi));\nvar HtApi = /*@__PURE__*/ (function () {\n    function HtApi(token) {\n        this.request = htRequestService.getInstance();\n        if (token)\n            this.request.tokenServie.token = token;\n        this.users = new HtUsersApi(this.request);\n        this.actions = new HtActionsApi(this.request);\n        this.groups = new HtGroupsApi(this.request);\n        this.accountUser = new HtAccountUserApi(this.request);\n    }\n    HtApi.prototype.setToken = function (token) {\n        this.request.tokenServie.token = token;\n    };\n    return HtApi;\n}());\nvar __extends$4$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$2$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtTrackingApi = (function (_super) {\n    __extends$4$1(HtTrackingApi, _super);\n    function HtTrackingApi(request) {\n        var _this = _super.call(this, request, \"actions\") || this;\n        _this.name = \"Tracking\";\n        _this.trackType = {\n            shortCode: \"short_code\",\n            lookupId: 'lookup_id',\n            collectionId: 'collection_id',\n            actionId: 'id'\n        };\n        return _this;\n    }\n    HtTrackingApi.prototype.track = function (id, idType, token) {\n        if (idType === void 0) {\n            idType = 'shortCode';\n        }\n        var trackKey = this.trackType[idType];\n        if (trackKey) {\n            var query = (_a = {}, _a[trackKey] = id, _a);\n            var path = this.base + \"/track/\";\n            return this.api$(path, query, { token: token }).pipe(map$1(function (data) {\n                var actions = [];\n                data.results.forEach(function (result) {\n                    var actionsWithAccount = result.actions.map(function (action) {\n                        return __assign$2$1({}, action, { account: result.account });\n                    });\n                    actions.push.apply(actions, actionsWithAccount);\n                });\n                return actions;\n            }));\n        }\n        else {\n            console.error('Invalid Tracking type ' + idType);\n        }\n        var _a;\n    };\n    return HtTrackingApi;\n}(HtBaseApi));\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtUsersClient = /*@__PURE__*/ (function (_super) {\n    __extends(HtUsersClient, _super);\n    function HtUsersClient(options) {\n        var _this = _super.call(this) || this;\n        _this.options = options;\n        _this.filterClass = new DefaultUsersFilter();\n        _this.showAll = false;\n        var api = new HtApi().users;\n        _this.key$ = ApiStoreService.getInstance().select(getAccountCurrentKey);\n        _this.api = api;\n        var store = ApiStoreService.getNewInstance();\n        store.addReducer(\"users\", usersReducer);\n        store.addReducer(\"segments\", segmentsReducer);\n        _this.store = store;\n        var dateRange = _this.options.dateRange;\n        var dateParam = 'recorded_at';\n        _this.analytics = new UsersAnalyticsClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });\n        _this.placeline = new UsersPlacelineClient({ store: store, api: api });\n        _this.analyticsAll = new UsersAnalyticsListAllClient({\n            dateRange: dateRange,\n            store: store,\n            dateParam: dateParam,\n            api: api\n        });\n        _this.summary = new UsersSummaryClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });\n        _this.list = _this.analytics;\n        _this.listAll = _this.analyticsAll;\n        _this.heatmap = new UsersHeatmapClient({ dateRange: dateRange, dateParam: dateParam, api: api });\n        _this.initEffects();\n        return _this;\n    }\n    HtUsersClient.prototype.getLoading$ = function () {\n        return CombineLoadings$(this.list.loading$, this.summary.loading$);\n    };\n    Object.defineProperty(HtUsersClient.prototype, \"statusQueryArray\", {\n        set: function (data) {\n            this._statusQueryArray = data;\n            this.filterClass.customQueryArray = data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HtUsersClient.prototype.setShowAll = function (showAll) {\n        if (showAll === void 0) {\n            showAll = true;\n        }\n        this.showAll = showAll;\n        this.list.setQuery({ show_all: true });\n    };\n    HtUsersClient.prototype.getInitialDateRange = function (range) {\n        if (range === void 0) {\n            range = {};\n        }\n        var initialRange = DateRangeMap.today;\n        return __assign({}, range, initialRange);\n    };\n    HtUsersClient.prototype.listStatusOverview$ = function () {\n        return this.summary.data$.pipe(map$1(function (summary) {\n            if (summary) {\n                return summary.status_overview;\n            }\n            return null;\n        }));\n    };\n    HtUsersClient.prototype.listStatusChart$ = function (queryLabels) {\n        var _this = this;\n        // return status_overview.\n        if (queryLabels)\n            (_a = this.filterClass.customQueryArray).push.apply(_a, queryLabels);\n        return combineLatest$1(this.list.query$, this.listStatusOverview$()).pipe(map$1(function (_a) {\n            var query = _a[0], overview = _a[1];\n            if (overview) {\n                var total_1 = 0;\n                var max_1 = 0;\n                var summaryEntity = queryLabels || _this.filterClass.getStatusQueryArray(_this.showAll);\n                var status_1 = query ? query[\"status\"] : null;\n                // let summaryEntity = this.filterClass.activityQueryArray;\n                var values$$1 = map(summaryEntity, function (entity) {\n                    var sum = reduce(entity.values, function (acc, key) {\n                        return acc + overview[key];\n                    }, 0);\n                    var value = entity.value || 0 + sum;\n                    max_1 = max_1 && value < max_1 ? max_1 : value;\n                    total_1 = total_1 + value;\n                    return __assign({}, entity, { value: value });\n                });\n                var totalUsers = total_1;\n                var hasSelected_1 = false;\n                var chart = map(values$$1, function (datum) {\n                    var selected = false;\n                    if (status_1 && status_1 == datum.values.toString()) {\n                        selected = true;\n                        hasSelected_1 = true;\n                    }\n                    var w = max_1 ? datum.value / max_1 : 0;\n                    return __assign({}, datum, { w: w, selected: selected });\n                });\n                return { totalUsers: totalUsers, chart: chart, hasSelected: hasSelected_1 };\n            }\n            return null;\n        }));\n        var _a;\n    };\n    Object.defineProperty(HtUsersClient.prototype, \"queryLabel$\", {\n        get: function () {\n            var _this = this;\n            var query$ = this.list.getBaseQuery$().pipe(filter_2(function (data) { return !!data; }));\n            return query$.pipe(map$1(function (query) {\n                // console.log(\"cl\", query);\n                var queryLabel = _this.filterClass.getQueryLabel(query);\n                return queryLabel;\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtUsersClient.prototype, \"ordering$\", {\n        get: function () {\n            var _this = this;\n            return this.list.getApiQuery$().pipe(filter_2(function (data) { return !!data; }), map$1(function (query) {\n                var ordering = query ? query[\"ordering\"] : null;\n                var orderingMod = _this.getOrderingMod(ordering);\n                return {\n                    string: _this.filterClass.sortingQueryMap[orderingMod.string],\n                    sign: orderingMod.sign\n                };\n            }), distinctUntilChanged());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HtUsersClient.prototype.getOrderingMod = function (ordering) {\n        var string = ordering;\n        var sign = 1;\n        if (ordering.includes(\"-\")) {\n            string = ordering.substring(1);\n            sign = 0;\n        }\n        return {\n            string: string,\n            sign: sign\n        };\n    };\n    HtUsersClient.prototype.getSegmentsStates = function () {\n        return this.store.select(getSegmentsState);\n    };\n    HtUsersClient.prototype.getCurrentPlaceline$ = function () {\n        return combineLatest$1(this.placeline.data$, this.getSegmentsStates(), function (userData, _a) {\n            var selectedId = _a.selectedId, resetMapId = _a.resetMapId;\n            if (userData && (selectedId || resetMapId)) {\n                var id_1 = selectedId || resetMapId;\n                var segments = filter(userData.segments, function (segment) {\n                    return segment.id === id_1;\n                });\n                userData = __assign({}, userData, { segments: segments, events: [], actions: [] });\n            }\n            return userData;\n        });\n    };\n    HtUsersClient.prototype.initEffects = function () {\n        var _this = this;\n        this.list.query$.pipe(filter_2(function (data) { return !!data; })).subscribe(function (query) {\n            _this.setListAllFilter(query);\n        });\n        // this.listAll.active$.pipe(filter(data => !!data)).flatMap(() => {\n        //   return this.listStatusChart$()\n        // })\n        //   .takeUntil(this.listAll.active$.filter(data => !data).skip(1))\n        //   .withLatestFrom(this.list.query$)\n        //   .switchMap(([statusOverview, query]) => {\n        //     // return Observable.of({})\n        //     console.log(statusOverview, query);\n        //     return this.getListAllUpdateQuery$(statusOverview, query)\n        //   })//todo finish this\n        this.placeline.id$\n            .pipe(scan_2(function (acc, currentId) {\n            var isSame = acc.oldId === currentId;\n            var oldId = currentId;\n            return { isSame: isSame, oldId: oldId };\n        }, { isSame: false, oldId: null }), pluck(\"isSame\"), filter_2(function (data) { return !data; }))\n            .subscribe(function (isDiff) {\n            _this.placeline.setData(null);\n        });\n    };\n    HtUsersClient.prototype.setListAllFilter = function (query) {\n        var statusString = query[\"status\"];\n        var search = query[\"search\"];\n        var ids = query[\"id\"];\n        var userMarkerFilters = [];\n        if (statusString) {\n            var statusArray = statusString.split(\",\");\n            // this.updateUserMap(query);\n            var statusFilter_1 = [];\n            statusArray.forEach(function (status) {\n                statusFilter_1.push(htUser().getMarkerFilter(status));\n            });\n            var allStatusFilter = function (user) {\n                return reduce(statusFilter_1, function (acc, filter$$1) {\n                    return acc || filter$$1(user);\n                }, false);\n            };\n            userMarkerFilters.push(allStatusFilter);\n        }\n        if (search) {\n            userMarkerFilters.push(function (user) {\n                return htUser().getMarkerSearched(search)(user); // || userMarkerFilter(user)\n            });\n            // this.updateUserMap(query);\n        }\n        if (ids) {\n            var userIds_1 = ids.split(\",\");\n            userMarkerFilters.push(function (user) {\n                return contains(userIds_1, user.id);\n            });\n        }\n        var userMarkerFilter = function (user) {\n            return reduce(userMarkerFilters, function (acc, filter$$1) {\n                return acc && filter$$1(user);\n            }, true);\n        };\n        var dataMap = function (allResults) {\n            var results = filter(allResults.resultsEntity, userMarkerFilter);\n            var resultsEntity = indexBy(results, \"id\");\n            return __assign({}, allResults, { resultsEntity: resultsEntity });\n        };\n        this.listAll.setDataMap(dataMap);\n    };\n    HtUsersClient.prototype.getListAllUpdateQuery$ = function (overview, query) {\n        return this.listAll.data$.pipe(flatMap(function (allData) {\n            var results = values(allData.resultsEntity);\n            var currentTotalUsers = results.length;\n            var totalUsers = overview.totalUsers, chart = overview.chart;\n            var status = query[\"status\"];\n            if (!!status) {\n                var value = find(chart, function (datum) {\n                    return datum.keys.toString(\",\") == status;\n                });\n                return value && value !== currentTotalUsers ? of$1(true) : empty$1();\n            }\n            else if (currentTotalUsers < totalUsers) {\n                return of$1(true);\n            }\n            return empty$1();\n        }));\n    };\n    return HtUsersClient;\n}(EntityClient));\nvar usersClientFactory = function (options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var dateRange = options.dateRange || dateRangeService.getInstance();\n    return new HtUsersClient({ dateRange: dateRange });\n};\nvar __extends$28 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ActionsFilter = (function (_super) {\n    __extends$28(ActionsFilter, _super);\n    function ActionsFilter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.customQueryArray = [];\n        _this.statusQueryArray = [\n            {\n                label: \"Not yet started\",\n                values: [\"created\"],\n                color: \"#8a91a0\"\n            },\n            {\n                label: \"Assigned\",\n                values: [\"assigned\", \"started\"],\n                color: Color.blue\n            },\n            {\n                label: \"Completed\",\n                values: [\"completed\"],\n                color: Color.stop\n            },\n            {\n                label: \"Suspended\",\n                values: [\"suspended\"],\n                color: Color.red\n            }\n        ];\n        _this.sortingQueryMap = {\n            assigned_at: \"Assigned\",\n            completed_at: \"Completed\",\n            distance: \"Distance\",\n            duration: \"Duration\",\n            type: \"Type\",\n            user__name: \"User name\",\n            status: \"Status\"\n        };\n        _this.genericQueryArray = [];\n        return _this;\n    }\n    Object.defineProperty(ActionsFilter.prototype, \"allQueryArray\", {\n        get: function () {\n            return this.statusQueryArray.concat(this.genericQueryArray, this.customQueryArray);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ActionsFilter;\n}(BaseFilter));\nvar __assign$16 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar GroupsList = /*@__PURE__*/ (function () {\n    function GroupsList(_a) {\n        var store = _a.store, api = _a.api;\n        this.name = \"group\";\n        this.defaultQuery = { ordering: \"-created_at\" };\n        this.query$ = of$1({});\n        this.updateStrategy = \"once\";\n        this.pollDuration = 10000;\n        this.loading$ = of$1(false);\n        this.api$ = function (query) { return api.index(query); };\n        this.store = store;\n        this.data$ = this.store.select(getGroupAll);\n        this.active$ = this.store.select(getGroupListActive);\n        this.dataArray$ = this.data$.pipe(PageResults$);\n    }\n    GroupsList.prototype.setData = function (data) {\n        this.store.dispatch(new SetGroupsAll(data));\n    };\n    GroupsList.prototype.setLoading = function (data) {\n        console.log(\"loading\", data);\n    };\n    GroupsList.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        this.store.dispatch(new SetListActive$1(isActive));\n    };\n    GroupsList.prototype.setQuery = function () { };\n    GroupsList.prototype.firstDataEffect = function (data) {\n        this.setLoading(false);\n    };\n    GroupsList.prototype.getRoots = function () {\n        return this.api$({ has_parent: false });\n    };\n    GroupsList.prototype.getChildren = function (groupId) {\n        return this.api$({ parent_group_id: groupId });\n    };\n    GroupsList.prototype.getDefaultQuery = function () {\n        return __assign$16({ page_size: 10 }, this.defaultQuery);\n    };\n    GroupsList.prototype.clearData = function () {\n        this.setData(null);\n    };\n    GroupsList.prototype.destroy = function () {\n        this.clearData();\n        this.setActive(false);\n        this.dataSub.unsubscribe();\n    };\n    return GroupsList;\n}());\nvar GroupsListClient = clientSubMixin(getPageDataMixin(getFirstDataMixin(listQueryMixin(GroupsList))));\n// applyMixins(GroupsListClient, [ListGetData, ListQuery, ClientSub]);\nvar __extends$30 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$17 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar GroupsItem = (function (_super) {\n    __extends$30(GroupsItem, _super);\n    function GroupsItem(_a) {\n        var store = _a.store, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.name = \"group\";\n        _this.defaultQuery = { ordering: \"-created_at\" };\n        _this.updateStrategy = \"once\";\n        _this.query$ = of$1({});\n        _this.data$ = empty$1();\n        _this.loading$ = of$1(false);\n        _this.api$ = function (id, query) { return api.get(id, query); };\n        _this.store = store;\n        _this.id$ = _this.store.select(getGroupId);\n        return _this;\n        // this.init()\n    }\n    GroupsItem.prototype.getDefaultQuery = function () {\n        return __assign$17({}, _super.prototype.getDefaultQuery.call(this), this.defaultQuery);\n    };\n    GroupsItem.prototype.setId = function (id) {\n        this.store.dispatch(new SetGroupId(id));\n    };\n    GroupsItem.prototype.setData = function (data) {\n        this.store.dispatch(new SetGroup(data));\n    };\n    GroupsItem.prototype.setLoading = function (data) { };\n    GroupsItem.prototype.setQuery = function () { };\n    GroupsItem.prototype.clearData = function () {\n        this.setData(null);\n    };\n    GroupsItem.prototype.destroy = function () {\n        this.clearData();\n        this.dataSub.unsubscribe();\n    };\n    return GroupsItem;\n}(EntityItemClient));\nvar GroupsItemClient = clientSubMixin(getIdQueryDataMixin(getFirstDataMixin(itemQueryMixin(GroupsItem))));\n// applyMixins(GroupsItemClient, [ItemGetData, ItemQuery, ClientSub]);\n// export const groupsItemsClientFactory = (config = {}): GroupsItem => {\n//   let innerConfig = {\n//     name: 'group',\n//     defaultQuery: {ordering: '-created_at'},\n//     updateStrategy: 'once',\n//     ...config\n//   };\n//\n//   let itemSelector: EntityItemSelectors = {\n//     id$: store.select(fromGroup.getGroupId),\n//     query$: Observable.of({}),\n//     data$: Observable.empty(),\n//     loading$: Observable.of(false),\n//   };\n//\n//   let dispatchers: EntityItemDispatchers = {\n//     setId(id) {\n//       store.dispatch(new fromGroupDispatcher.SetGroupId(id))\n//     },\n//     setData(data) {\n//       store.dispatch(new fromGroupDispatcher.SetGroup(data))\n//     },\n//     setLoading(data) {\n//\n//     },\n//     setQuery() {\n//\n//     }\n//\n//   };\n//\n//   const state = {\n//     api$: (id, query?) => clientApi.groups.get(id, query),\n//     dispatchers,\n//     selectors: itemSelector\n//   };\n//\n//   let groupsIndex = entityClientFactory(state, innerConfig, 'item');\n//   groupsIndex.init();\n//   return groupsIndex as GroupsItem;\n//\n// };\nvar __extends$29 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtGroupsClient = (function (_super) {\n    __extends$29(HtGroupsClient, _super);\n    function HtGroupsClient(options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var _this = _super.call(this) || this;\n        var api = new HtApi().groups;\n        _this.api = api;\n        var store = ApiStoreService.getNewInstance();\n        store.addReducer(\"groups\", groupsReducer);\n        _this.store = store;\n        _this.list = new GroupsListClient({ store: store, api: api });\n        _this.item = new GroupsItemClient({ store: store, api: api });\n        return _this;\n    }\n    HtGroupsClient.prototype.key$ = function (id) {\n        return this.api.get(id).pipe(map$1(function (group) {\n            return group[\"token\"];\n        }));\n    };\n    HtGroupsClient.prototype.lookupIdKey$ = function (lookupId) {\n        return this.api.index({ lookup_id: lookupId }).pipe(map$1(function (groupPage) {\n            return groupPage && groupPage[\"results\"]\n                ? groupPage[\"results\"][0][\"token\"]\n                : null;\n        }));\n    };\n    HtGroupsClient.prototype.getChildren = function (groupId) {\n        var query = { parent_group_id: groupId };\n        return this.getAll(query);\n    };\n    HtGroupsClient.prototype.getRoot = function () {\n        var query = { has_parent: false };\n        return this.getAll(query);\n    };\n    HtGroupsClient.prototype.getAll = function (query) {\n        return this.api.allPages(this.api.index(query));\n    };\n    return HtGroupsClient;\n}(EntityClient));\nvar groupsClientFactory = function (options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var dateRange = options.noDateRange\n        ? null\n        : options.dateRange || dateRangeService.getInstance();\n    return new HtGroupsClient({ dateRange: dateRange });\n};\nvar __extends$31 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar AccountUser = (function (_super) {\n    __extends$31(AccountUser, _super);\n    function AccountUser(_a) {\n        var dateParam = _a.dateParam, store = _a.store, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.query$ = of$1({});\n        _this.updateStrategy = \"once\";\n        _this.pollDuration = 10000;\n        _this.api$ = function (id, query) { return api.get(id, query); };\n        _this.store = store;\n        // this.active$ = this.store.select(fromRoot.getUsersAnalyticsIsActive);\n        _this.data$ = _this.store.select(getAccountUser);\n        _this.id$ = _this.store.select(getAccountUserId);\n        _this.loading$ = _this.store.select(getAccountCurrentKey);\n        return _this;\n        // this.init()\n    }\n    AccountUser.prototype.getDefaultQuery = function () {\n        return {};\n    };\n    AccountUser.prototype.setId = function (id) {\n        this.store.dispatch(new SetUserId(id));\n    };\n    AccountUser.prototype.setLoading = function (loading) { };\n    AccountUser.prototype.setData = function (data) {\n        this.store.dispatch(new SetAccountUser(data));\n    };\n    return AccountUser;\n}(EntityItemClient));\nvar AccountUserClient = clientSubMixin(getIdQueryDataMixin(getFirstDataMixin(itemQueryMixin(AccountUser))));\nvar MembershipsAll = /*@__PURE__*/ (function () {\n    function MembershipsAll(_a) {\n        var dateParam = _a.dateParam, store = _a.store, api = _a.api;\n        this.query$ = of$1({});\n        this.updateStrategy = \"once\";\n        this.pollDuration = 10000;\n        this.active$ = of$1(true);\n        this.loading$ = new BehaviorSubject$1(false);\n        this.api$ = function (id, query) { return api.membershipsAll(id, query); };\n        this.store = store;\n        // this.active$ = this.store.select(fromRoot.getUsersAnalyticsIsActive);\n        this.data$ = this.store.select(getAccountMembershipsAll);\n        this.id$ = this.store.select(getAccountUserId);\n        // this.loading$ = this.store.select(fromRoot.getAccountCurrentKey);\n        // this.init()\n    }\n    MembershipsAll.prototype.firstDataEffect = function () {\n        this.setLoading();\n    };\n    MembershipsAll.prototype.getDefaultQuery = function () {\n        return { page_size: 100 };\n    };\n    MembershipsAll.prototype.setLoading = function (loading) {\n        if (loading === void 0) {\n            loading = true;\n        }\n        this.loading$.next(loading);\n    };\n    MembershipsAll.prototype.addData = function (data) {\n        this.store.dispatch(new SetMembershipsAll(data));\n    };\n    return MembershipsAll;\n}());\nvar MemberShipsClient = listAllClientSubMixin(getIdQueryDataMixin(getFirstDataMixin(itemQueryMixin(MembershipsAll))));\nvar AccountsClient = /*@__PURE__*/ (function () {\n    function AccountsClient() {\n        var api = new HtApi().accountUser;\n        this.api = api;\n        this.store = ApiStoreService.getInstance();\n        this.store.addReducer(\"accounts\", reducer$1);\n        this.accountUser = new AccountUserClient({ store: this.store, api: api });\n        this.memberships = new MemberShipsClient({ store: this.store, api: api });\n    }\n    AccountsClient.prototype.setToken = function (token) {\n        this.store.dispatch(new SetKey(token));\n    };\n    return AccountsClient;\n}());\nvar ActionsGraph = /*@__PURE__*/ (function () {\n    function ActionsGraph(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        this.query$ = of$1({});\n        this.dataBehaviour$ = new BehaviorSubject$1(null);\n        this.data$ = this.dataBehaviour$.asObservable();\n        this.loadingBehaviour$ = new BehaviorSubject$1(false);\n        this.loading$ = this.loadingBehaviour$.asObservable();\n        this.updateStrategy = \"once\";\n        this.pollDuration = 10000;\n        this.api$ = function (query) { return api.graph(query); };\n        this.dateRange = dateRange;\n        this.dateParam = dateParam;\n    }\n    ActionsGraph.prototype.getDefaultQuery = function () {\n        return {};\n    };\n    ActionsGraph.prototype.setData = function (data) {\n        this.dataBehaviour$.next(data);\n    };\n    ActionsGraph.prototype.firstDataEffect = function () {\n        this.setLoading(false);\n    };\n    ActionsGraph.prototype.setLoading = function (loading) {\n        if (loading === void 0) {\n            loading = true;\n        }\n        this.loadingBehaviour$.next(!!loading);\n    };\n    ActionsGraph.prototype.clearData = function () {\n        this.setData(null);\n    };\n    ActionsGraph.prototype.destroy = function () {\n        this.clearData();\n        this.dataSub.unsubscribe();\n    };\n    return ActionsGraph;\n}());\nvar ActionsGraphClient = clientSubMixin(getQueryDataMixin(getFirstDataMixin(listQueryMixin(ActionsGraph))));\nvar __extends$32 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ActionsList = (function (_super) {\n    __extends$32(ActionsList, _super);\n    function ActionsList(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.api$ = function (query) {\n            return api.index(query);\n        };\n        _this.dateRange = dateRange;\n        _this.store = store;\n        _this.query$ = _this.store.select(getActionsListQuery);\n        _this.dateParam = dateParam;\n        _this.active$ = _this.store.select(getActionsListActive);\n        _this.data$ = _this.store.select(getActionsList);\n        _this.loading$ = _this.store.select(getActionsListLoading);\n        _this.dataArray$ = _this.data$.pipe(PageResults$);\n        return _this;\n        // this.init()\n    }\n    ActionsList.prototype.setActive = function (active) {\n        if (active === void 0) {\n            active = true;\n        }\n        this.store.dispatch(new SetListActive$2(active));\n    };\n    ActionsList.prototype.setLoading = function (loading) {\n        this.store.dispatch(new SetListLoading(loading));\n    };\n    ActionsList.prototype.setData = function (data) {\n        this.store.dispatch(new SetList(data));\n    };\n    ActionsList.prototype.setQuery = function (query) {\n        this.store.dispatch(new SetListQuery$1(query));\n    };\n    return ActionsList;\n}(EntityListClient));\nvar ActionsListClient = clientSubMixin(getPageDataMixin(getFirstDataMixin(listQueryMixin(ActionsList))));\nvar __extends$33 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ActionsSummary = (function (_super) {\n    __extends$33(ActionsSummary, _super);\n    function ActionsSummary(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.allowedQueryMap = [\n            {\n                key: \"show_all\",\n            },\n            {\n                key: \"search\"\n            }\n        ];\n        _this.updateStrategy = 'live';\n        // updateStrategy = 'once';\n        _this.filter = new ActionsFilter();\n        _this.api$ = function (query) { return api.summary(query); };\n        _this.dateRange = dateRange;\n        _this.store = store;\n        _this.dateParam = dateParam;\n        _this.query$ = _this.store.select(getActionsSummaryQuery);\n        _this.active$ = _this.store.select(getActionsSummaryActive);\n        _this.data$ = _this.store.select(getActionsSummary);\n        _this.summaryChart$ = _this.getSummaryChart();\n        _this.loading$ = _this.store.select(getActionsSummaryLoading);\n        return _this;\n    }\n    ActionsSummary.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        isActive = isActive ? new Date().toISOString() : isActive;\n        this.store.dispatch(new SetSummaryActive$1(isActive));\n    };\n    ActionsSummary.prototype.setLoading = function (loading) {\n        this.store.dispatch(new SetSummaryLoading$1(loading));\n    };\n    ActionsSummary.prototype.setData = function (data) {\n        this.store.dispatch(new SetSummary(data));\n    };\n    ActionsSummary.prototype.setQuery = function (query) {\n        this.store.dispatch(new SetSummaryQuery(query));\n    };\n    ActionsSummary.prototype.getSummaryChart = function () {\n        var _this = this;\n        return this.data$.pipe(map$1(function (summaryData) {\n            return _this.filter.summaryCharts(_this.filter.statusQueryArray, summaryData);\n        }));\n    };\n    return ActionsSummary;\n}(EntityListClient));\nvar ActionsSummaryClient = clientSubMixin(getQueryDataMixin(getFirstDataMixin(listQueryMixin(ActionsSummary))));\nvar ActionsHeatmap = /*@__PURE__*/ (function () {\n    function ActionsHeatmap(_a) {\n        var dateRange = _a.dateRange, dateParam = _a.dateParam, api = _a.api;\n        this.query$ = of$1({});\n        this.loadingState$ = new BehaviorSubject$1(false);\n        this.loading$ = this.loadingState$.asObservable();\n        this.dataState$ = new BehaviorSubject$1(null);\n        this.data$ = this.dataState$.asObservable();\n        this.active$ = new BehaviorSubject$1(false);\n        this.dataArray$ = this.data$.pipe(PageResults$);\n        this.api$ = function (query) { return api.allPages(api.heatmap(query)); };\n        this.dateRange = dateRange;\n        this.dateParam = dateParam;\n    }\n    ActionsHeatmap.prototype.setActive = function (active) {\n        if (active === void 0) {\n            active = true;\n        }\n        this.active$.next(active);\n    };\n    ActionsHeatmap.prototype.getDefaultQuery = function () {\n        return { page_size: 300 };\n    };\n    ActionsHeatmap.prototype.firstDataEffect = function (data) {\n        if ((data && !data.next) || !data) {\n            this.setLoading(false);\n        }\n    };\n    ActionsHeatmap.prototype.setLoading = function (isLoading) {\n        this.loadingState$.next(isLoading);\n    };\n    ActionsHeatmap.prototype.setData = function (data) {\n        this.dataState$.next(data);\n    };\n    ActionsHeatmap.prototype.addData = function (data) {\n        this.dataState$.next(data);\n    };\n    return ActionsHeatmap;\n}());\nvar ActionsHeatmapClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(ActionsHeatmap))));\nvar __extends$34 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ActionsIndexAll = (function (_super) {\n    __extends$34(ActionsIndexAll, _super);\n    function ActionsIndexAll(_a) {\n        var dateRange = _a.dateRange, store = _a.store, dateParam = _a.dateParam, api = _a.api;\n        var _this = _super.call(this) || this;\n        _this.dataBehaviour$ = new BehaviorSubject$1(null);\n        _this.loadingBehaviour$ = new BehaviorSubject$1(false);\n        _this.loading$ = _this.loadingBehaviour$.asObservable();\n        _this.activeBehaviour$ = new BehaviorSubject$1(false);\n        _this.api$ = function (query) { return api.allPages(api.index(query)); };\n        _this.dateRange = dateRange;\n        _this.dateParam = dateParam;\n        _this.query$ = new BehaviorSubject$1(_this.getDefaultQuery());\n        _this.active$ = _this.activeBehaviour$.asObservable();\n        return _this;\n    }\n    ActionsIndexAll.prototype.setActive = function (isActive) {\n        if (isActive === void 0) {\n            isActive = true;\n        }\n        this.activeBehaviour$.next(isActive);\n    };\n    ActionsIndexAll.prototype.setQuery = function (query) {\n        this.query$.next(query);\n    };\n    Object.defineProperty(ActionsIndexAll.prototype, \"data$\", {\n        get: function () {\n            return this.dataBehaviour$.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActionsIndexAll.prototype.addData = function (data) {\n        this.dataBehaviour$.next(data);\n    };\n    ActionsIndexAll.prototype.setData = function (data) {\n        this.dataBehaviour$.next(data);\n    };\n    ActionsIndexAll.prototype.setLoading = function (loading) {\n    };\n    return ActionsIndexAll;\n}(EntityAllItemsClient));\nvar ActionsIndexAllClient = listAllClientSubMixin(getAllPageDataMixin(getFirstDataMixin(listQueryMixin(ActionsIndexAll))));\nvar HtActionsClient = /*@__PURE__*/ (function () {\n    function HtActionsClient(config) {\n        this.filters = new ActionsFilter();\n        var api = new HtApi().actions;\n        this.api = api;\n        var store = ApiStoreService.getNewInstance();\n        store.addReducer(\"actions\", actionsReducer);\n        this.store = store;\n        var dateRange = config.dateRange;\n        var dateParam = 'created_at';\n        this.graph = new ActionsGraphClient({ dateRange: dateRange, dateParam: dateParam, api: api });\n        this.list = new ActionsListClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });\n        this.listAll = new ActionsIndexAllClient({ dateRange: dateRange, dateParam: dateParam, api: api });\n        this.summary = new ActionsSummaryClient({ dateRange: dateRange, store: store, dateParam: dateParam, api: api });\n        this.heatmap = new ActionsHeatmapClient({ dateRange: dateRange, dateParam: 'completed_at', api: api });\n    }\n    return HtActionsClient;\n}());\nvar actionsClientFactory = function (options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var dateRange = options.dateRange || dateRangeService.getInstance();\n    return new HtActionsClient({ dateRange: dateRange });\n};\nvar HtClient = /*@__PURE__*/ (function () {\n    function HtClient(token, request) {\n        if (token === void 0) {\n            token = \"\";\n        }\n        htRequestService.setInstance(request);\n        this.token = token;\n    }\n    Object.defineProperty(HtClient.prototype, \"token\", {\n        set: function (token) {\n            htRequestService.getInstance().tokenServie.token = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtClient.prototype, \"tempToken\", {\n        set: function (token) {\n            htRequestService.getInstance().tokenServie.tempToken = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HtClient;\n}());\nvar initClient = function (token, request) {\n    return htClientService.getInstance(token, request);\n};\nvar htClientFactory = function (token, request) {\n    return new HtClient(token, request);\n};\nvar htClientService = (function () {\n    var instance;\n    return {\n        getInstance: function (token, request) {\n            if (token === void 0) {\n                token = \"\";\n            }\n            if (!instance) {\n                instance = htClientFactory(token, request);\n            }\n            return instance;\n        }\n    };\n})();\nvar SET_USER_ANALYTICS = \"[LOADING] set user analytics\";\nvar SET_USER_INDEX = \"[LOADING] set user index\";\nvar SET_USER_ANALYTICS_ALL = \"[LOADING] set user analytics all\";\nvar SET_USER_INDEX_ALL = \"[LOADING] set user index all\";\nvar SetLoadingUserAnalytics = /*@__PURE__*/ (function () {\n    function SetLoadingUserAnalytics(payload) {\n        this.payload = payload;\n        this.type = SET_USER_ANALYTICS;\n    }\n    return SetLoadingUserAnalytics;\n}());\nvar SetLoadingUserIndex = /*@__PURE__*/ (function () {\n    function SetLoadingUserIndex(payload) {\n        this.payload = payload;\n        this.type = SET_USER_INDEX;\n    }\n    return SetLoadingUserIndex;\n}());\nvar SetLoadingUserAnalyticsAll = /*@__PURE__*/ (function () {\n    function SetLoadingUserAnalyticsAll(payload) {\n        this.payload = payload;\n        this.type = SET_USER_ANALYTICS_ALL;\n    }\n    return SetLoadingUserAnalyticsAll;\n}());\nvar SetLoadingUserIndexAll = /*@__PURE__*/ (function () {\n    function SetLoadingUserIndexAll(payload) {\n        this.payload = payload;\n        this.type = SET_USER_INDEX_ALL;\n    }\n    return SetLoadingUserIndexAll;\n}());\nvar LoadingDispatcher = Object.freeze({\n    SET_USER_ANALYTICS: SET_USER_ANALYTICS,\n    SET_USER_INDEX: SET_USER_INDEX,\n    SET_USER_ANALYTICS_ALL: SET_USER_ANALYTICS_ALL,\n    SET_USER_INDEX_ALL: SET_USER_INDEX_ALL,\n    SetLoadingUserAnalytics: SetLoadingUserAnalytics,\n    SetLoadingUserIndex: SetLoadingUserIndex,\n    SetLoadingUserAnalyticsAll: SetLoadingUserAnalyticsAll,\n    SetLoadingUserIndexAll: SetLoadingUserIndexAll\n});\nvar SET_DATE_RANGE = \"[QUERY] set date range\";\nvar SET_USER_QUERY = \"[QUERY] set user query\";\nvar SET_USER_QUERY_RESET_PAGE = \"[QUERY] set user query reset page\";\nvar CLEAR_USER_QUERY_KEY = \"[QUERY] clear user query key\";\nvar SET_USER_ID$1 = \"[USERS] set user id\";\nvar TOGGLE_USER_ID = \"[USERS] toggle user id\";\nvar SET_PLACELINE_QUERY$1 = \"[USERS] Set placeline query\";\nvar SetDateRange = /*@__PURE__*/ (function () {\n    function SetDateRange(payload) {\n        this.payload = payload;\n        this.type = SET_DATE_RANGE;\n    }\n    return SetDateRange;\n}());\nvar SetUserQuery = /*@__PURE__*/ (function () {\n    function SetUserQuery(payload) {\n        this.payload = payload;\n        this.type = SET_USER_QUERY;\n    }\n    return SetUserQuery;\n}());\nvar SetUserQueryResetPage = /*@__PURE__*/ (function () {\n    function SetUserQueryResetPage(payload) {\n        this.payload = payload;\n        this.type = SET_USER_QUERY_RESET_PAGE;\n    }\n    return SetUserQueryResetPage;\n}());\nvar ClearUserQueryKey = /*@__PURE__*/ (function () {\n    function ClearUserQueryKey(payload) {\n        this.payload = payload;\n        this.type = CLEAR_USER_QUERY_KEY;\n    }\n    return ClearUserQueryKey;\n}());\nvar SetUserId$1 = (function () {\n    function SetUserId(payload) {\n        this.payload = payload;\n        this.type = SET_USER_ID$1;\n    }\n    return SetUserId;\n}());\nvar ToggleUserId = /*@__PURE__*/ (function () {\n    function ToggleUserId(payload) {\n        this.payload = payload;\n        this.type = TOGGLE_USER_ID;\n    }\n    return ToggleUserId;\n}());\nvar SetPlacelineQuery$1 = (function () {\n    function SetPlacelineQuery(payload) {\n        if (payload === void 0) {\n            payload = {};\n        }\n        this.payload = payload;\n        this.type = SET_PLACELINE_QUERY$1;\n    }\n    return SetPlacelineQuery;\n}());\nvar QueryDispatcher = Object.freeze({\n    SET_DATE_RANGE: SET_DATE_RANGE,\n    SET_USER_QUERY: SET_USER_QUERY,\n    SET_USER_QUERY_RESET_PAGE: SET_USER_QUERY_RESET_PAGE,\n    CLEAR_USER_QUERY_KEY: CLEAR_USER_QUERY_KEY,\n    SET_USER_ID: SET_USER_ID$1,\n    TOGGLE_USER_ID: TOGGLE_USER_ID,\n    SET_PLACELINE_QUERY: SET_PLACELINE_QUERY$1,\n    SetDateRange: SetDateRange,\n    SetUserQuery: SetUserQuery,\n    SetUserQueryResetPage: SetUserQueryResetPage,\n    ClearUserQueryKey: ClearUserQueryKey,\n    SetUserId: SetUserId$1,\n    ToggleUserId: ToggleUserId,\n    SetPlacelineQuery: SetPlacelineQuery$1\n});\nvar Dispatcher$1 = {\n    groups: GroupsDispatcher,\n    users: UsersDispatcher,\n    loading: LoadingDispatcher,\n    query: QueryDispatcher,\n    Segment: SegmentsDispatcher\n};\n//helper\n// export * from \"./helpers/operators\"\n// import \"rxjs/add/operator/let\";\nexport { defaultListConfig, ApiType, HtUsersClient, usersClientFactory, UsersPlaceline, UsersPlacelineClient, UsersAnalytics, UsersAnalyticsClient, UsersAnalyticsListAll, UsersAnalyticsListAllClient, UsersSummary, UsersSummaryClient, UsersHeatmap, UsersHeatmapClient, DefaultUsersFilter, ActionsFilter, HtGroupsClient, groupsClientFactory, GroupsList, GroupsListClient, GroupsItem, GroupsItemClient, AccountsClient, AccountUser, AccountUserClient, MembershipsAll, MemberShipsClient, HtActionsClient, actionsClientFactory, ActionsGraph, ActionsGraphClient, ActionsList, ActionsListClient, ActionsSummary, ActionsSummaryClient, ActionsHeatmap, ActionsHeatmapClient, defaultDateRange, DateRange, dateRangeFactory, dateRangeService, HtClient, initClient, htClientFactory, htClientService, reducers, reducer, metaReducers, getUsersState, getUsersUsersData, getUsersPlacelineId, getUsersPlacelineQuery, getUsersPlacelineLoading, getUsersListActive, getUsersListId, getUsersListQuery, getUsersAnalyticsPage, getUsersAnalyticsLoading, getUsersIndexPage, getUsersIndexIsActive, getUsersAnalyticsIsActive, getUsersIndexMarkersIsActive, getUsersAnalyticsMarkersIsActive, getUsersAnalyticsAllLoading, getUsersIndexFilteredMarker, getUsersAnalyticsFilteredMarker, getUsersIndexAll, getUsersAnalyticsAll, getUsersSummary, getUsersSummaryActive, getUsersSummaryLoading, getSegmentsState, getSegmentsSelectedId, getSegmentsResetMapId, getGroupsState, getGroupId, getGroupAll, getGroupListActive, getAccountState, getAccountUser, getAccountMembershipsAll, getAccountKey, getAccountTempKey, getAccountCurrentKey, getAccountUserId, getActionsState, getActionsList, getActionsListLoading, getActionsListActive, getActionsListQuery, getActionsSummary, getActionsSummaryActive, getActionsSummaryLoading, getActionsSummaryQuery, getActionsGraph, getActionsGraphLoading, getActionsGraphQuery, Dispatcher$1 as Dispatcher };\n",null]}