{"remainingRequest":"/Github/UniDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Github/UniDashboard/node_modules/ht-api/dist/ht-api.es5.js","dependencies":[{"path":"/Github/UniDashboard/node_modules/ht-api/dist/ht-api.es5.js","mtime":0},{"path":"/Github/UniDashboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Github/UniDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { HtQuerySerialize } from 'ht-utility';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { expand, map } from 'rxjs/operators';\nimport { empty } from 'rxjs/observable/empty';\nvar HtToken = /*@__PURE__*/ (function () {\n    function HtToken(token) {\n        if (token === void 0) {\n            token = \"\";\n        }\n        this.token = token;\n    }\n    Object.defineProperty(HtToken.prototype, \"token\", {\n        get: function () {\n            return this._token;\n        },\n        set: function (token) {\n            this._token = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"tempToken\", {\n        get: function () {\n            return this._tempToken;\n        },\n        set: function (token) {\n            this._groupToken = \"\";\n            this._tempToken = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"groupToken\", {\n        get: function () {\n            return this._groupToken;\n        },\n        set: function (token) {\n            this._groupToken = token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtToken.prototype, \"currentToken\", {\n        get: function () {\n            return this.groupToken || this.tempToken || this.token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HtToken;\n}());\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtRequest = /*@__PURE__*/ (function () {\n    function HtRequest(token) {\n        this.baseUrl = \"https://api.hypertrack.com/api/v1/\";\n        this.isAdmin = false;\n        this.defaultHeader = { \"X-Hypertrack-Client\": 'js-sdk' };\n        this.tokenServie = new HtToken(token);\n    }\n    HtRequest.prototype.setClientType = function (clientType) {\n        this.defaultHeader = __assign({}, this.defaultHeader, { \"X-Hypertrack-Client\": clientType });\n    };\n    HtRequest.prototype.setBaseUrl = function (baseUrl) {\n        this.baseUrl = baseUrl;\n    };\n    Object.defineProperty(HtRequest.prototype, \"token\", {\n        get: function () {\n            return this.tokenServie.token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HtRequest.prototype, \"currentToken\", {\n        get: function () {\n            var token = this.tokenServie.currentToken;\n            return token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HtRequest.prototype.headerObj = function (token) {\n        return __assign({ Authorization: \"token \" + (token || this.currentToken) }, this.defaultHeader);\n    };\n    HtRequest.prototype.adminHeaderObj = function () {\n        return __assign({ Authorization: \"token \" + this.token }, this.defaultHeader);\n    };\n    HtRequest.prototype.headerStrings = function () {\n        return [\"Authorization\", \"token \" + this.currentToken];\n    };\n    HtRequest.prototype.url = function (url, query, isPure) {\n        if (query === void 0) {\n            query = {};\n        }\n        if (isPure === void 0) {\n            isPure = false;\n        }\n        if (isPure)\n            return url;\n        var string = HtQuerySerialize(query);\n        return this.baseUrl + url + \"?\" + string;\n    };\n    HtRequest.prototype.getObservable = function (url, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var p = this.getFetch(url, options);\n        return fromPromise(p);\n    };\n    HtRequest.prototype.postObservable = function (url, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var p = this.postFetch(url, body, options);\n        return fromPromise(p);\n    };\n    HtRequest.prototype.api$ = function (url, query, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        url = this.url(url, query, options.pureUrl);\n        var headers = options.isAdmin ? this.adminHeaderObj() : this.headerObj(options.token);\n        return this.getObservable(url, { headers: headers });\n    };\n    HtRequest.prototype.postApi$ = function (url, body, options) {\n        url = this.url(url);\n        var headers = options.isAdmin ? this.adminHeaderObj() : this.headerObj(options.token);\n        return this.postObservable(url, body, { headers: headers });\n    };\n    HtRequest.prototype.getFetch = function (url, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return fetch(url, options).then(function (res) {\n            return res.json();\n        });\n    };\n    HtRequest.prototype.postFetch = function (url, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return fetch(url, __assign({ method: \"POST\", body: JSON.stringify(body) }, options)).then(function (res) { return res.json(); });\n    };\n    return HtRequest;\n}());\nvar htRequestService = (function () {\n    var instance;\n    return {\n        getInstance: function (token) {\n            if (!instance) {\n                instance = new HtRequest(token);\n            }\n            return instance;\n        },\n        setInstance: function (newintance) {\n            if (instance) {\n                var tokenService = instance.tokenServie;\n                newintance.tokenServie = tokenService;\n            }\n            instance = newintance;\n        }\n    };\n})();\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtBaseApi = /*@__PURE__*/ (function () {\n    function HtBaseApi(request, base) {\n        this.request = request;\n        this.base = base;\n    }\n    HtBaseApi.prototype.get = function (id, query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\" + id + \"/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.index = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.summary = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/summary/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.heatmap = function (query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/heatmap/\";\n        return this.api$(path, query, { token: token });\n    };\n    HtBaseApi.prototype.api$ = function (path, query, options) {\n        if (query === void 0) {\n            query = {};\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        return this.request.api$(path, query, options);\n    };\n    HtBaseApi.prototype.postApi$ = function (path, body, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.request.postApi$(path, body, options);\n    };\n    // getReqFromTail<T>(tail, query = {}, options = {}): Observable<T> {\n    //   return this.request.api$(this.base + tail, query, options)\n    // }\n    //\n    // postReqFromTail<T>(tail, body, options?): Observable<T> {\n    //   return this.request.postApi$(this.base + tail, body, options)\n    // }\n    HtBaseApi.prototype.placeline = function (id, query, token) {\n        if (query === void 0) {\n            query = {};\n        }\n        var tail = this.base + (\"/\" + id + \"/placeline/\");\n        return this.api$(tail, query, { token: token });\n    };\n    HtBaseApi.prototype.allPages = function (api$, options) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        return api$.pipe(expand(function (data) {\n            return data[\"next\"]\n                ? _this.request.api$(data[\"next\"], {}, __assign$1({}, options, { pureUrl: true })).pipe(map(function (newData) {\n                    return __assign$1({}, newData, { results: data.results.concat(newData.results) });\n                }))\n                : empty();\n        }));\n    };\n    HtBaseApi.prototype.analytics = function (query) {\n        return empty();\n    };\n    return HtBaseApi;\n}());\nimport { __extends } from \"tslib\";\nvar HtUsersApi = /*@__PURE__*/ (function (_super) {\n    __extends(HtUsersApi, _super);\n    function HtUsersApi(request) {\n        var _this = _super.call(this, request, \"users\") || this;\n        _this.name = \"user\";\n        return _this;\n    }\n    HtUsersApi.prototype.analytics = function (query, token) {\n        var path = this.base + \"/analytics/\";\n        return this.api$(path, query, { token: token });\n    };\n    return HtUsersApi;\n}(HtBaseApi));\nvar __extends$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtActionsApi = (function (_super) {\n    __extends$1(HtActionsApi, _super);\n    function HtActionsApi(request) {\n        var _this = _super.call(this, request, \"actions\") || this;\n        _this.name = \"Action\";\n        return _this;\n    }\n    HtActionsApi.prototype.graph = function (query, token) {\n        var path = this.base + \"/graph/\";\n        return this.api$(path, query, { token: token }).pipe(map(function (obj) {\n            return Object.keys(obj).reduce(function (dataArray, key) {\n                dataArray.push(obj[key]);\n                return dataArray;\n            }, []).sort(function (a, b) {\n                return new Date(a.created_date).getTime() - new Date(b.created_date).getTime();\n            });\n        }));\n    };\n    return HtActionsApi;\n}(HtBaseApi));\nvar htActionsApi = function (request) { return new HtActionsApi(request); };\nvar __extends$2 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtGroupsApi = (function (_super) {\n    __extends$2(HtGroupsApi, _super);\n    function HtGroupsApi(request) {\n        var _this = _super.call(this, request, \"groups\") || this;\n        _this.name = \"group\";\n        return _this;\n    }\n    HtGroupsApi.prototype.children = function (groupId, token) {\n        var query = { parent_group_id: groupId };\n        return this.getAll(query, token);\n    };\n    HtGroupsApi.prototype.root = function (token) {\n        var query = { has_parent: false };\n        return this.getAll(query, token);\n    };\n    HtGroupsApi.prototype.getAll = function (query, token) {\n        return this.allPages(this.index(query, token));\n    };\n    return HtGroupsApi;\n}(HtBaseApi));\nvar __extends$3 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HtAccountUserApi = (function (_super) {\n    __extends$3(HtAccountUserApi, _super);\n    function HtAccountUserApi(request) {\n        var _this = _super.call(this, request, \"account_users\") || this;\n        _this.name = \"user\";\n        return _this;\n    }\n    HtAccountUserApi.prototype.login = function (user) {\n        var tail = \"login/\";\n        return this.request.postObservable(this.request.baseUrl + tail, user);\n    };\n    HtAccountUserApi.prototype.get = function (id, token) {\n        var path = this.base + \"/\" + id + \"/\";\n        return this.api$(path, {}, { isAdmin: true });\n    };\n    HtAccountUserApi.prototype.memberships = function (id, query, options) {\n        if (query === void 0) {\n            query = {};\n        }\n        var path = this.base + \"/\" + id + \"/memberships/\";\n        return this.api$(path, query, options);\n    };\n    HtAccountUserApi.prototype.membershipsAll = function (id, query, token) {\n        var options = { isAdmin: true, token: token };\n        return this.allPages(this.memberships(id, query, options), options);\n    };\n    return HtAccountUserApi;\n}(HtBaseApi));\nvar HtApi = /*@__PURE__*/ (function () {\n    function HtApi(token) {\n        this.request = htRequestService.getInstance();\n        if (token)\n            this.request.tokenServie.token = token;\n        this.users = new HtUsersApi(this.request);\n        this.actions = new HtActionsApi(this.request);\n        this.groups = new HtGroupsApi(this.request);\n        this.accountUser = new HtAccountUserApi(this.request);\n    }\n    HtApi.prototype.setToken = function (token) {\n        this.request.tokenServie.token = token;\n    };\n    return HtApi;\n}());\nvar __extends$4 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign$2 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar HtTrackingApi = (function (_super) {\n    __extends$4(HtTrackingApi, _super);\n    function HtTrackingApi(request) {\n        var _this = _super.call(this, request, \"actions\") || this;\n        _this.name = \"Tracking\";\n        _this.trackType = {\n            shortCode: \"short_code\",\n            lookupId: 'lookup_id',\n            collectionId: 'collection_id',\n            actionId: 'id'\n        };\n        return _this;\n    }\n    HtTrackingApi.prototype.track = function (id, idType, token) {\n        if (idType === void 0) {\n            idType = 'shortCode';\n        }\n        var trackKey = this.trackType[idType];\n        if (trackKey) {\n            var query = (_a = {}, _a[trackKey] = id, _a);\n            var path = this.base + \"/track/\";\n            return this.api$(path, query, { token: token }).pipe(map(function (data) {\n                var actions = [];\n                data.results.forEach(function (result) {\n                    var actionsWithAccount = result.actions.map(function (action) {\n                        return __assign$2({}, action, { account: result.account });\n                    });\n                    actions.push.apply(actions, actionsWithAccount);\n                });\n                return actions;\n            }));\n        }\n        else {\n            console.error('Invalid Tracking type ' + idType);\n        }\n        var _a;\n    };\n    return HtTrackingApi;\n}(HtBaseApi));\nexport { htRequestService, HtApi, HtRequest, HtToken, HtAccountUserApi, HtActionsApi, htActionsApi, HtGroupsApi, HtUsersApi, HtBaseApi, HtTrackingApi };\n",null]}