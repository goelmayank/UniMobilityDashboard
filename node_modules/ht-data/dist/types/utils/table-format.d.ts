import { IUserAnalytics, IAction, IUser } from "ht-models";
export declare const tableFormat: (data: object, config: ITableFormatConfig) => any[];
export declare const actionTableFormat: {
    "assigned_at": {
        label: string;
        selector(action: IAction): string;
    };
    "expected_at": {
        label: string;
        selector(action: IAction): string;
    };
    "completed_at": {
        label: string;
        selector(action: IAction): string;
    };
    "distance": {
        label: string;
        selector(action: IAction): string;
    };
    "duration": {
        label: string;
        selector(action: IAction): string;
    };
    "scheduled_at": {
        label: string;
        selector(action: IAction): string;
    };
    "distance&duration": {
        label: string;
        selector(action: IAction): string;
    };
    "type": {
        label: string;
        selector(action: IAction): string;
    };
};
export declare const userTableFormat: {
    "stop_duration": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "last_heartbeat_at": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "last_battery": {
        label: string;
        selector(user: IUser): string;
    };
    "total_duration": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "num_places": {
        label: string;
        selector(user: IUserAnalytics): number;
    };
    "location_disabled_duration": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "total_distance": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "num_trips": {
        label: string;
        selector(user: IUserAnalytics): number;
    };
    "network_offline_duration": {
        label: string;
        selector(user: IUserAnalytics): string;
    };
    "num_actions": {
        label: string;
        selector(user: IUserAnalytics): number;
    };
};
export interface ITableFormatConfig {
    excludes?: string[];
    format: {
        [key: string]: ITableFormat;
    };
}
export interface ITableFormat {
    label: string;
    selector: (data) => string | number;
}
