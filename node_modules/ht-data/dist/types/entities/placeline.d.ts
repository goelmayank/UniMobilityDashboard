import { IUserData, IAction, IEvent, ISegment, ITimelineEvent } from "ht-models";
import { IActionMark, IActivitySegment, IEventMark, IPlacelineSegment, IProcSegment } from "../interfaces";
export declare class HtPlaceline {
    userData: IUserData;
    constructor(userData?: IUserData);
    getPlacelineSegments(): void;
    createActivitiesSegments(userData: any): {
        lastSegment: any;
        activitySegments: any;
    };
    createActivitySegment(segment: ISegment): IActivitySegment | null;
    createEventSegment(eventMark: IEventMark, segment: IActivitySegment): IProcSegment;
    createActionSegment(actionMark: IActionMark, segment: IActivitySegment): IProcSegment;
    createActionsMarks(actions: IAction[]): IActionMark[];
    createEventMark(event: IEvent | ITimelineEvent): IEventMark;
    getLastSegment(lastSeg: ISegment, lastHearbeatAt: string): IPlacelineSegment;
    isLive(placeline: IUserData): boolean;
    getSegmentTypes(userSegments: ISegment[]): any;
    private getActivityStyleClass(segment);
    private getActivityStyle(activityClass?);
    private getActivityClass(segment);
    private setActionCountMap(action, actionCountMap);
    private getActionMark(action, actionMap, isEnd, isDone);
    private getActivityText(segment);
    private getActivityPlaceAddress(segment);
    private getLocationVoidText(segment);
    private getEventDisplay(event);
    private getGapSegment(segment, lastSeg);
}
export declare const htPlaceline: (userData?: IUserData) => HtPlaceline;
