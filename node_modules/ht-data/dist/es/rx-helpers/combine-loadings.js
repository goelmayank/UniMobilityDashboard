import { combineLatest } from "rxjs/observable/combineLatest";
import { distinctUntilChanged, map, share } from "rxjs/operators";
export var CombineLoadings$ = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var loadings$ = args.map(function (loading$) {
        return loading$
            .pipe(map(function (data) { return !!data; }), distinctUntilChanged());
    });
    return combineLatest.apply(void 0, loadings$.concat([function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return args.reduce(function (acc, arg) {
                return acc || arg;
            }, false);
        }])).pipe(distinctUntilChanged(), share());
};
//# sourceMappingURL=combine-loadings.js.map