var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import { expand, map } from "rxjs/operators";
import { empty } from "rxjs/observable/empty";
export function allPages(api$, req$, options) {
    if (options === void 0) { options = {}; }
    return api$.pipe(expand(function (data) {
        return data["next"]
            ? req$(data["next"], options).pipe(map(function (newData) {
                return __assign({}, newData, { results: data.results.concat(newData.results) });
            }))
            : empty();
    }));
}
//# sourceMappingURL=all-pages.js.map