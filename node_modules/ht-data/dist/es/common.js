var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
export var CommonFunctions = {
    setEntityCountMap: function (entity, entityCountMap, uniqueProp) {
        if (entity === void 0) { entity = {}; }
        if (entityCountMap === void 0) { entityCountMap = {}; }
        if (uniqueProp === void 0) { uniqueProp = "id"; }
        var newEntityMap = __assign({}, entityCountMap);
        var type = entity[uniqueProp] + "-count";
        var id = entity["id"];
        var typeCount = entityCountMap[type];
        var actionShort = entityCountMap[id];
        if (typeCount) {
            if (!actionShort) {
                newEntityMap[type] = entityCountMap[type] + 1;
                newEntityMap[id] = "" + entityCountMap[type];
            }
        }
        else {
            newEntityMap[type] = 1;
            newEntityMap[id] = "";
        }
        // console.log(actionMap, "map");
        return newEntityMap;
    }
};
//# sourceMappingURL=common.js.map